import AMSCreateObjectResponse from "./AMSCreateObjectResponse";
import AMSFileInfo from "./AMSFileInfo";
import AMSLogger from "./AMSLogger";
import AMSViewStatusResponse from "./AMSViewStatusResponse";
import FileMetadata from "./FileMetadata";
import InitConfig from "./InitConfig";
import OmnichannelChatToken from "./OmnichannelChatToken";
declare class FramedlessClient {
    private runtimeId;
    private debug;
    private chatToken;
    private logger?;
    private scenarioMarker?;
    constructor(logger?: AMSLogger | undefined);
    setDebug(flag: boolean): void;
    setup(): Promise<void>;
    initialize(initConfig: InitConfig): Promise<void>;
    skypeTokenAuth(chatToken?: OmnichannelChatToken | null): Promise<Response>;
    createObject(id: string, file: File, chatToken?: OmnichannelChatToken | null, supportedImagesMimeTypes?: string[]): Promise<AMSCreateObjectResponse>;
    uploadDocument(documentId: string, file: File | AMSFileInfo, chatToken?: OmnichannelChatToken | null, supportedImagesMimeTypes?: string[]): Promise<FileMetadata>;
    getViewStatus(fileMetadata: FileMetadata, chatToken?: OmnichannelChatToken | null, supportedImagesMimeTypes?: string[]): Promise<AMSViewStatusResponse>;
    getView(fileMetadata: FileMetadata, viewLocation: string, chatToken?: OmnichannelChatToken | null, supportedImagesMimeTypes?: string[]): Promise<Blob>;
    fetchBlob(contentUrl: string): Promise<Blob>;
}
export default FramedlessClient;
