import AMSFileInfo from "./AMSFileInfo";
import AMSLogger from "./AMSLogger";
import FileMetadata from "./FileMetadata";
import FramedClientConfig from "./FramedClientConfig";
import InitConfig from "./InitConfig";
import OmnichannelChatToken from "./OmnichannelChatToken";
import PostMessageEventName from "./PostMessageEventName";
import PostMessageEventType from "./PostMessageEventType";
import PostMessageRequestData from "./PostMessageRequestData";
declare class FramedClient {
    private runtimeId;
    private clientId;
    private iframeId;
    private origin;
    private targetWindow;
    private requestCallbacks;
    private debug;
    private iframeLoaded;
    private chatToken;
    private logger?;
    constructor(logger?: AMSLogger | undefined, framedClientConfig?: FramedClientConfig | undefined);
    setDebug(flag: boolean): void;
    setup(): Promise<void>;
    initialize(initConfig: InitConfig): Promise<void>;
    skypeTokenAuth(chatToken?: OmnichannelChatToken | null): Promise<void>;
    createObject(id: string, file: File, chatToken?: OmnichannelChatToken | null, supportedImagesMimeTypes?: string[]): Promise<void>;
    uploadDocument(documentId: string, file: File | AMSFileInfo, chatToken?: OmnichannelChatToken | null, supportedImagesMimeTypes?: string[]): Promise<void>;
    getViewStatus(fileMetadata: FileMetadata, chatToken?: OmnichannelChatToken | null, supportedImagesMimeTypes?: string[]): Promise<void>;
    getView(fileMetadata: FileMetadata, viewLocation: string, chatToken?: OmnichannelChatToken | null, supportedImagesMimeTypes?: string[]): Promise<void>;
    fetchBlob(contentUrl: string): Promise<Blob>;
    onMessageEvent(cb: (event: MessageEvent) => void): void;
    postMessage(eventType: PostMessageEventType, eventName: PostMessageEventName, data?: PostMessageRequestData, resolve?: CallableFunction, reject?: CallableFunction): void;
    handleEvent(event: MessageEvent): Promise<void>;
    dispose(): void;
    private loadIframe;
}
export default FramedClient;
