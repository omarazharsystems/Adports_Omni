import IIC3Info from "../interfaces/IIC3Info";
import IRawLogger from "../logging/IRawLogger";
export default class IC3Initializer {
    debug: boolean;
    private current404RetryCount;
    private currentOtherRetryCount;
    private skipUnsubscribe;
    private telemetryMessage;
    private errorCode;
    private ic3Info;
    private poller;
    private logger?;
    private pollDataHandler;
    constructor();
    setup(logger?: IRawLogger): Promise<void>;
    getPoller(): any;
    setIc3Info(ic3Info: IIC3Info): Promise<void>;
    initializeIC3(pollDataHandler?: (data: any) => void): Promise<IIC3Info>;
    startPolling(handlePollData?: (data: any) => void): void;
    stopPolling(oldInitializer?: boolean): void;
    reset(oldInitializer?: boolean): Promise<void>;
    private resetRetryCount;
    private onEndpointCreationFailure;
    private onEndpointCreationSuccess;
    /**
     * Creates IC3 endpoint
     *
     * 1. Gets SkypeToken, RegionGtms
     * 2. Sets polling features
     * 3. API call to create endpoint
     * 4. Saves RegistrationToken
     * 5. Saves endpoint ID
     */
    private createEndpointRequest;
    private createEndpoint;
    private onSubscriptionCreationFailure;
    private onSubscriptionCreationSuccess;
    private createSubscriptionRequest;
    private createSubscription;
    private onSetEndpointPropertyCreationFailure;
    private setEndpointProperty;
    private onUnsubscribeCreationFailure;
    private unsubscribeFromEndpoint;
    private onRequestCreationFailure;
    private redirectErrorHandler;
    private onRequestCreationFailureRedirect;
}
