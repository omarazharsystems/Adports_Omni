import ITimer from "./ITimer";
export default class Utilities {
    static isNullOrEmptyString(s: string): boolean;
    static isNullOrUndefinedOrEmptyArray(obj: any[]): boolean;
    static isNullOrUndefined(obj: any): boolean;
    static isPrimitiveString(obj: any): boolean;
    static convertStringToBoolean(input: string): boolean;
    static sanitizeUrlWithBackSlash(url: string): string;
    static getRegistrationTokenValue(registrationTokenHeader: string): string;
    static addQueryParametersToPath(basePath: string, queryParameters: {
        [key: string]: string | number | boolean;
    }): string;
    static getResponseHeader(jqXHR: any, headerName: string): string;
    /**
     * Creates a timer with current time as the start time
     * Returns an ITimer instance
     * Use the milliSecondsElapsed property to get the time ellapsed since the timer was started
     * @returns {ITimer} An ITimer instance
     */
    static timer(): ITimer;
    static concatArrays(arr1: any[], arr2: any[]): void;
}
