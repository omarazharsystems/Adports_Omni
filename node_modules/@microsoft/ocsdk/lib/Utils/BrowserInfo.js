"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BrowserInfo = exports.UNKNOWN_VERSION = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _Enums = require("../Common/Enums");

// Ported from https://dev.azure.com/dynamicscrm/OneCRM/_git/CRM.OmniChannel.LiveChatWidget?path=/src/LiveChatLoader/Utility/BrowserInfo.ts
var REGEX_VERSION = "([\\d,.]+)";
var UNKNOWN_VERSION = "U";
exports.UNKNOWN_VERSION = UNKNOWN_VERSION;

var BrowserInfo = /*#__PURE__*/function () {
  function BrowserInfo() {
    (0, _classCallCheck2["default"])(this, BrowserInfo);
  }

  (0, _createClass2["default"])(BrowserInfo, null, [{
    key: "getUserAgent",
    value: function getUserAgent() {
      return this.userAgent();
    }
  }, {
    key: "userAgentContainsString",
    value: function userAgentContainsString(searchString) {
      return this.getUserAgent().indexOf(searchString) > -1;
    }
  }, {
    key: "isChrome",
    value: function isChrome() {
      return this.userAgentContainsString(_Enums.BrowserVendor.CHROME) && !this.userAgentContainsString(_Enums.BrowserVendor.EDGE) && !this.userAgentContainsString(_Enums.BrowserVendor.EDGE_CHROMIUM);
    }
  }, {
    key: "isIe",
    value: function isIe() {
      return this.userAgentContainsString("Trident");
    }
  }, {
    key: "isEdge",
    value: function isEdge() {
      return this.userAgentContainsString(_Enums.BrowserVendor.EDGE) || this.userAgentContainsString(_Enums.BrowserVendor.EDGE_CHROMIUM);
    }
  }, {
    key: "isOpera",
    value: function isOpera() {
      return this.userAgentContainsString("OPR/");
    }
  }, {
    key: "getBrowserName",
    value: function getBrowserName() {
      if (this.isOpera()) {
        return _Enums.BrowserVendor.OPERA;
      }

      if (this.isEdge()) {
        return _Enums.BrowserVendor.EDGE;
      }

      if (this.isChrome()) {
        return _Enums.BrowserVendor.CHROME;
      }

      if (this.userAgentContainsString(_Enums.BrowserVendor.FIREFOX)) {
        return _Enums.BrowserVendor.FIREFOX;
      }

      if (this.userAgentContainsString(_Enums.BrowserVendor.SAFARI)) {
        return _Enums.BrowserVendor.SAFARI;
      }

      if (this.isIe()) {
        return _Enums.BrowserVendor.IE;
      }

      return _Enums.BrowserVendor.UNKNOWN;
    }
  }, {
    key: "getBrowserVersion",
    value: function getBrowserVersion() {
      var _this = this;

      var getIeVersion = function getIeVersion() {
        var userAgent = _this.getUserAgent();

        var classicIeVersionMatches = userAgent.match(new RegExp(_Enums.BrowserVendor.IE + " " + REGEX_VERSION)); // eslint-disable-line security/detect-non-literal-regexp

        if (classicIeVersionMatches) {
          return classicIeVersionMatches[1];
        }

        var ieVersionMatches = userAgent.match(new RegExp("rv:" + REGEX_VERSION)); // eslint-disable-line security/detect-non-literal-regexp

        if (ieVersionMatches) {
          return ieVersionMatches[1];
        }

        return undefined;
      };

      var getOtherVersion = function getOtherVersion(browserString) {
        if (browserString === _Enums.BrowserVendor.SAFARI) {
          browserString = "Version";
        }

        if (browserString === _Enums.BrowserVendor.OPERA) {
          browserString = "OPR";
        }

        if (browserString === _Enums.BrowserVendor.EDGE) {
          browserString = "Edge?";
        }

        var matches = _this.getUserAgent().match(new RegExp(browserString + "/" + REGEX_VERSION)); // eslint-disable-line security/detect-non-literal-regexp


        if (matches) {
          return matches[1];
        }

        return UNKNOWN_VERSION;
      };

      if (this.isIe()) {
        return getIeVersion();
      }

      return getOtherVersion(this.getBrowserName());
    }
  }]);
  return BrowserInfo;
}();

exports.BrowserInfo = BrowserInfo;
(0, _defineProperty2["default"])(BrowserInfo, "userAgent", function () {
  return window.navigator.userAgent;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,