import { ITimer } from "./interfaces/ITimer";
export declare const setTabIndices: (elements: HTMLElement[] | null, tabIndexMap: Map<string, number>, shouldBeFocusable: boolean) => void;
export declare const findParentFocusableElementsWithoutChildContainer: (elementId: string) => HTMLElement[] | null;
export declare const findAllFocusableElement: (parent: string | HTMLElement) => any[] | null;
export declare const preventFocusToMoveOutOfElement: (elementId: string) => void;
export declare const setFocusOnSendBox: () => void;
export declare const setFocusOnElement: (selector: string | HTMLElement) => void;
export declare const escapeHtml: (inputString: string) => string;
export declare const getIconText: (text: string) => string;
export declare const getLocaleDirection: (localeLCID: string) => string;
export declare const changeLanguageCodeFormatForWebChat: (languageCode: string) => string;
export declare const getTimestampHourMinute: (timestampStr: string) => string;
export declare const parseAdaptiveCardPayload: (payload: string, requiredFieldMissingMessage: string) => string;
export declare const extractPreChatSurveyResponseValues: (preChatSurvey: string, values: {
    index: number;
    label: any;
    id: any;
    value: string;
}[]) => {};
export declare const isNullOrUndefined: (obj: any) => boolean;
export declare const isNullOrEmptyString: (s: string | null) => boolean;
export declare const newGuid: () => string;
export declare const createTimer: () => ITimer;
export declare const getDomain: (hostValue: any) => string;
export declare const getWidgetCacheId: (orgId: string, widgetId: string, widgetInstanceId: string, popoutChat?: boolean) => string;
export declare const getWidgetEndChatEventName: (orgId: string, widgetId: string, widgetInstanceId: string) => string;
export declare const getStateFromCache: (widgetCacheId: string) => any;
export declare const isUndefinedOrEmpty: (object: any) => boolean;
export declare const addDelayInMs: (ms: number) => Promise<void>;
export declare const getBroadcastChannelName: (widgetId: string, widgetInstanceId: string) => string;
export declare const getWidgetCacheIdfromProps: (props: any, popoutChat?: boolean) => string;
export declare const debounceLeading: (fn: any, ms?: number) => (...args: any[]) => void;
export declare const getConversationDetailsCall: (chatSDK: any) => Promise<any>;
export declare const checkContactIdError: (e: any) => void;
export declare const createFileAndDownload: (fileName: string, blobData: string, mimeType: string) => void;
