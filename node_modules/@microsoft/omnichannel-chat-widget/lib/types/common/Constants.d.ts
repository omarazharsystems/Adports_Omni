export declare class Constants {
    static readonly magicCodeBroadcastChannel = "MagicCodeChannel";
    static readonly magicCodeResponseBroadcastChannel = "MagicCodeResponseChannel";
    static readonly systemMessageTag = "system";
    static readonly userMessageTag = "user";
    static readonly historyMessageTag = "history";
    static readonly agentEndConversationMessageTag = "agentendconversation";
    static readonly supervisorForceCloseMessageTag = "supervisorforceclosedconversation";
    static readonly receivedMessageClassName = "ms_lcw_webchat_received_message";
    static readonly sentMessageClassName = "ms_lcw_webchat_sent_message";
    static readonly webchatChannelId = "webchat";
    static readonly markdown = "markdown";
    static readonly actionType = "actionType";
    static readonly String = "string";
    static readonly ChatMessagesJson = "chatMessagesJson";
    static readonly truePascal = "True";
    static readonly true = "true";
    static readonly false = "false";
    static readonly maximumUnreadMessageCount = 99;
    static readonly userParticipantTypeTag = "User";
    static readonly botParticipantTypeTag = "Bot";
    static readonly channelIdKey = "ChannelId-";
    static readonly ChannelId = "lcw";
    static readonly CustomerTag = "FromCustomer";
    static readonly GifContentType = "image/gif";
    static readonly video = "video";
    static readonly audio = "audio";
    static readonly controlsList = "controlsList";
    static readonly nodownload = "nodownload";
    static readonly activity = "activity";
    static readonly payload = "payload";
    static readonly text = "text";
    static readonly blank = "_blank";
    static readonly visitorIdPrefix = "8:";
    static readonly left = "left";
    static readonly queuePositionMessageTag = "queueposition";
    static readonly averageWaitTimeMessageTag = "averagewaittime";
    static readonly message = "message";
    static readonly hiddenTag = "Hidden";
    static readonly prefixTimestampTag = "ServerMessageTimestamp_";
    static readonly acsChannel = "ACS_CHANNEL";
    static readonly publicMessageTag = "public";
    static readonly supportedAdaptiveCardContentTypes: Array<string>;
    static readonly adaptiveCardContentTypePrefix = "application/vnd.microsoft.card";
    static readonly maxUploadFileSize = "500000";
    static readonly imageRegex: RegExp;
    static readonly audioMediaRegex: RegExp;
    static readonly videoMediaRegex: RegExp;
    static readonly chromeSupportedInlineMediaRegex: RegExp;
    static readonly firefoxSupportedInlineMediaRegex: RegExp;
    static readonly CallAdded = "callAdded";
    static readonly LocalVideoStreamAdded = "localVideoStreamAdded";
    static readonly LocalVideoStreamRemoved = "localVideoStreamRemoved";
    static readonly RemoteVideoStreamAdded = "remoteVideoStreamAdded";
    static readonly RemoteVideoStreamRemoved = "remoteVideoStreamRemoved";
    static readonly CallDisconnected = "callDisconnected";
    static readonly IncomingCallEnded = "incomingCallEnded";
    static readonly VoiceVideoInitialize = "voiceVideoInitialize";
    static readonly VoiceVideoInitializeException = "voiceVideoInitializeOnException";
    static readonly VoiceVideoLoading = "voiceVideoLoading";
    static readonly VoiceVideoNotLoaded = "voiceVideoNotLoaded";
    static readonly VoiceVideoLoadingException = "voiceVideoLoadingOnException";
    static readonly VoiceVideoAcceptCallException = "voiceVideoAcceptCallOnException";
    static readonly VoiceVideoAcceptCallWithVideoException = "voiceVideoAcceptCallWithVideoException";
    static readonly defaultDownloadTranscriptError = "Download transcript failed.";
    static readonly ProactiveChatInviteTimeoutInMs = 60000;
    static readonly InputSubmit = "InputSubmit";
    static readonly ReconnectIdAttributeName = "oc.reconnectid";
    static readonly LiveChatWidget = "LiveChatWidgetNew";
    static readonly GuidPattern = "xx-x-4m-ym-xxx";
    static readonly Default = "default";
    static readonly Zero = "zero";
    static readonly Title = "title";
    static readonly Target = "target";
    static readonly Blank = "_blank";
    static readonly TargetRelationship = "rel";
    static readonly TargetRelationshipAttributes = "noopener noreferrer";
    static readonly OpenLinkIconCssClass = "webchat__markdown__external-link-icon";
    static readonly internetConnectionTestUrl = "https://ocsdk-prod.azureedge.net/public/connecttest.txt";
    static readonly internetConnectionTestUrlText = "Omnichannel Connect Test";
    static readonly ChatWidgetStateChangedPrefix = "ChatWidgetStateChanged";
    static readonly PostChatLoadingDurationInMs = 2000;
    static readonly BrowserUnloadConfirmationMessage = "Do you want to leave chat?";
    static readonly CacheTtlInMinutes = 15;
    static readonly SessionCacheSuffix = "session";
    static readonly PopoutCacheSuffix = "popout";
    static readonly LWICheckOnVisibilityTimeout: number;
    static readonly InitContextParamsRequest = "initContextParamsRequest";
    static readonly InitContextParamsResponse = "initContextParamsResponse";
    static readonly OCOriginalMessageId = "OriginalMessageId";
    static readonly WebchatSequenceIdAttribute = "webchat:sequence-id";
    static readonly MessageSequenceIdOverride = "MessageSequenceIdOverride";
}
export declare const Regex: {
    new (): {};
    readonly EmailRegex: "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])";
};
export declare class HtmlIdNames {
    static readonly MSLiveChatWidget = "MSLiveChatWidget";
}
export declare class HtmlClassNames {
    static readonly webChatBannerCloseButton = "webchat__toast__dismissButton";
    static readonly webChatBannerExpandButton = "webchat__toaster__expandIcon";
}
export declare class HtmlElementSelectors {
    static readonly sendBoxSelector = "textarea[data-id=\"webchat-sendbox-input\"]";
}
export declare class HtmlAttributeNames {
    static readonly role = "role";
    static readonly navigation = "navigation";
    static readonly ariaLabel = "aria-label";
    static readonly ariaLive = "aria-live";
    static readonly ariaDisabled = "aria-disabled";
    static readonly form = "form";
    static readonly ariaLabelledby = "aria-labelledby";
    static readonly tabindex = "tabindex";
    static readonly ariaRequired = "aria-required";
    static readonly ariaDesribedby = "aria-describedby";
    static readonly ariaHidden = "aria-hidden";
    static readonly disabled = "disabled";
    static readonly hidden = "hidden";
    static readonly download = "download";
    static readonly href = "href";
    static readonly region = "region";
    static readonly button = "button";
    static readonly input = "Input";
    static readonly style = "style";
    static readonly head = "head";
    static readonly type = "type";
    static readonly csstext = "text/css";
    static readonly listItem = "LI";
    static readonly unorderedList = "UL";
    static readonly div = "div";
    static readonly aTagName = "a";
    static readonly pTagName = "p";
    static readonly noopenerTag = "noopener";
    static readonly noreferrerTag = "noreferrer";
    static readonly adaptiveCardClassName = "ac-adaptiveCard";
    static readonly adaptiveCardTextBlockClassName = "ac-textBlock";
    static readonly adaptiveCardToggleInputClassName = "ac-toggleInput";
    static readonly adaptiveCardActionSetClassName = "ac-actionSet";
}
export declare class WebChatMiddlewareConstants {
    static readonly nextVisibleActivity = "nextVisibleActivity";
    static readonly timeBetweenTimestampGroups = 300000;
    static readonly maxTextLength = 6000;
    static readonly adaptiveCard = "AdaptiveCard";
}
export declare class AMSConstants {
    static readonly supportedImagesMimeTypes: string[];
    static readonly maxSupportedImageSize = 20;
    static readonly maxSupportedFileSize = 300;
}
export declare class MimeTypes {
    static readonly UnknownFileType = "application/octet-stream";
}
export declare class LocaleConstants {
    static readonly RTL_LOCALES: string[];
}
export declare enum ElementType {
    CallingContainerSDK = "CallingContainerSDK"
}
export declare enum ChatSDKError {
    WidgetUseOutsideOperatingHour = "WidgetUseOutsideOperatingHour",
    AuthContactIdNotFoundFailure = "AuthContactIdNotFoundFailure"
}
export declare enum EnvironmentVersion {
    prod = "prod",
    dogfood = "df",
    int = "int",
    test = "test"
}
export declare enum E2VVOptions {
    NoCalling = "192350000",
    VideoAndVoiceCalling = "192350001",
    VoiceOnly = "192350002"
}
export declare enum ConversationMode {
    Regular = "192350000",
    Persistent = "192350001"
}
export declare enum LiveWorkItemState {
    Active = "Active",
    Closed = "Closed",
    Open = "Open",
    Waiting = "Waiting",
    WrapUp = "WrapUp"
}
export declare enum StorageType {
    "localStorage" = 0,
    "sessionStorage" = 1
}
export declare enum ParticipantType {
    User = "User",
    Bot = "Bot"
}
export declare enum ConversationEndEntity {
    Customer = "Customer",
    Agent = "Agent",
    Bot = "Bot",
    NotSet = "NotSet"
}
export declare enum ConfirmationState {
    Ok = "Ok",
    Cancel = "Cancel",
    NotSet = "NotSet"
}
export declare class TranscriptConstants {
    static readonly ChatTranscriptsBodyColor = "#F5F5F5";
    static readonly TranscriptMessageEmojiMessageType = "http://schema.skype.com/emoji";
    static readonly ChatTranscriptDownloadFile = "ChatTranscripts.html";
    static readonly DefaultFileAttachmentName = "Untitled.txt";
    static readonly CustomerDialogColor = "#E8E8E8";
    static readonly CustomerFontColor = "black";
    static readonly AdaptiveCardType = "adaptivecard";
    static readonly InternalMode = "internal";
    static readonly AgentDialogColor = "#2266E3";
    static readonly AgentFontColor = "white";
}
export declare class AriaTelemetryConstants {
    static readonly GERMANY_ENDPOINT: string;
    static readonly GCCH_ENDPOINT: string;
    static readonly DOD_ENDPOINT: string;
    static readonly EUROPE_ENDPOINT: string;
    static readonly MOONCAKE_ENDPOINT: string;
    static readonly Public: string;
    static readonly EU: string;
    static readonly lcwEUDomainNames: Array<string>;
}
