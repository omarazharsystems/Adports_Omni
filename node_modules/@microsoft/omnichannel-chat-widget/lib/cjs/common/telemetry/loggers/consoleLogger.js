"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.consoleLogger = void 0;
var _Constants = require("../../Constants");
var _TelemetryConstants = require("../TelemetryConstants");
const consoleLogger = () => {
  const consoleLogger = {
    log: (logLevel, telemetryInput) => {
      const payload = telemetryInput !== null && telemetryInput !== void 0 && telemetryInput.payload && Object.keys(telemetryInput === null || telemetryInput === void 0 ? void 0 : telemetryInput.payload).length > 0 ? telemetryInput === null || telemetryInput === void 0 ? void 0 : telemetryInput.payload : "";
      const telemetryInfo = telemetryInput !== null && telemetryInput !== void 0 && telemetryInput.telemetryInfo && Object.keys(telemetryInput === null || telemetryInput === void 0 ? void 0 : telemetryInput.telemetryInfo).length > 0 ? telemetryInput === null || telemetryInput === void 0 ? void 0 : telemetryInput.telemetryInfo : "";
      try {
        switch (logLevel) {
          case _TelemetryConstants.LogLevel.INFO:
            console.info(_Constants.Constants.LiveChatWidget, payload, telemetryInfo);
            break;
          case _TelemetryConstants.LogLevel.DEBUG:
            console.debug(_Constants.Constants.LiveChatWidget, payload, telemetryInfo);
            break;
          case _TelemetryConstants.LogLevel.WARN:
            console.warn(_Constants.Constants.LiveChatWidget, payload, telemetryInfo);
            break;
          case _TelemetryConstants.LogLevel.ERROR:
            console.error(_Constants.Constants.LiveChatWidget, payload, telemetryInfo);
            break;
          default:
            console.debug(_Constants.Constants.LiveChatWidget, payload, telemetryInfo);
            break;
        }
      } catch (ex) {
        console.error("An unexpected error occurred in the Telemetry client: " + ex);
      }
    },
    dispose: () => {
      console.log("disposing loggers");
    }
  };
  return consoleLogger;
};
exports.consoleLogger = consoleLogger;