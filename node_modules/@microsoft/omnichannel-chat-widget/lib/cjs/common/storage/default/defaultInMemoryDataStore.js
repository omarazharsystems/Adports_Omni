"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inMemoryDataStore = exports.defaultInitializeInMemoryDataStore = void 0;
var _TelemetryConstants = require("../../telemetry/TelemetryConstants");
var _TelemetryHelper = require("../../telemetry/TelemetryHelper");
var _defaultCacheManager = require("./defaultCacheManager");
const defaultInitializeInMemoryDataStore = widgetId => {
  try {
    localStorage;
  } catch (error) {
    // Register below events when localStorage is not accessible
    // Listening to event raised from client browser
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    window.addEventListener("message", function (e) {
      try {
        if (e.data.key) {
          const browserData = e.data;
          if (_defaultCacheManager.defaultCacheManager.InternalCache[browserData.key]) {
            delete _defaultCacheManager.defaultCacheManager.InternalCache[browserData.key];
          }
          _defaultCacheManager.defaultCacheManager.InternalCache[browserData.key] = browserData.data;
        }
      } catch (error) {
        _TelemetryHelper.TelemetryHelper.logConfigDataEvent(_TelemetryConstants.LogLevel.ERROR, {
          Event: _TelemetryConstants.TelemetryEvent.InMemoryDataStoreFailed,
          ExceptionDetails: error,
          Description: "Unable to register default in-memory cache."
        });
      }
    });

    // send cache initialize message to client
    if (_defaultCacheManager.defaultCacheManager.InternalCache === undefined || {}) {
      parent.postMessage({
        data: "cacheinitialize",
        widgetId: widgetId
      }, "*");
    }
  }
};
exports.defaultInitializeInMemoryDataStore = defaultInitializeInMemoryDataStore;
const inMemoryDataStore = () => {
  const dataStoreProvider = {
    getData: key => {
      if (_defaultCacheManager.defaultCacheManager.InternalCache && _defaultCacheManager.defaultCacheManager.InternalCache[key]) {
        return _defaultCacheManager.defaultCacheManager.InternalCache[key];
      }
    },
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    setData: (key, data) => {
      try {
        _defaultCacheManager.defaultCacheManager.InternalCache[key] = data;
      } catch (error) {
        _TelemetryHelper.TelemetryHelper.logConfigDataEvent(_TelemetryConstants.LogLevel.ERROR, {
          Event: _TelemetryConstants.TelemetryEvent.InMemoryDataStoreFailed,
          ExceptionDetails: error,
          Description: "Unable to set data in default in-memory cache."
        });
      }
    },
    removeData: key => {
      try {
        _defaultCacheManager.defaultCacheManager.InternalCache[key] = {};
      } catch (error) {
        _TelemetryHelper.TelemetryHelper.logConfigDataEvent(_TelemetryConstants.LogLevel.ERROR, {
          Event: _TelemetryConstants.TelemetryEvent.InMemoryDataStoreFailed,
          ExceptionDetails: error,
          Description: "Unable to remove data from default in-memory cache."
        });
      }
    }
  };
  return dataStoreProvider;
};
exports.inMemoryDataStore = inMemoryDataStore;