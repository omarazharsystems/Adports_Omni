"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createReducer = void 0;
var _LiveChatWidgetActionType = require("./common/LiveChatWidgetActionType");
/* eslint-disable indent */

const createReducer = () => {
  const reducer = (state, action) => {
    var _action$payload, _action$payload2, _action$payload3;
    switch (action.type) {
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_WIDGET_ELEMENT_ID:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            widgetElementId: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_RENDERING_MIDDLEWARE_PROPS:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            renderingMiddlewareProps: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_MIDDLEWARE_LOCALIZED_TEXTS:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            middlewareLocalizedTexts: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_GLOBAL_DIR:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            globalDir: action.payload === "ltr" || action.payload === "rtl" ? action.payload : "ltr"
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_MINIMIZED:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            isMinimized: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_CONVERSATION_STATE:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            conversationState: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_START_CHAT_FAILING:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            startChatFailed: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_OUTSIDE_OPERATING_HOURS:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            outsideOperatingHours: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_PRE_CHAT_SURVEY_RESPONSE:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            preChatSurveyResponse: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_CUSTOM_CONTEXT:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            customContext: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_PREVIOUS_FOCUSED_ELEMENT_ID:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            previousElementIdOnFocusBeforeModalOpen: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_SHOW_CONFIRMATION:
        return {
          ...state,
          uiStates: {
            ...state.uiStates,
            showConfirmationPane: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_POST_CHAT_CONTEXT:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            postChatContext: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SHOW_CALLING_CONTAINER:
        return {
          ...state,
          uiStates: {
            ...state.uiStates,
            showCallingPopup: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_INCOMING_CALL:
        return {
          ...state,
          uiStates: {
            ...state.uiStates,
            isIncomingCall: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_FOCUS_CHAT_BUTTON:
        return {
          ...state,
          uiStates: {
            ...state.uiStates,
            focusChatButton: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.DISABLE_VIDEO_CALL:
        return {
          ...state,
          uiStates: {
            ...state.uiStates,
            disableVideoCall: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.DISABLE_LOCAL_VIDEO:
        return {
          ...state,
          uiStates: {
            ...state.uiStates,
            disableSelfVideo: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.DISABLE_REMOTE_VIDEO:
        return {
          ...state,
          uiStates: {
            ...state.uiStates,
            disableRemoteVideo: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_CHAT_TOKEN:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            chatToken: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_SHOW_EMAIL_TRANSCRIPT_PANE:
        return {
          ...state,
          uiStates: {
            ...state.uiStates,
            showEmailTranscriptPane: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_PRECHAT_RESPONSE_EMAIL:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            preChatResponseEmail: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_AUDIO_NOTIFICATION:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            isAudioMuted: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_E2VV_ENABLED:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            e2vvEnabled: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_START_CHAT_BUTTON_DISPLAY:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            hideStartChatButton: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_PROACTIVE_CHAT_PARAMS:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            proactiveChatStates: {
              ...state.appStates.proactiveChatStates,
              proactiveChatBodyTitle: (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.proactiveChatBodyTitle,
              proactiveChatEnablePrechat: (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.proactiveChatEnablePrechat,
              proactiveChatInNewWindow: (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.proactiveChatInNewWindow
            }
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_TELEMETRY_DATA:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            telemetryInternalData: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_RECONNECT_ID:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            reconnectId: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_UNREAD_MESSAGE_COUNT:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            unreadMessageCount: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_LIVE_CHAT_CONTEXT:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            liveChatContext: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_WIDGET_STATE:
        return {
          ...action.payload
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_CONVERSATION_ENDED_BY:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            conversationEndedBy: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_WIDGET_SIZE:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            widgetSize: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_WIDGET_INSTANCE_ID:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            widgetInstanceId: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_LIVE_CHAT_CONFIG:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            liveChatConfig: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_INITIAL_CHAT_SDK_REQUEST_ID:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            initialChatSdkRequestId: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_CHAT_DISCONNECT_EVENT_RECEIVED:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            chatDisconnectEventReceived: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_SURVEY_MODE:
        return {
          ...state,
          appStates: {
            ...state.appStates,
            selectedSurveyMode: action.payload
          }
        };
      case _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_CONFIRMATION_STATE:
        return {
          ...state,
          domainStates: {
            ...state.domainStates,
            confirmationState: action.payload
          }
        };
      default:
        return state;
    }
  };
  return reducer;
};
exports.createReducer = createReducer;