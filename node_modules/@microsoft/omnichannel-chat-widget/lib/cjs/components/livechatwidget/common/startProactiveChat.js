"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startProactiveChat = void 0;
var _TelemetryConstants = require("../../../common/telemetry/TelemetryConstants");
var _ConversationState = require("../../../contexts/common/ConversationState");
var _LiveChatWidgetActionType = require("../../../contexts/common/LiveChatWidgetActionType");
var _TelemetryHelper = require("../../../common/telemetry/TelemetryHelper");
var _TelemetryManager = require("../../../common/telemetry/TelemetryManager");
// Defines startProactiveChat callback
const startProactiveChat = (dispatch, notificationConfig, enablePreChat, inNewWindow) => {
  dispatch({
    type: _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_PROACTIVE_CHAT_PARAMS,
    payload: {
      proactiveChatBodyTitle: notificationConfig && notificationConfig.message ? notificationConfig.message : "",
      proactiveChatEnablePrechat: enablePreChat ?? false,
      proactiveChatInNewWindow: inNewWindow ?? false
    }
  });
  dispatch({
    type: _LiveChatWidgetActionType.LiveChatWidgetActionType.SET_CONVERSATION_STATE,
    payload: _ConversationState.ConversationState.ProactiveChat
  });
  _TelemetryHelper.TelemetryHelper.logLoadingEvent(_TelemetryConstants.LogLevel.INFO, {
    Event: _TelemetryConstants.TelemetryEvent.IncomingProactiveChatScreenLoaded,
    ElapsedTimeInMilliseconds: _TelemetryManager.TelemetryTimers.LcwLoadToChatButtonTimer.milliSecondsElapsed,
    Description: "Incoming proactive chat loaded."
  });
};
exports.startProactiveChat = startProactiveChat;