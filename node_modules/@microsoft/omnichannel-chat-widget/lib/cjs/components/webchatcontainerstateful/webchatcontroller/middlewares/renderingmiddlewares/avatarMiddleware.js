"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createAvatarMiddleware = void 0;
var _react = _interopRequireDefault(require("react"));
var _Constants = require("../../../../../common/Constants");
var _defaultAvatarStyles = require("./defaultStyles/defaultAvatarStyles");
var _defaultAvatarTextStyles = require("./defaultStyles/defaultAvatarTextStyles");
var _utils = require("../../../../../common/utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/******
 * AvatarMiddleware
 * 
 * This middleware handles the avatar icon for each non-system message. It does the following processing:
 * 1. Renders the first two letters of the sender as the profile pic
 ******/

// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any
const createAvatarMiddleware = (avatarStyleProps, avatarTextStyleProps) => () => next => function () {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  const [params] = args;
  const {
    activity: {
      channelData: {
        tags
      },
      from: {
        name
      }
    },
    fromUser
  } = params;
  if (fromUser !== false || tags && tags.includes(_Constants.Constants.systemMessageTag)) {
    return false;
  }
  const avatarStyles = {
    ..._defaultAvatarStyles.defaultAvatarStyles,
    ...avatarStyleProps
  };
  const avatarTextStyles = {
    ..._defaultAvatarTextStyles.defaultAvatarTextStyles,
    ...avatarTextStyleProps
  };
  // eslint-disable-next-line react/display-name
  return () => /*#__PURE__*/_react.default.createElement("div", {
    style: avatarStyles
  }, /*#__PURE__*/_react.default.createElement("p", {
    style: avatarTextStyles
  }, " ", (0, _utils.getIconText)(name), " "));
};
exports.createAvatarMiddleware = createAvatarMiddleware;