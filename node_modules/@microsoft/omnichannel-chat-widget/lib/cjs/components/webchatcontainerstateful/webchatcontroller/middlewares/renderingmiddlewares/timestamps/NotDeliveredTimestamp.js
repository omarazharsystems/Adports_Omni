"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotDeliveredTimestamp = void 0;
var _react = _interopRequireWildcard(require("react"));
var _KeyCodes = require("../../../../../../common/KeyCodes");
var _react2 = require("@fluentui/react");
var _defaultMiddlewareLocalizedTexts = require("../../../../common/defaultProps/defaultMiddlewareLocalizedTexts");
var _defaultTimestampContentStyles = require("../defaultStyles/defaultTimestampContentStyles");
var _defaultTimestampFailedStyles = require("../defaultStyles/defaultTimestampFailedStyles");
var _defaultTimestampRetryStyles = require("../defaultStyles/defaultTimestampRetryStyles");
var _utils = require("../../../../../../common/utils");
var _botframeworkWebchat = require("botframework-webchat");
var _ = require("../../../../../..");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/* eslint @typescript-eslint/no-explicit-any: "off" */
const NotDeliveredTimestamp = _ref => {
  var _state$domainStates$r, _state$domainStates$r2, _state$domainStates$r3, _state$domainStates$r4, _state$domainStates$m, _state$domainStates$m2;
  let {
    args
  } = _ref;
  const timestampRef = (0, _react.useRef)();
  const {
    useFocus,
    usePostActivity
  } = _botframeworkWebchat.hooks;
  const focus = useFocus();
  const postActivity = usePostActivity();
  const {
    activity
  } = args;
  const {
    timestamp
  } = activity;
  const [state] = (0, _.useChatContextStore)();
  const dir = ((_state$domainStates$r = state.domainStates.renderingMiddlewareProps) === null || _state$domainStates$r === void 0 ? void 0 : _state$domainStates$r.timestampDir) ?? state.domainStates.globalDir;
  const contentStyles = {
    ..._defaultTimestampContentStyles.defaultTimestampContentStyles,
    ...((_state$domainStates$r2 = state.domainStates.renderingMiddlewareProps) === null || _state$domainStates$r2 === void 0 ? void 0 : _state$domainStates$r2.timestampContentStyleProps)
  };
  const failedTextStyles = {
    ..._defaultTimestampFailedStyles.defaultTimestampFailedStyles,
    ...((_state$domainStates$r3 = state.domainStates.renderingMiddlewareProps) === null || _state$domainStates$r3 === void 0 ? void 0 : _state$domainStates$r3.timestampFailedTextStyleProps)
  };
  const retryTextStyles = {
    ..._defaultTimestampRetryStyles.defaultTimestampRetryStyles,
    ...((_state$domainStates$r4 = state.domainStates.renderingMiddlewareProps) === null || _state$domainStates$r4 === void 0 ? void 0 : _state$domainStates$r4.timestampRetryTextStyleProps)
  };
  (0, _react.useEffect)(() => {
    var _timestampRef$current;
    const timestampWebChatNodes = timestampRef === null || timestampRef === void 0 ? void 0 : (_timestampRef$current = timestampRef.current) === null || _timestampRef$current === void 0 ? void 0 : _timestampRef$current.childNodes;
    if ((timestampWebChatNodes === null || timestampWebChatNodes === void 0 ? void 0 : timestampWebChatNodes.length) > 1) {
      timestampWebChatNodes[1].innerText = (0, _utils.getTimestampHourMinute)(timestamp);
    }
  }, [timestampRef]);
  const onRetryClick = (0, _react.useCallback)(async () => {
    var _activity$channelData;
    activity.previousClientActivityID = (_activity$channelData = activity.channelData) === null || _activity$channelData === void 0 ? void 0 : _activity$channelData.clientActivityID;
    await postActivity(activity);
    focus("sendBox");
  }, [activity, focus, postActivity]);
  const onRetryKeyEnter = event => {
    if (event.code === _KeyCodes.KeyCodes.ENTER) {
      event.preventDefault();
      onRetryClick();
    }
  };
  return /*#__PURE__*/_react.default.createElement(_react2.Stack, {
    style: contentStyles,
    dir: dir,
    horizontal: true
  }, /*#__PURE__*/_react.default.createElement("span", null, " ", (0, _utils.getTimestampHourMinute)(timestamp)), /*#__PURE__*/_react.default.createElement("span", null, " \xA0-\xA0 "), /*#__PURE__*/_react.default.createElement("span", {
    style: failedTextStyles
  }, " ", ((_state$domainStates$m = state.domainStates.middlewareLocalizedTexts) === null || _state$domainStates$m === void 0 ? void 0 : _state$domainStates$m.MIDDLEWARE_MESSAGE_NOT_DELIVERED) ?? _defaultMiddlewareLocalizedTexts.defaultMiddlewareLocalizedTexts.MIDDLEWARE_MESSAGE_NOT_DELIVERED, " "), /*#__PURE__*/_react.default.createElement("span", null, " \xA0-\xA0 "), /*#__PURE__*/_react.default.createElement("span", {
    style: retryTextStyles,
    onClick: onRetryClick,
    onKeyDown: onRetryKeyEnter,
    tabIndex: 0
  }, " ", ((_state$domainStates$m2 = state.domainStates.middlewareLocalizedTexts) === null || _state$domainStates$m2 === void 0 ? void 0 : _state$domainStates$m2.MIDDLEWARE_MESSAGE_RETRY) ?? _defaultMiddlewareLocalizedTexts.defaultMiddlewareLocalizedTexts.MIDDLEWARE_MESSAGE_RETRY, " "));
};
exports.NotDeliveredTimestamp = NotDeliveredTimestamp;