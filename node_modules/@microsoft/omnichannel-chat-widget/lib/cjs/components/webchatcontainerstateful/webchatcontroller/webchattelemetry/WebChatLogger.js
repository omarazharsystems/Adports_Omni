"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createWebChatTelemetry = createWebChatTelemetry;
var _TelemetryConstants = require("../../../../common/telemetry/TelemetryConstants");
var _TelemetryHelper = require("../../../../common/telemetry/TelemetryHelper");
function createWebChatTelemetry() {
  let isInitEventLogged = false;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const handleTelemetry = event => {
    const {
      level,
      name
    } = event;
    const loglevel = level ? level.toUpperCase() : "";
    if ((name === null || name === void 0 ? void 0 : name.toLowerCase()) === "init" && isInitEventLogged) return;
    switch (loglevel) {
      case _TelemetryConstants.LogLevel.DEBUG:
        _TelemetryHelper.TelemetryHelper.logWebChatEvent(_TelemetryConstants.LogLevel.DEBUG, event);
        break;
      case _TelemetryConstants.LogLevel.WARN:
        _TelemetryHelper.TelemetryHelper.logWebChatEvent(_TelemetryConstants.LogLevel.WARN, event);
        break;
      case _TelemetryConstants.LogLevel.ERROR:
        _TelemetryHelper.TelemetryHelper.logWebChatEvent(_TelemetryConstants.LogLevel.ERROR, event);
        break;
      case _TelemetryConstants.LogLevel.INFO:
      default:
        _TelemetryHelper.TelemetryHelper.logWebChatEvent(_TelemetryConstants.LogLevel.INFO, event);
        break;
    }
    if ((name === null || name === void 0 ? void 0 : name.toLowerCase()) === "init") {
      isInitEventLogged = true;
    }
  };
  return handleTelemetry;
}