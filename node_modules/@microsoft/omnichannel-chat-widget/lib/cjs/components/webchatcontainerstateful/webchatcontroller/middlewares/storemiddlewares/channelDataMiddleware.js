"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _Constants = require("../../../../../common/Constants");
var _omnichannelChatSdk = require("@microsoft/omnichannel-chat-sdk");
var _WebChatActionType = require("../../enums/WebChatActionType");
/******
 * ChannelDataMiddleware
 * 
 * Adds necessary tags if not present so that the rendering middlewares can process them later.
 ******/

// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars
const channelDataMiddleware = _ref => {
  let {
    dispatch
  } = _ref;
  return next => action => {
    var _action$payload, _action$payload$activ;
    if ((action === null || action === void 0 ? void 0 : action.type) === _WebChatActionType.WebChatActionType.DIRECT_LINE_POST_ACTIVITY_PENDING && action !== null && action !== void 0 && (_action$payload = action.payload) !== null && _action$payload !== void 0 && (_action$payload$activ = _action$payload.activity) !== null && _action$payload$activ !== void 0 && _action$payload$activ.channelData) {
      const channelIdTag = `${_Constants.Constants.channelIdKey}${_Constants.Constants.ChannelId}`;
      const customerMessageTag = `${_Constants.Constants.CustomerTag}`;
      if (action.payload.activity.channelData.tags) {
        if (!action.payload.activity.channelData.tags.includes(channelIdTag)) {
          action.payload.activity.channelData.tags.push(channelIdTag);
        }
        if (!action.payload.activity.channelData.tags.includes(customerMessageTag)) {
          action.payload.activity.channelData.tags.push(customerMessageTag);
        }
      } else {
        action.payload.activity.channelData.tags = [channelIdTag];
        action.payload.activity.channelData.tags.push(customerMessageTag);
      }
      action.payload.activity.channelData.metadata = {
        deliveryMode: _omnichannelChatSdk.DeliveryMode.Bridged
      };
    }
    return next(action);
  };
};
var _default = channelDataMiddleware;
exports.default = _default;