"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _NotificationHandler = require("../../notification/NotificationHandler");
var _NotificationScenarios = require("../../enums/NotificationScenarios");
var _WebChatActionType = require("../../enums/WebChatActionType");
var _Constants = require("../../../../../common/Constants");
/******
 * MaxMessageSizeValidator
 * 
 * Enforces a max character limit that the sender can send to comply to Omnichannel chat services' limitation.
 ******/

// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars
const createMaxMessageSizeValidator = localizedTexts => _ref => {
  let {
    dispatch
  } = _ref;
  return next => action => {
    if (action.type === _WebChatActionType.WebChatActionType.WEB_CHAT_SET_SEND_BOX) {
      var _action$payload, _action$payload$text;
      const textLength = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : (_action$payload$text = _action$payload.text) === null || _action$payload$text === void 0 ? void 0 : _action$payload$text.length) || 0;
      if (textLength > _Constants.WebChatMiddlewareConstants.maxTextLength) {
        _NotificationHandler.NotificationHandler.notifyError(_NotificationScenarios.NotificationScenarios.MaxSizeError, localizedTexts.MIDDLEWARE_MAX_CHARACTER_COUNT_EXCEEDED);
        return next(action);
      } else {
        _NotificationHandler.NotificationHandler.dismissNotification(_NotificationScenarios.NotificationScenarios.MaxSizeError);
      }
    }
    return next(action);
  };
};
var _default = createMaxMessageSizeValidator;
exports.default = _default;