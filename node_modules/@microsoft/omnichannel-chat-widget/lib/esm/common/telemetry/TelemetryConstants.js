export let ScenarioType;
(function (ScenarioType) {
  ScenarioType["CONFIG_VALIDATION"] = "LCW_ConfigValidationEvents";
  ScenarioType["LOAD"] = "LCW_LoadEvents";
  ScenarioType["ACTIONS"] = "LCW_ActionEvents";
  ScenarioType["SDK"] = "LCW_SDKEvents";
  ScenarioType["IC3_CLIENT"] = "LCW_IC3ClientEvents";
  ScenarioType["OCCHATSDK"] = "LCW_OCCHATSDKEvents";
  ScenarioType["WEBCHAT"] = "LCW_WebChatEvents";
  ScenarioType["CALLING"] = "LCW_Calling";
  ScenarioType["UNDEFINED"] = "LCW_Undefined";
  ScenarioType["ACS_ADAPTER"] = "LCW_ACSAdapterEvents";
})(ScenarioType || (ScenarioType = {}));
export let LogLevel;

// Events used in certain functionalities that are not being logged
(function (LogLevel) {
  LogLevel["INFO"] = "INFO";
  LogLevel["DEBUG"] = "DEBUG";
  LogLevel["WARN"] = "WARN";
  LogLevel["ERROR"] = "ERROR";
})(LogLevel || (LogLevel = {}));
export let BroadcastEvent;

// Events being logged
(function (BroadcastEvent) {
  BroadcastEvent["LoadPostChatSurvey"] = "LoadPostChatSurvey";
  BroadcastEvent["ChatEnded"] = "ChatEnded";
  BroadcastEvent["NewMessageNotification"] = "NewMessageNotification";
  BroadcastEvent["UnreadMessageCount"] = "UnreadMessageCount";
  BroadcastEvent["StartProactiveChat"] = "StartProactiveChat";
  BroadcastEvent["ProactiveChatStartChat"] = "ProactiveChatStartChat";
  BroadcastEvent["ProactiveChatStartPopoutChat"] = "ProactiveChatStartPopoutChat";
  BroadcastEvent["ResetProactiveChatParams"] = "ResetProactiveChatParams";
  BroadcastEvent["InvalidAdaptiveCardFormat"] = "InvalidAdaptiveCardFormat";
  BroadcastEvent["NewMessageSent"] = "NewMessageSent";
  BroadcastEvent["NewMessageReceived"] = "NewMessageReceived";
  BroadcastEvent["HistoryMessageReceived"] = "HistoryMessageReceived";
  BroadcastEvent["RedirectPageRequest"] = "RedirectPageRequest";
  BroadcastEvent["StartChat"] = "StartChat";
  BroadcastEvent["StartUnauthenticatedReconnectChat"] = "StartUnauthenticatedReconnectChat";
  BroadcastEvent["InitiateEndChat"] = "InitiateEndChat";
  BroadcastEvent["SetCustomContext"] = "SetCustomContext";
  BroadcastEvent["ChatRetrievedFromCache"] = "ChatRetrievedFromCache";
  BroadcastEvent["MaximizeChat"] = "MaximizeChat";
  BroadcastEvent["ChatInitiated"] = "ChatInitiated";
  BroadcastEvent["CloseChat"] = "CloseChat";
  BroadcastEvent["InitiateEndChatOnBrowserUnload"] = "InitiateEndChatOnBrowserUnload";
  BroadcastEvent["ClosePopoutWindow"] = "ClosePopoutWindow";
  BroadcastEvent["RaiseErrorEvent"] = "RaiseErrorEvent";
  BroadcastEvent["NetworkDisconnected"] = "NetworkDisconnected";
  BroadcastEvent["NetworkReconnected"] = "NetworkReconnected";
  BroadcastEvent["SigninCardReceived"] = "SignInCardReceived";
  BroadcastEvent["BotAuthConfigRequest"] = "BotAuthConfigRequest";
  BroadcastEvent["BotAuthConfigResponse"] = "BotAuthConfigResponse";
  BroadcastEvent["RemoveWidgetDataFromCache"] = "RemoveWidgetDataFromCache";
  BroadcastEvent["InitiateStartChatInPopoutMode"] = "InitiateStartChatInPopoutMode";
  BroadcastEvent["HideChatVisibilityChangeEvent"] = "hideChatVisibilityChangeEvent";
  BroadcastEvent["UpdateSessionDataForTelemetry"] = "UpdateSessionDataForTelemetry";
  BroadcastEvent["UpdateConversationDataForTelemetry"] = "UpdateConversationDataForTelemetry";
  BroadcastEvent["ContactIdNotFound"] = "ContactIdNotFound";
})(BroadcastEvent || (BroadcastEvent = {}));
export let TelemetryEvent;
(function (TelemetryEvent) {
  TelemetryEvent["CallAdded"] = "CallAdded";
  TelemetryEvent["LocalVideoStreamAdded"] = "LocalVideoStreamAdded";
  TelemetryEvent["LocalVideoStreamRemoved"] = "LocalVideoStreamRemoved";
  TelemetryEvent["RemoteVideoStreamAdded"] = "RemoteVideoStreamAdded";
  TelemetryEvent["RemoteVideoStreamRemoved"] = "RemoteVideoStreamRemoved";
  TelemetryEvent["CallDisconnected"] = "CallDisconnected";
  TelemetryEvent["CallDisconnectedException"] = "CallDisconnectedException";
  TelemetryEvent["IncomingCallEnded"] = "incomingCallEnded";
  TelemetryEvent["VoiceVideoSdkInitialize"] = "VoiceVideoSdkInitialize";
  TelemetryEvent["VoiceVideoSdkInitializeException"] = "VoiceVideoSdkInitializeException";
  TelemetryEvent["VoiceVideoLoading"] = "VoiceVideoLoading";
  TelemetryEvent["VoiceVideoNotLoaded"] = "VoiceVideoNotLoaded";
  TelemetryEvent["VoiceVideoLoadingException"] = "VoiceVideoLoadingException";
  TelemetryEvent["VoiceVideoAcceptCallException"] = "VoiceVideoAcceptCallException";
  TelemetryEvent["VoiceVideoAcceptCallWithVideoException"] = "VoiceVideoAcceptCallWithVideoException";
  TelemetryEvent["VideoCallAcceptButtonClick"] = "VideoCallAcceptButtonClick";
  TelemetryEvent["VoiceCallAcceptButtonClick"] = "VoiceCallAcceptButtonClick";
  TelemetryEvent["CallRejectClick"] = "CallRejectClick";
  TelemetryEvent["CallRejectClickException"] = "CallRejectClickException";
  TelemetryEvent["ToggleMuteButtonClick"] = "ToggleMuteButtonClick";
  TelemetryEvent["ToggleMuteButtonClickException"] = "ToggleMuteButtonClickException";
  TelemetryEvent["ToggleCameraButtonClick"] = "ToggleCameraButtonClick";
  TelemetryEvent["ToggleCameraButtonClickException"] = "ToggleCameraButtonClickException";
  TelemetryEvent["EndCallButtonClick"] = "EndCallButtonClick";
  TelemetryEvent["EndCallButtonClickException"] = "EndCallButtonClickException";
  TelemetryEvent["CallingSDKInitSuccess"] = "CallingSDKInitSuccess";
  TelemetryEvent["CallingSDKInitFailed"] = "CallingSDKInitFailed";
  TelemetryEvent["CallingSDKLoadSuccess"] = "CallingSDKLoadSuccess";
  TelemetryEvent["CallingSDKLoadFailed"] = "CallingSDKLoadFailed";
  TelemetryEvent["GetConversationDetailsCallStarted"] = "GetConversationDetailsCallStarted";
  TelemetryEvent["GetConversationDetailsCallFailed"] = "GetConversationDetailsCallFailed";
  TelemetryEvent["EndChatSDKCallFailed"] = "EndChatSDKCallFailed";
  TelemetryEvent["GetChatReconnectContextSDKCallStarted"] = "GetChatReconnectContextSDKCallStarted";
  TelemetryEvent["GetChatReconnectContextSDKCallFailed"] = "GetChatReconnectContextSDKCallFailed";
  TelemetryEvent["ParseAdaptiveCardFailed"] = "ParseAdaptiveCardFailed";
  TelemetryEvent["ClientDataStoreProviderFailed"] = "ClientDataStoreProviderFailed";
  TelemetryEvent["InMemoryDataStoreFailed"] = "InMemoryDataStoreFailed";
  TelemetryEvent["ChatVisibilityChanged"] = "ChatVisibilityChanged";
  TelemetryEvent["EndChatSucceeded"] = "EndChatSucceeded";
  TelemetryEvent["EndChatFailed"] = "EndChatFailed";
  TelemetryEvent["SettingCustomContext"] = "SettingCustomContext";
  TelemetryEvent["WebChatLoaded"] = "WebChatLoaded";
  TelemetryEvent["LCWChatButtonClicked"] = "LCWChatButtonClicked";
  TelemetryEvent["LCWChatButtonShow"] = "LCWChatButtonShow";
  TelemetryEvent["WidgetLoadStarted"] = "WidgetLoadStarted";
  TelemetryEvent["WidgetLoadComplete"] = "WidgetLoadComplete";
  TelemetryEvent["WidgetLoadFailed"] = "WidgetLoadFailed";
  TelemetryEvent["StartChatMethodException"] = "StartChatMethodException";
  TelemetryEvent["CloseChatCall"] = "CloseChatCall";
  TelemetryEvent["CloseChatMethodException"] = "CloseChatMethodException";
  TelemetryEvent["PrechatSurveyLoaded"] = "PrechatSurveyLoaded";
  TelemetryEvent["PrechatSubmitted"] = "PrechatSubmitted";
  TelemetryEvent["StartChatSDKCall"] = "StartChatCall";
  TelemetryEvent["StartChatEventRecevied"] = "StartChatEventReceived";
  TelemetryEvent["EndChatSDKCall"] = "EndChatSDKCall";
  TelemetryEvent["EndChatEventReceived"] = "EndChatEventReceived";
  TelemetryEvent["WindowClosed"] = "WindowClosed";
  TelemetryEvent["OnNewMessageFailed"] = "OnNewMessageFailed";
  TelemetryEvent["OnNewMessageAudioNotificationFailed"] = "OnNewMessageAudioNotificationFailed";
  TelemetryEvent["DownloadTranscriptResponseNullOrUndefined"] = "DownloadTranscriptResponseNullOrUndefined";
  TelemetryEvent["EmailTranscriptSent"] = "EmailTranscriptSent";
  TelemetryEvent["EmailTranscriptFailed"] = "EmailTranscriptFailed";
  TelemetryEvent["ErrorUIPaneLoaded"] = "ErrorUIPaneLoaded";
  TelemetryEvent["DownloadTranscriptFailed"] = "DownloadTranscriptFailed";
  TelemetryEvent["StartChatFailed"] = "StartChatFailed";
  TelemetryEvent["IC3ThreadUpdateEventReceived"] = "IC3ThreadUpdateEventReceived";
  TelemetryEvent["ConfirmationCancelButtonClicked"] = "ConfirmationCancelButtonClicked";
  TelemetryEvent["ConfirmationConfirmButtonClicked"] = "ConfirmationConfirmButtonClicked";
  TelemetryEvent["LoadingPaneLoaded"] = "LoadingPaneLoaded";
  TelemetryEvent["EmailTranscriptLoaded"] = "EmailTranscriptLoaded";
  TelemetryEvent["OutOfOfficePaneLoaded"] = "OutOfOfficePaneLoaded";
  TelemetryEvent["ConfirmationPaneLoaded"] = "ConfirmationPaneLoaded";
  TelemetryEvent["ProactiveChatPaneLoaded"] = "ProactiveChatPaneLoaded";
  TelemetryEvent["ReconnectChatPaneLoaded"] = "ReconnectChatPaneLoaded";
  TelemetryEvent["HeaderCloseButtonClicked"] = "HeaderCloseButtonClicked";
  TelemetryEvent["HeaderMinimizeButtonClicked"] = "HeaderMinimizeButtonClicked";
  TelemetryEvent["DownloadTranscriptButtonClicked"] = "DownloadTranscriptButtonClicked";
  TelemetryEvent["EmailTranscriptButtonClicked"] = "EmailTranscriptButtonClicked";
  TelemetryEvent["EmailTranscriptCancelButtonClicked"] = "EmailTranscriptCancelButtonClicked";
  TelemetryEvent["AudioToggleButtonClicked"] = "AudioToggleButtonClicked";
  TelemetryEvent["SuppressBotMagicCodeSucceeded"] = "SuppressBotMagicCodeSucceeded";
  TelemetryEvent["SuppressBotMagicCodeFailed"] = "SuppressBotMagicCodeFailed";
  TelemetryEvent["GetConversationDetailsException"] = "GetConversationDetailsException";
  TelemetryEvent["AppStatesException"] = "AppStatesException";
  TelemetryEvent["BrowserUnloadEventStarted"] = "BrowserUnloadEventStarted";
  TelemetryEvent["GetAuthTokenCalled"] = "GetAuthTokenCalled";
  TelemetryEvent["GetAuthTokenFailed"] = "GetAuthTokenFailed";
  TelemetryEvent["ReceivedNullOrEmptyToken"] = "ReceivedNullOrEmptyToken";
  TelemetryEvent["CustomerVoiceResponsePageLoaded"] = "CustomerVoiceResponsePageLoaded";
  TelemetryEvent["CustomerVoiceFormResponseSubmitted"] = "CustomerVoiceFormResponseSubmitted";
  TelemetryEvent["CustomerVoiceFormResponseError"] = "CustomerVoiceFormResponseError";
  TelemetryEvent["BotAuthActivityEmptySasUrl"] = "BotAuthActivityEmptySasUrl";
  TelemetryEvent["SetBotAuthProviderFetchConfig"] = "SetBotAuthProviderFetchConfig";
  TelemetryEvent["SetBotAuthProviderHideCard"] = "SetBotAuthProviderHideCard";
  TelemetryEvent["SetBotAuthProviderDisplayCard"] = "SetBotAuthProviderDisplayCard";
  TelemetryEvent["SetBotAuthProviderNotFound"] = "SetBotAuthProviderNotFound";
  TelemetryEvent["BotAuthActivityUndefinedSignInId"] = "BotAuthActivityUndefinedSignInId";
  TelemetryEvent["ThirdPartyCookiesBlocked"] = "ThirdPartyCookiesBlocked";
  TelemetryEvent["ProcessingHTMLTextMiddlewareFailed"] = "ProcessingHTMLTextMiddlewareFailed";
  TelemetryEvent["ProcessingSanitizationMiddlewareFailed"] = "ProcessingSanitizationMiddlewareFailed";
  TelemetryEvent["FormatTagsMiddlewareJSONStringifyFailed"] = "FormatTagsMiddlewareJSONStringifyFailed";
  TelemetryEvent["AttachmentUploadValidatorMiddlewareFailed"] = "AttachmentUploadValidatorMiddlewareFailed";
  TelemetryEvent["QueuePositionMessageRecieved"] = "QueuePositionMessageRecieved";
  TelemetryEvent["AverageWaitTimeMessageRecieved"] = "AverageWaitTimeMessageRecieved";
  TelemetryEvent["DataMaskingRuleApplied"] = "DataMaskingRuleApplied";
  TelemetryEvent["DataMaskingRuleApplyFailed"] = "DataMaskingRuleApplyFailed";
  TelemetryEvent["IC3ClientEvent"] = "IC3ClientEvent";
  TelemetryEvent["ConversationEndedThreadEventReceived"] = "ConversationEndedThreadEventReceived";
  TelemetryEvent["ConversationEndedByCustomer"] = "ConversationEndedByCustomer";
  TelemetryEvent["ConversationEndedByAgent"] = "ConversationEndedByAgent";
  TelemetryEvent["InvalidConfiguration"] = "InvalidConfiguration";
  TelemetryEvent["SendTypingIndicatorSucceeded"] = "SendTypingIndicatorSucceeded";
  TelemetryEvent["SendTypingIndicatorFailed"] = "SendTypingIndicatorFailed";
  TelemetryEvent["WebChatEvent"] = "WebChatEvent";
  TelemetryEvent["PreChatSurveyStartChatMethodFailed"] = "PreChatSurveyStartChatMethodFailed";
  TelemetryEvent["ChatAlreadyTriggered"] = "ChatAlreadyTriggered";
  TelemetryEvent["StartProactiveChatEventReceived"] = "StartProactiveChatEventReceived";
  TelemetryEvent["StartProactiveChatMethodFailed"] = "StartProactiveChatMethodFailed";
  TelemetryEvent["ProactiveChatAccepted"] = "ProactiveChatAccepted";
  TelemetryEvent["ProactiveChatRejected"] = "ProactiveChatRejected";
  TelemetryEvent["IncomingProactiveChatScreenLoaded"] = "IncomingProactiveChatScreenLoaded";
  TelemetryEvent["ProactiveChatClosed"] = "ProactiveChatClosed";
  TelemetryEvent["ReconnectChatContinueConversation"] = "ReconnectChatContinueConversation";
  TelemetryEvent["ReconnectChatStartNewConversation"] = "ReconnectChatStartNewConversation";
  TelemetryEvent["ReconnectChatMinimize"] = "ReconnectChatMinimize";
  TelemetryEvent["MessageSent"] = "MessageSent";
  TelemetryEvent["MessageReceived"] = "MessageReceived";
  TelemetryEvent["SystemMessageReceived"] = "SystemMessageReceived";
  TelemetryEvent["RehydrateMessageReceived"] = "RehydrateMessageReceived";
  TelemetryEvent["CustomContextReceived"] = "CustomContextReceived";
  TelemetryEvent["NetworkDisconnected"] = "NetworkDisconnected";
  TelemetryEvent["NetworkReconnected"] = "NetworkReconnected";
  TelemetryEvent["LinkModePostChatWorkflowStarted"] = "LinkModePostChatWorkflowStarted";
  TelemetryEvent["EmbedModePostChatWorkflowStarted"] = "EmbedModePostChatWorkflowStarted";
  TelemetryEvent["PostChatWorkflowFromCustomer"] = "PostChatWorkflowFromCustomer";
  TelemetryEvent["PostChatWorkflowFromAgent"] = "PostChatWorkflowFromAgent";
  TelemetryEvent["PostChatWorkflowFromBot"] = "PostChatWorkflowFromBot";
  TelemetryEvent["PostChatContextCallSucceed"] = "PostChatContextCallSucceed";
  TelemetryEvent["PostChatContextCallFailed"] = "PostChatContextCallFailed";
  TelemetryEvent["PostChatSurveyLoadingPaneLoaded"] = "PostChatSurveyLoadingPaneLoaded";
  TelemetryEvent["PostChatSurveyLoaded"] = "PostChatSurveyLoaded";
  TelemetryEvent["ChatDisconnectThreadEventReceived"] = "ChatDisconnectThreadEventReceived";
})(TelemetryEvent || (TelemetryEvent = {}));
export class TelemetryConstants {
  static map(eventTypeOrScenarioType) {
    switch (eventTypeOrScenarioType) {
      case TelemetryEvent.ParseAdaptiveCardFailed:
      case TelemetryEvent.ReceivedNullOrEmptyToken:
      case TelemetryEvent.GetAuthTokenCalled:
      case TelemetryEvent.SuppressBotMagicCodeSucceeded:
      case TelemetryEvent.SuppressBotMagicCodeFailed:
        return ScenarioType.CONFIG_VALIDATION;
      case TelemetryEvent.WebChatLoaded:
      case TelemetryEvent.WidgetLoadComplete:
      case TelemetryEvent.WidgetLoadFailed:
      case TelemetryEvent.IncomingProactiveChatScreenLoaded:
      case TelemetryEvent.LCWChatButtonShow:
      case TelemetryEvent.PrechatSurveyLoaded:
      case TelemetryEvent.LoadingPaneLoaded:
      case TelemetryEvent.PostChatSurveyLoadingPaneLoaded:
      case TelemetryEvent.PostChatSurveyLoaded:
      case TelemetryEvent.EmailTranscriptLoaded:
      case TelemetryEvent.OutOfOfficePaneLoaded:
      case TelemetryEvent.ConfirmationPaneLoaded:
      case TelemetryEvent.ProactiveChatPaneLoaded:
      case TelemetryEvent.ThirdPartyCookiesBlocked:
        return ScenarioType.LOAD;
      case TelemetryEvent.PrechatSubmitted:
      case TelemetryEvent.LCWChatButtonClicked:
      case TelemetryEvent.ProactiveChatAccepted:
      case TelemetryEvent.ProactiveChatRejected:
      case TelemetryEvent.ProactiveChatClosed:
      case TelemetryEvent.ProcessingHTMLTextMiddlewareFailed:
      case TelemetryEvent.DataMaskingRuleApplied:
      case TelemetryEvent.ConversationEndedThreadEventReceived:
      case TelemetryEvent.InvalidConfiguration:
      case TelemetryEvent.DownloadTranscriptResponseNullOrUndefined:
      case TelemetryEvent.EmailTranscriptSent:
      case TelemetryEvent.EmailTranscriptFailed:
      case TelemetryEvent.DownloadTranscriptFailed:
      case TelemetryEvent.IC3ThreadUpdateEventReceived:
      case TelemetryEvent.ConfirmationCancelButtonClicked:
      case TelemetryEvent.ConfirmationConfirmButtonClicked:
      case TelemetryEvent.PreChatSurveyStartChatMethodFailed:
      case TelemetryEvent.HeaderCloseButtonClicked:
      case TelemetryEvent.HeaderMinimizeButtonClicked:
      case TelemetryEvent.MessageSent:
      case TelemetryEvent.MessageReceived:
      case TelemetryEvent.CustomContextReceived:
      case TelemetryEvent.BrowserUnloadEventStarted:
      case TelemetryEvent.NetworkDisconnected:
      case TelemetryEvent.NetworkReconnected:
      case TelemetryEvent.AudioToggleButtonClicked:
      case TelemetryEvent.EmailTranscriptCancelButtonClicked:
      case TelemetryEvent.CustomerVoiceResponsePageLoaded:
      case TelemetryEvent.CustomerVoiceFormResponseSubmitted:
      case TelemetryEvent.CustomerVoiceFormResponseError:
      case TelemetryEvent.LinkModePostChatWorkflowStarted:
      case TelemetryEvent.EmbedModePostChatWorkflowStarted:
      case TelemetryEvent.PostChatWorkflowFromCustomer:
      case TelemetryEvent.PostChatWorkflowFromAgent:
      case TelemetryEvent.PostChatWorkflowFromBot:
      case TelemetryEvent.AppStatesException:
        return ScenarioType.ACTIONS;
      case TelemetryEvent.StartChatSDKCall:
      case TelemetryEvent.StartChatEventRecevied:
      case TelemetryEvent.StartChatMethodException:
      case TelemetryEvent.CloseChatMethodException:
      case TelemetryEvent.StartProactiveChatEventReceived:
      case TelemetryEvent.StartProactiveChatMethodFailed:
      case TelemetryEvent.OnNewMessageFailed:
      case TelemetryEvent.OnNewMessageAudioNotificationFailed:
      case TelemetryEvent.GetConversationDetailsCallFailed:
      case TelemetryEvent.EndChatSDKCall:
      case TelemetryEvent.EndChatEventReceived:
      case TelemetryEvent.EndChatSDKCallFailed:
      case TelemetryEvent.PostChatContextCallFailed:
      case TelemetryEvent.PostChatContextCallSucceed:
      case TelemetryEvent.GetConversationDetailsException:
        return ScenarioType.SDK;
      case TelemetryEvent.VideoCallAcceptButtonClick:
      case TelemetryEvent.CallAdded:
      case TelemetryEvent.LocalVideoStreamAdded:
      case TelemetryEvent.LocalVideoStreamRemoved:
      case TelemetryEvent.RemoteVideoStreamAdded:
      case TelemetryEvent.RemoteVideoStreamRemoved:
      case TelemetryEvent.CallDisconnected:
      case TelemetryEvent.CallDisconnectedException:
      case TelemetryEvent.IncomingCallEnded:
      case TelemetryEvent.VoiceVideoSdkInitialize:
      case TelemetryEvent.VoiceVideoSdkInitializeException:
      case TelemetryEvent.VoiceVideoLoading:
      case TelemetryEvent.VoiceVideoNotLoaded:
      case TelemetryEvent.VoiceVideoLoadingException:
      case TelemetryEvent.VoiceVideoAcceptCallException:
      case TelemetryEvent.VoiceVideoAcceptCallWithVideoException:
      case TelemetryEvent.VoiceCallAcceptButtonClick:
      case TelemetryEvent.CallRejectClick:
      case TelemetryEvent.CallRejectClickException:
      case TelemetryEvent.ToggleMuteButtonClick:
      case TelemetryEvent.ToggleMuteButtonClickException:
      case TelemetryEvent.ToggleCameraButtonClick:
      case TelemetryEvent.ToggleCameraButtonClickException:
      case TelemetryEvent.EndCallButtonClick:
      case TelemetryEvent.EndCallButtonClickException:
      case TelemetryEvent.CallingSDKInitSuccess:
      case TelemetryEvent.CallingSDKInitFailed:
      case TelemetryEvent.CallingSDKLoadSuccess:
      case TelemetryEvent.CallingSDKLoadFailed:
        return ScenarioType.CALLING;
      default:
        return ScenarioType.ACTIONS;
    }
  }
  static mapEventToScenario(eventTypeOrScenarioType) {
    return TelemetryConstants.map(eventTypeOrScenarioType);
  }
}