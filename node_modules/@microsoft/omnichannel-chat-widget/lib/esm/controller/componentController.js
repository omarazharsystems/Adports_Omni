import { ConversationState } from "../contexts/common/ConversationState";
export const shouldShowChatButton = state => {
  var _state$appStates;
  return (state.appStates.isMinimized || state.appStates.conversationState === ConversationState.Closed) && (state === null || state === void 0 ? void 0 : (_state$appStates = state.appStates) === null || _state$appStates === void 0 ? void 0 : _state$appStates.hideStartChatButton) === false; // Do not show chat button in case of popout
};

export const shouldShowProactiveChatPane = state => {
  return !state.appStates.isMinimized && state.appStates.conversationState === ConversationState.ProactiveChat;
};
export const shouldShowHeader = state => {
  return !state.appStates.isMinimized && state.appStates.conversationState !== ConversationState.Closed && state.appStates.conversationState !== ConversationState.ProactiveChat;
};
export const shouldShowFooter = state => {
  return !state.appStates.isMinimized && (state.appStates.conversationState === ConversationState.Active || state.appStates.conversationState === ConversationState.InActive || state.appStates.conversationState === ConversationState.Postchat);
};
export const shouldShowEmailTranscriptPane = state => {
  return state.uiStates.showEmailTranscriptPane;
};
export const shouldShowWebChatContainer = state => {
  return state.appStates.conversationState === ConversationState.Active || state.appStates.conversationState === ConversationState.InActive;
};
export const shouldShowLoadingPane = state => {
  return !state.appStates.isMinimized && state.appStates.conversationState === ConversationState.Loading;
};
export const shouldShowReconnectChatPane = state => {
  return !state.appStates.isMinimized && state.appStates.conversationState === ConversationState.ReconnectChat;
};
export const shouldShowPostChatLoadingPane = state => {
  return !state.appStates.isMinimized && state.appStates.conversationState === ConversationState.PostchatLoading;
};
export const shouldShowOutOfOfficeHoursPane = state => {
  return !state.appStates.isMinimized && state.appStates.conversationState === ConversationState.OutOfOffice;
};
export const shouldShowPreChatSurveyPane = state => {
  return state.appStates.conversationState === ConversationState.Prechat;
};
export const shouldShowConfirmationPane = state => {
  return state.uiStates.showConfirmationPane;
};
export const shouldShowPostChatSurveyPane = state => {
  return state.appStates.conversationState === ConversationState.Postchat;
};
export const shouldShowCallingContainer = state => {
  return state.appStates.conversationState === ConversationState.Active && state.appStates.e2vvEnabled;
};