import { LogLevel, TelemetryEvent } from "../../common/telemetry/TelemetryConstants";
import React, { useEffect } from "react";
import { OutOfOfficeHoursPane } from "@microsoft/omnichannel-chat-components";
import { TelemetryHelper } from "../../common/telemetry/TelemetryHelper";
import { defaultGeneralStyleProps } from "./common/defaultStyleProps/defaultgeneralOOOHPaneStyleProps";
import { findAllFocusableElement } from "../../common/utils";
import useChatContextStore from "../../hooks/useChatContextStore";
export const OutOfOfficeHoursPaneStateful = props => {
  var _props$styleProps;
  const [state] = useChatContextStore();
  const generalStyleProps = Object.assign({}, defaultGeneralStyleProps, (_props$styleProps = props.styleProps) === null || _props$styleProps === void 0 ? void 0 : _props$styleProps.generalStyleProps);
  const styleProps = {
    ...props.styleProps,
    generalStyleProps: generalStyleProps
  };
  const controlProps = {
    id: "oc-lcw-outofofficehours-pane",
    dir: state.domainStates.globalDir,
    ...props.controlProps
  };

  // Move focus to the first button
  useEffect(() => {
    const firstElement = findAllFocusableElement(`#${state.domainStates.widgetElementId}`);
    if (firstElement && firstElement[0]) {
      firstElement[0].focus();
    }
    TelemetryHelper.logLoadingEvent(LogLevel.INFO, {
      Event: TelemetryEvent.OutOfOfficePaneLoaded
    });
  }, []);
  return /*#__PURE__*/React.createElement(OutOfOfficeHoursPane, {
    componentOverrides: props.componentOverrides,
    controlProps: controlProps,
    styleProps: styleProps
  });
};
export default OutOfOfficeHoursPaneStateful;