import React, { useCallback, useEffect, useRef } from "react";
import { KeyCodes } from "../../../../../../common/KeyCodes";
import { Stack } from "@fluentui/react";
import { defaultMiddlewareLocalizedTexts } from "../../../../common/defaultProps/defaultMiddlewareLocalizedTexts";
import { defaultTimestampContentStyles } from "../defaultStyles/defaultTimestampContentStyles";
import { defaultTimestampFailedStyles } from "../defaultStyles/defaultTimestampFailedStyles";
import { defaultTimestampRetryStyles } from "../defaultStyles/defaultTimestampRetryStyles";
import { getTimestampHourMinute } from "../../../../../../common/utils";
import { hooks } from "botframework-webchat";
import { useChatContextStore } from "../../../../../..";

/* eslint @typescript-eslint/no-explicit-any: "off" */
export const NotDeliveredTimestamp = _ref => {
  var _state$domainStates$r, _state$domainStates$r2, _state$domainStates$r3, _state$domainStates$r4, _state$domainStates$m, _state$domainStates$m2;
  let {
    args
  } = _ref;
  const timestampRef = useRef();
  const {
    useFocus,
    usePostActivity
  } = hooks;
  const focus = useFocus();
  const postActivity = usePostActivity();
  const {
    activity
  } = args;
  const {
    timestamp
  } = activity;
  const [state] = useChatContextStore();
  const dir = ((_state$domainStates$r = state.domainStates.renderingMiddlewareProps) === null || _state$domainStates$r === void 0 ? void 0 : _state$domainStates$r.timestampDir) ?? state.domainStates.globalDir;
  const contentStyles = {
    ...defaultTimestampContentStyles,
    ...((_state$domainStates$r2 = state.domainStates.renderingMiddlewareProps) === null || _state$domainStates$r2 === void 0 ? void 0 : _state$domainStates$r2.timestampContentStyleProps)
  };
  const failedTextStyles = {
    ...defaultTimestampFailedStyles,
    ...((_state$domainStates$r3 = state.domainStates.renderingMiddlewareProps) === null || _state$domainStates$r3 === void 0 ? void 0 : _state$domainStates$r3.timestampFailedTextStyleProps)
  };
  const retryTextStyles = {
    ...defaultTimestampRetryStyles,
    ...((_state$domainStates$r4 = state.domainStates.renderingMiddlewareProps) === null || _state$domainStates$r4 === void 0 ? void 0 : _state$domainStates$r4.timestampRetryTextStyleProps)
  };
  useEffect(() => {
    var _timestampRef$current;
    const timestampWebChatNodes = timestampRef === null || timestampRef === void 0 ? void 0 : (_timestampRef$current = timestampRef.current) === null || _timestampRef$current === void 0 ? void 0 : _timestampRef$current.childNodes;
    if ((timestampWebChatNodes === null || timestampWebChatNodes === void 0 ? void 0 : timestampWebChatNodes.length) > 1) {
      timestampWebChatNodes[1].innerText = getTimestampHourMinute(timestamp);
    }
  }, [timestampRef]);
  const onRetryClick = useCallback(async () => {
    var _activity$channelData;
    activity.previousClientActivityID = (_activity$channelData = activity.channelData) === null || _activity$channelData === void 0 ? void 0 : _activity$channelData.clientActivityID;
    await postActivity(activity);
    focus("sendBox");
  }, [activity, focus, postActivity]);
  const onRetryKeyEnter = event => {
    if (event.code === KeyCodes.ENTER) {
      event.preventDefault();
      onRetryClick();
    }
  };
  return /*#__PURE__*/React.createElement(Stack, {
    style: contentStyles,
    dir: dir,
    horizontal: true
  }, /*#__PURE__*/React.createElement("span", null, " ", getTimestampHourMinute(timestamp)), /*#__PURE__*/React.createElement("span", null, " \xA0-\xA0 "), /*#__PURE__*/React.createElement("span", {
    style: failedTextStyles
  }, " ", ((_state$domainStates$m = state.domainStates.middlewareLocalizedTexts) === null || _state$domainStates$m === void 0 ? void 0 : _state$domainStates$m.MIDDLEWARE_MESSAGE_NOT_DELIVERED) ?? defaultMiddlewareLocalizedTexts.MIDDLEWARE_MESSAGE_NOT_DELIVERED, " "), /*#__PURE__*/React.createElement("span", null, " \xA0-\xA0 "), /*#__PURE__*/React.createElement("span", {
    style: retryTextStyles,
    onClick: onRetryClick,
    onKeyDown: onRetryKeyEnter,
    tabIndex: 0
  }, " ", ((_state$domainStates$m2 = state.domainStates.middlewareLocalizedTexts) === null || _state$domainStates$m2 === void 0 ? void 0 : _state$domainStates$m2.MIDDLEWARE_MESSAGE_RETRY) ?? defaultMiddlewareLocalizedTexts.MIDDLEWARE_MESSAGE_RETRY, " "));
};