/******
 * AttachmentProcessingMiddleware
 * 
 * Handles attachment sending.
 ******/

import { WebChatActionType } from "../../enums/WebChatActionType";

// eslint-disable-next-line @typescript-eslint/no-explicit-any
const createSendFileAction = files => {
  return {
    payload: {
      files
    },
    type: WebChatActionType.WEB_CHAT_SEND_FILES
  };
};

// eslint-disable-next-line @typescript-eslint/no-explicit-any
const attachmentProcessingMiddleware = _ref => {
  let {
    dispatch
  } = _ref;
  return next => async action => {
    var _action$payload, _action$payload$files;
    if ((action === null || action === void 0 ? void 0 : action.type) === WebChatActionType.WEB_CHAT_SEND_FILES && (action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : (_action$payload$files = _action$payload.files) === null || _action$payload$files === void 0 ? void 0 : _action$payload$files.length) > 0) {
      const files = action.payload.files;
      if (files.length === 1) {
        return next(action);
      }
      const dispatchAction = createSendFileAction(files.slice(0, files.length - 1));
      const nextAction = createSendFileAction([files[files.length - 1]]);
      await dispatch(dispatchAction);
      return next(nextAction);
    }
    return next(action);
  };
};
export default attachmentProcessingMiddleware;