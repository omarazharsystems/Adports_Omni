import { NotificationHandler } from "../../webchatcontainerstateful/webchatcontroller/notification/NotificationHandler";
import { NotificationScenarios } from "../../webchatcontainerstateful/webchatcontroller/enums/NotificationScenarios";
import { defaultMiddlewareLocalizedTexts } from "../../webchatcontainerstateful/common/defaultProps/defaultMiddlewareLocalizedTexts";
import { LogLevel, TelemetryEvent } from "../../../common/telemetry/TelemetryConstants";
import { TelemetryHelper } from "../../../common/telemetry/TelemetryHelper";
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const handleChatDisconnect = (props, state, setWebChatStyles) => {
  var _state$appStates;
  if (state !== null && state !== void 0 && (_state$appStates = state.appStates) !== null && _state$appStates !== void 0 && _state$appStates.chatDisconnectEventReceived) {
    var _props$webChatContain, _props$webChatContain2;
    if ((props === null || props === void 0 ? void 0 : (_props$webChatContain = props.webChatContainerProps) === null || _props$webChatContain === void 0 ? void 0 : (_props$webChatContain2 = _props$webChatContain.renderingMiddlewareProps) === null || _props$webChatContain2 === void 0 ? void 0 : _props$webChatContain2.hideSendboxOnConversationEnd) !== false) {
      setWebChatStyles(styles => {
        return {
          ...styles,
          hideSendBox: true
        };
      });
    }
    NotificationHandler.notifyWarning(NotificationScenarios.ChatDisconnect, defaultMiddlewareLocalizedTexts.MIDDLEWARE_BANNER_CHAT_DISCONNECT);
    TelemetryHelper.logActionEvent(LogLevel.INFO, {
      Event: TelemetryEvent.ChatDisconnectThreadEventReceived,
      Description: "Chat disconnected due to timeout, left or removed."
    });
  }
};
export { handleChatDisconnect };