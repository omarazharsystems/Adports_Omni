import { LogLevel, TelemetryEvent } from "../../../common/telemetry/TelemetryConstants";
import { BroadcastService } from "@microsoft/omnichannel-chat-components";
import { ConversationState } from "../../../contexts/common/ConversationState";
import { LiveChatWidgetActionType } from "../../../contexts/common/LiveChatWidgetActionType";
import { TelemetryHelper } from "../../../common/telemetry/TelemetryHelper";

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const setPostChatContextAndLoadSurvey = async (chatSDK, dispatch, persistedChat) => {
  try {
    if (!persistedChat) {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      const context = await chatSDK.getPostChatSurveyContext();
      TelemetryHelper.logSDKEvent(LogLevel.INFO, {
        Event: TelemetryEvent.PostChatContextCallSucceed,
        Description: "Postchat context call succeed."
      });
      dispatch({
        type: LiveChatWidgetActionType.SET_POST_CHAT_CONTEXT,
        payload: context
      });
    }
  } catch (ex) {
    TelemetryHelper.logSDKEvent(LogLevel.ERROR, {
      Event: TelemetryEvent.PostChatContextCallFailed,
      ExceptionDetails: {
        exception: ex
      }
    });
  }

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  BroadcastService.getMessageByEventName("LoadPostChatSurvey").subscribe(msg => {
    dispatch({
      type: LiveChatWidgetActionType.SET_CONVERSATION_STATE,
      payload: ConversationState.Postchat
    });
  });
};