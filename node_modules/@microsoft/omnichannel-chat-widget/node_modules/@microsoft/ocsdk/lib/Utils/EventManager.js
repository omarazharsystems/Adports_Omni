"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

/* eslint-disable @typescript-eslint/no-explicit-any*/

/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
// Ported from https://dev.azure.com/dynamicscrm/OneCRM/_git/CRM.Omnichannel.IC3Client?path=/src/Common/EventManager.ts&version=GBmaster
var EventManager = /*#__PURE__*/function () {
  function EventManager() {
    (0, _classCallCheck2["default"])(this, EventManager);
  }

  (0, _createClass2["default"])(EventManager, null, [{
    key: "raiseCustomEvent",
    value: function raiseCustomEvent(eventName, payload) {
      var event = EventManager.createCustomEvent(eventName, payload);
      window.dispatchEvent(event);
    }
    /**
     * Creates a custom event based on the eventName and payload
     * The custom event is dispatch-compatible across browsers
     * @param {string} eventName: Name of the event.
     * @param {any} payload: The event payload.
     * @returns {CustomEvent}: CustomEvent instance.
     */

  }, {
    key: "createCustomEvent",
    value: function createCustomEvent(eventName, payload) {
      var eventDetails = payload ? {
        detail: payload
      } : undefined;
      var event = null;

      try {
        // For non IE11 scenarios, customevent object can be dispatched
        event = new CustomEvent(eventName, eventDetails);
      } catch (e) {
        // Special handling for IE11 scenario, where customevent object cannot be dispatched
        event = document.createEvent("CustomEvent");
        event.initCustomEvent(eventName, true, true, eventDetails);
      }

      return event;
    }
  }]);
  return EventManager;
}();

exports["default"] = EventManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9VdGlscy9FdmVudE1hbmFnZXIudHMiXSwibmFtZXMiOlsiRXZlbnRNYW5hZ2VyIiwiZXZlbnROYW1lIiwicGF5bG9hZCIsImV2ZW50IiwiY3JlYXRlQ3VzdG9tRXZlbnQiLCJ3aW5kb3ciLCJkaXNwYXRjaEV2ZW50IiwiZXZlbnREZXRhaWxzIiwiZGV0YWlsIiwidW5kZWZpbmVkIiwiQ3VzdG9tRXZlbnQiLCJlIiwiZG9jdW1lbnQiLCJjcmVhdGVFdmVudCIsImluaXRDdXN0b21FdmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBO0FBRUE7SUFFcUJBLFk7Ozs7Ozs7V0FDbkIsMEJBQStCQyxTQUEvQixFQUFrREMsT0FBbEQsRUFBdUU7QUFDckUsVUFBTUMsS0FBSyxHQUFHSCxZQUFZLENBQUNJLGlCQUFiLENBQStCSCxTQUEvQixFQUEwQ0MsT0FBMUMsQ0FBZDtBQUNBRyxNQUFBQSxNQUFNLENBQUNDLGFBQVAsQ0FBcUJILEtBQXJCO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztXQUNFLDJCQUFpQ0YsU0FBakMsRUFBb0RDLE9BQXBELEVBQWdGO0FBQzlFLFVBQU1LLFlBQVksR0FBR0wsT0FBTyxHQUFHO0FBQzdCTSxRQUFBQSxNQUFNLEVBQUVOO0FBRHFCLE9BQUgsR0FFeEJPLFNBRko7QUFJQSxVQUFJTixLQUFLLEdBQUcsSUFBWjs7QUFDQSxVQUFJO0FBQ0Y7QUFDQUEsUUFBQUEsS0FBSyxHQUFHLElBQUlPLFdBQUosQ0FBZ0JULFNBQWhCLEVBQTJCTSxZQUEzQixDQUFSO0FBQ0QsT0FIRCxDQUdFLE9BQU9JLENBQVAsRUFBVTtBQUNWO0FBQ0FSLFFBQUFBLEtBQUssR0FBR1MsUUFBUSxDQUFDQyxXQUFULENBQXFCLGFBQXJCLENBQVI7QUFDQVYsUUFBQUEsS0FBSyxDQUFDVyxlQUFOLENBQXNCYixTQUF0QixFQUFpQyxJQUFqQyxFQUF1QyxJQUF2QyxFQUE2Q00sWUFBN0M7QUFDRDs7QUFDRCxhQUFPSixLQUFQO0FBQ0QiLCJzb3VyY2VSb290Ijoib2NzZGs6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSovXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvZXhwbGljaXQtbW9kdWxlLWJvdW5kYXJ5LXR5cGVzICovXG5cbi8vIFBvcnRlZCBmcm9tIGh0dHBzOi8vZGV2LmF6dXJlLmNvbS9keW5hbWljc2NybS9PbmVDUk0vX2dpdC9DUk0uT21uaWNoYW5uZWwuSUMzQ2xpZW50P3BhdGg9L3NyYy9Db21tb24vRXZlbnRNYW5hZ2VyLnRzJnZlcnNpb249R0JtYXN0ZXJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXZlbnRNYW5hZ2VyIHtcbiAgcHVibGljIHN0YXRpYyByYWlzZUN1c3RvbUV2ZW50KGV2ZW50TmFtZTogc3RyaW5nLCBwYXlsb2FkPzogYW55KTogdm9pZCB7XG4gICAgY29uc3QgZXZlbnQgPSBFdmVudE1hbmFnZXIuY3JlYXRlQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCBwYXlsb2FkKTtcbiAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGN1c3RvbSBldmVudCBiYXNlZCBvbiB0aGUgZXZlbnROYW1lIGFuZCBwYXlsb2FkXG4gICAqIFRoZSBjdXN0b20gZXZlbnQgaXMgZGlzcGF0Y2gtY29tcGF0aWJsZSBhY3Jvc3MgYnJvd3NlcnNcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50TmFtZTogTmFtZSBvZiB0aGUgZXZlbnQuXG4gICAqIEBwYXJhbSB7YW55fSBwYXlsb2FkOiBUaGUgZXZlbnQgcGF5bG9hZC5cbiAgICogQHJldHVybnMge0N1c3RvbUV2ZW50fTogQ3VzdG9tRXZlbnQgaW5zdGFuY2UuXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBjcmVhdGVDdXN0b21FdmVudChldmVudE5hbWU6IHN0cmluZywgcGF5bG9hZD86IGFueSk6IEN1c3RvbUV2ZW50IHtcbiAgICBjb25zdCBldmVudERldGFpbHMgPSBwYXlsb2FkID8ge1xuICAgICAgZGV0YWlsOiBwYXlsb2FkXG4gICAgfSA6IHVuZGVmaW5lZDtcblxuICAgIGxldCBldmVudCA9IG51bGw7XG4gICAgdHJ5IHtcbiAgICAgIC8vIEZvciBub24gSUUxMSBzY2VuYXJpb3MsIGN1c3RvbWV2ZW50IG9iamVjdCBjYW4gYmUgZGlzcGF0Y2hlZFxuICAgICAgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCBldmVudERldGFpbHMpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIFNwZWNpYWwgaGFuZGxpbmcgZm9yIElFMTEgc2NlbmFyaW8sIHdoZXJlIGN1c3RvbWV2ZW50IG9iamVjdCBjYW5ub3QgYmUgZGlzcGF0Y2hlZFxuICAgICAgZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudChcIkN1c3RvbUV2ZW50XCIpO1xuICAgICAgZXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwgdHJ1ZSwgdHJ1ZSwgZXZlbnREZXRhaWxzKTtcbiAgICB9XG4gICAgcmV0dXJuIGV2ZW50O1xuICB9XG59XG4iXX0=