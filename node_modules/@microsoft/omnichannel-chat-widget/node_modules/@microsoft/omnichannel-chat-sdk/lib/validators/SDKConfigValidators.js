"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultChatSDKConfig = void 0;
var settings_1 = require("../config/settings");
var defaultChatSDKConfig = {
    dataMasking: {
        disable: false,
        maskingCharacter: '#'
    },
    telemetry: {
        disable: false,
        ariaTelemetryKey: settings_1.ariaTelemetryKey
    },
    persistentChat: {
        disable: true,
        tokenUpdateTime: 21600000
    },
    chatReconnect: {
        disable: true,
    }
};
exports.defaultChatSDKConfig = defaultChatSDKConfig;
/**
 * Validates data masking SDK config.
 * @param dataMaskingConfig DataMasking SDK Config.
 */
var validateDataMaskingConfig = function (dataMaskingConfig) {
    if (typeof dataMaskingConfig.disable !== "boolean") {
        dataMaskingConfig.disable = defaultChatSDKConfig.dataMasking.disable; // eslint-disable-line @typescript-eslint/no-non-null-assertion
    }
    if (typeof dataMaskingConfig.maskingCharacter !== "string" || dataMaskingConfig.maskingCharacter.length !== 1) {
        dataMaskingConfig.maskingCharacter = defaultChatSDKConfig.dataMasking.maskingCharacter; // eslint-disable-line @typescript-eslint/no-non-null-assertion
    }
};
var validatePersistentChatConfig = function (persistentChatConfig) {
    if (typeof persistentChatConfig.tokenUpdateTime !== "number" || !persistentChatConfig.tokenUpdateTime) {
        persistentChatConfig.tokenUpdateTime = defaultChatSDKConfig.persistentChat.tokenUpdateTime; // eslint-disable-line @typescript-eslint/no-non-null-assertion
    }
};
var validateSDKConfig = function (chatSDKConfig) {
    if (chatSDKConfig.dataMasking) {
        validateDataMaskingConfig(chatSDKConfig.dataMasking);
    }
    if (chatSDKConfig.persistentChat) {
        validatePersistentChatConfig(chatSDKConfig.persistentChat);
    }
};
exports.default = validateSDKConfig;
//# sourceMappingURL=SDKConfigValidators.js.map