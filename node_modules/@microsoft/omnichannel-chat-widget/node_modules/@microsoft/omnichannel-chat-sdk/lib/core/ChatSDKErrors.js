"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Enum of ChatSDK standard errors.
 *
 * @enum {string}
 */
var ChatSDKErrors;
(function (ChatSDKErrors) {
    /** Failure in ChatAdapter initialization */
    ChatSDKErrors["ChatAdapterInitializationFailure"] = "ChatAdapterInitializationFailure";
    /** Live Chat Version currently not supported with ChatSDK */
    ChatSDKErrors["UnsupportedLiveChatVersion"] = "UnsupportedLiveChatVersion";
    /** Failure in OCSDK initialization */
    ChatSDKErrors["OmnichannelClientInitializationFailure"] = "OmnichannelClientInitializationFailure";
    /** Failure in messaging/communication client creation */
    ChatSDKErrors["MessagingClientCreationFailure"] = "MessagingClientCreationFailure";
    /** Failure in retrieval of ChatConfig */
    ChatSDKErrors["ChatConfigRetrievalFailure"] = "ChatConfigRetrievalFailure";
    /** ChatSDK is not initialized */
    ChatSDKErrors["UninitializedChatSDK"] = "UninitializedChatSDK";
    /** Failure in retrieving ChatToken */
    ChatSDKErrors["ChatTokenRetrievalFailure"] = "ChatTokenRetrievalFailure";
    /** Failure in loading a script dynamically */
    ChatSDKErrors["ScriptLoadFailure"] = "ScriptLoadFailure";
    /** Feature not supported in the platform used */
    ChatSDKErrors["UnsupportedPlatform"] = "UnsupportedPlatform";
    /** Feature is not enabled. */
    ChatSDKErrors["FeatureDisabled"] = "FeatureDisabled";
    /** Conversation has been closed (WrapUp/Closed state) */
    ChatSDKErrors["ClosedConversation"] = "ClosedConversation";
    /** Conversation is invalid or not found */
    ChatSDKErrors["InvalidConversation"] = "InvalidConversation";
    /** Failure in retrieval of the conversation given the authenticated user id */
    ChatSDKErrors["AuthenticatedChatConversationRetrievalFailure"] = "AuthenticatedChatConversationRetrievalFailure";
    /** Failure on retrieving conversation from persistent chat */
    ChatSDKErrors["PersistentChatConversationRetrievalFailure"] = "PersistentChatConversationRetrievalFailure";
    /** Failure on conversation init due to widget being outside of operating hours */
    ChatSDKErrors["WidgetUseOutsideOperatingHour"] = "WidgetUseOutsideOperatingHour";
    /** Failure in conversation initialization */
    ChatSDKErrors["ConversationInitializationFailure"] = "ConversationInitializationFailure";
    /** Failure in closure of the conversation */
    ChatSDKErrors["ConversationClosureFailure"] = "ConversationClosureFailure";
    /** Failure in messaging/communication client initialization */
    ChatSDKErrors["MessagingClientInitializationFailure"] = "MessagingClientInitializationFailure";
    /** Failure in message/communication client joining the conversation */
    ChatSDKErrors["MessagingClientConversationJoinFailure"] = "MessagingClientConversationJoinFailure";
    /** Failure on retrieving live chat transcript of a conversation */
    ChatSDKErrors["LiveChatTranscriptRetrievalFailure"] = "LiveChatTranscriptRetrievalFailure";
    /** Failure on retrieving conversation details */
    ChatSDKErrors["ConversationDetailsRetrievalFailure"] = "ConversationDetailsRetrievalFailure";
    /** Failure on finding the contact id related to the auth code */
    ChatSDKErrors["AuthContactIdNotFoundFailure"] = "AuthContactIdNotFoundFailure";
})(ChatSDKErrors || (ChatSDKErrors = {}));
exports.default = ChatSDKErrors;
//# sourceMappingURL=ChatSDKErrors.js.map