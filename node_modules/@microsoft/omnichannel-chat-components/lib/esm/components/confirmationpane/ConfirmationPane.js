import { DefaultButton, PrimaryButton } from "@fluentui/react/lib/Button";
import { Label, Stack } from "@fluentui/react";
import React, { useCallback } from "react";
import { BroadcastService } from "../../services/BroadcastService";
import { ElementType, EventNames, KeyCodes } from "../../common/Constants";
import { decodeComponentString } from "../../common/decodeComponentString";
import { defaultConfirmationPaneButtonGroupStyles } from "./common/defaultStyles/defaultConfirmationPaneButtonGroupStyles";
import { defaultConfirmationPaneCancelButtonHoveredStyles } from "./common/defaultStyles/defaultConfirmationPaneCancelButtonHoveredStyles";
import { defaultConfirmationPaneCancelButtonStyles } from "./common/defaultStyles/defaultConfirmationPaneCancelButtonStyles";
import { defaultConfirmationPaneConfirmButtonHoveredStyles } from "./common/defaultStyles/defaultConfirmationPaneConfirmButtonHoveredStyles";
import { defaultConfirmationPaneConfirmButtonStyles } from "./common/defaultStyles/defaultConfirmationPaneConfirmButtonStyles";
import { defaultConfirmationPaneControlProps } from "./common/defaultProps/defaultConfirmationPaneControlProps";
import { defaultConfirmationPaneGeneralStyles } from "./common/defaultStyles/defaultConfirmationPaneGeneralStyles";
import { defaultConfirmationPaneSubtitleStyles } from "./common/defaultStyles/defaultConfirmationPaneSubtitleStyles";
import { defaultConfirmationPaneTitleStyles } from "./common/defaultStyles/defaultConfirmationPaneTitleStyles";
import { defaultConfirmationPaneConfirmButtonFocusedStyles } from "./common/defaultStyles/defaultConfirmationPaneConfirmButtonFocusedStyles";
import { defaultConfirmationPaneCancelButtonFocusedStyles } from "./common/defaultStyles/defaultConfirmationPaneCancelButtonFocusedStyles";

function ConfirmationPane(props) {
  var _props$controlProps, _props$styleProps, _props$styleProps2, _props$styleProps3, _props$styleProps4, _props$styleProps5, _props$styleProps6, _props$styleProps7, _props$styleProps8, _props$styleProps9, _props$styleProps10, _props$styleProps11, _props$styleProps12, _props$controlProps6, _props$controlProps7, _props$controlProps8, _props$componentOverr, _props$styleProps13, _props$styleProps13$c, _props$controlProps9, _props$controlProps10, _props$componentOverr2, _props$styleProps14, _props$styleProps14$c, _props$controlProps11, _props$styleProps15, _props$styleProps15$c, _props$controlProps12, _props$componentOverr3, _props$styleProps16, _props$styleProps16$c, _props$controlProps13, _props$controlProps14, _props$controlProps15, _props$componentOverr4, _props$styleProps17, _props$styleProps17$c, _props$controlProps16, _props$controlProps17;

  const elementId = ((_props$controlProps = props.controlProps) === null || _props$controlProps === void 0 ? void 0 : _props$controlProps.id) ?? defaultConfirmationPaneControlProps.id;
  const handleConfirmClick = useCallback(() => {
    var _props$controlProps2;

    if ((_props$controlProps2 = props.controlProps) !== null && _props$controlProps2 !== void 0 && _props$controlProps2.onConfirm) {
      var _props$controlProps3;

      const customEvent = {
        elementType: ElementType.ConfirmationPaneConfirmButton,
        elementId: elementId + "-confirmbutton",
        eventName: EventNames.OnClick
      };
      BroadcastService.postMessage(customEvent);
      (_props$controlProps3 = props.controlProps) === null || _props$controlProps3 === void 0 ? void 0 : _props$controlProps3.onConfirm();
    }
  }, []);
  const handleCancelClick = useCallback(() => {
    var _props$controlProps4;

    if ((_props$controlProps4 = props.controlProps) !== null && _props$controlProps4 !== void 0 && _props$controlProps4.onCancel) {
      var _props$controlProps5;

      const customEvent = {
        elementType: ElementType.ConfirmationPaneCancelButton,
        elementId: elementId + "-cancelbutton",
        eventName: EventNames.OnClick
      };
      BroadcastService.postMessage(customEvent);
      (_props$controlProps5 = props.controlProps) === null || _props$controlProps5 === void 0 ? void 0 : _props$controlProps5.onCancel();
    }
  }, []); // eslint-disable-next-line @typescript-eslint/no-explicit-any

  const handleEscKeyDown = useCallback(e => {
    if (e.code === KeyCodes.ESCAPE) {
      handleCancelClick();
    }
  }, []);
  const containerStyles = {
    root: Object.assign({}, defaultConfirmationPaneGeneralStyles, (_props$styleProps = props.styleProps) === null || _props$styleProps === void 0 ? void 0 : _props$styleProps.generalStyleProps)
  };
  const titleStyles = {
    root: Object.assign({}, defaultConfirmationPaneTitleStyles, (_props$styleProps2 = props.styleProps) === null || _props$styleProps2 === void 0 ? void 0 : _props$styleProps2.titleStyleProps)
  };
  const subtitleStyles = {
    root: Object.assign({}, defaultConfirmationPaneSubtitleStyles, (_props$styleProps3 = props.styleProps) === null || _props$styleProps3 === void 0 ? void 0 : _props$styleProps3.subtitleStyleProps)
  };
  const buttonGroupStyles = {
    root: Object.assign({}, defaultConfirmationPaneButtonGroupStyles, (_props$styleProps4 = props.styleProps) === null || _props$styleProps4 === void 0 ? void 0 : _props$styleProps4.buttonGroupStyleProps)
  };
  const confirmButtonStyles = {
    root: Object.assign({}, defaultConfirmationPaneConfirmButtonStyles, (_props$styleProps5 = props.styleProps) === null || _props$styleProps5 === void 0 ? void 0 : _props$styleProps5.confirmButtonStyleProps),
    rootHovered: Object.assign({}, defaultConfirmationPaneConfirmButtonHoveredStyles, (_props$styleProps6 = props.styleProps) === null || _props$styleProps6 === void 0 ? void 0 : _props$styleProps6.confirmButtonHoveredStyleProps),
    rootFocused: Object.assign({}, defaultConfirmationPaneConfirmButtonFocusedStyles, (_props$styleProps7 = props.styleProps) === null || _props$styleProps7 === void 0 ? void 0 : _props$styleProps7.confirmButtonFocusedStyleProps),
    rootPressed: Object.assign({}, defaultConfirmationPaneConfirmButtonHoveredStyles, (_props$styleProps8 = props.styleProps) === null || _props$styleProps8 === void 0 ? void 0 : _props$styleProps8.confirmButtonHoveredStyleProps)
  };
  const cancelButtonStyles = {
    root: Object.assign({}, defaultConfirmationPaneCancelButtonStyles, (_props$styleProps9 = props.styleProps) === null || _props$styleProps9 === void 0 ? void 0 : _props$styleProps9.cancelButtonStyleProps),
    rootHovered: Object.assign({}, defaultConfirmationPaneCancelButtonHoveredStyles, (_props$styleProps10 = props.styleProps) === null || _props$styleProps10 === void 0 ? void 0 : _props$styleProps10.cancelButtonHoveredStyleProps),
    rootFocused: Object.assign({}, defaultConfirmationPaneCancelButtonFocusedStyles, (_props$styleProps11 = props.styleProps) === null || _props$styleProps11 === void 0 ? void 0 : _props$styleProps11.cancelButtonFocusedStyleProps),
    rootPressed: Object.assign({}, defaultConfirmationPaneCancelButtonHoveredStyles, (_props$styleProps12 = props.styleProps) === null || _props$styleProps12 === void 0 ? void 0 : _props$styleProps12.cancelButtonHoveredStyleProps)
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, !((_props$controlProps6 = props.controlProps) !== null && _props$controlProps6 !== void 0 && _props$controlProps6.hideConfirmationPane) && /*#__PURE__*/React.createElement(Stack, {
    id: elementId,
    onKeyDown: handleEscKeyDown,
    tabIndex: -1,
    dir: ((_props$controlProps7 = props.controlProps) === null || _props$controlProps7 === void 0 ? void 0 : _props$controlProps7.dir) || defaultConfirmationPaneControlProps.dir,
    styles: containerStyles,
    role: "dialog",
    "aria-labelledby": elementId + "-title",
    "aria-describedby": elementId + "-subtitle"
  }, !((_props$controlProps8 = props.controlProps) !== null && _props$controlProps8 !== void 0 && _props$controlProps8.hideTitle) && (decodeComponentString((_props$componentOverr = props.componentOverrides) === null || _props$componentOverr === void 0 ? void 0 : _props$componentOverr.title) || /*#__PURE__*/React.createElement(Label, {
    className: (_props$styleProps13 = props.styleProps) === null || _props$styleProps13 === void 0 ? void 0 : (_props$styleProps13$c = _props$styleProps13.classNames) === null || _props$styleProps13$c === void 0 ? void 0 : _props$styleProps13$c.titleClassName,
    styles: titleStyles,
    tabIndex: -1,
    id: elementId + "-title"
  }, ((_props$controlProps9 = props.controlProps) === null || _props$controlProps9 === void 0 ? void 0 : _props$controlProps9.titleText) || defaultConfirmationPaneControlProps.titleText)), !((_props$controlProps10 = props.controlProps) !== null && _props$controlProps10 !== void 0 && _props$controlProps10.hideSubtitle) && (decodeComponentString((_props$componentOverr2 = props.componentOverrides) === null || _props$componentOverr2 === void 0 ? void 0 : _props$componentOverr2.subtitle) || /*#__PURE__*/React.createElement(Label, {
    className: (_props$styleProps14 = props.styleProps) === null || _props$styleProps14 === void 0 ? void 0 : (_props$styleProps14$c = _props$styleProps14.classNames) === null || _props$styleProps14$c === void 0 ? void 0 : _props$styleProps14$c.subtitleClassName,
    styles: subtitleStyles,
    tabIndex: -1,
    id: elementId + "-subtitle"
  }, ((_props$controlProps11 = props.controlProps) === null || _props$controlProps11 === void 0 ? void 0 : _props$controlProps11.subtitleText) || defaultConfirmationPaneControlProps.subtitleText)), /*#__PURE__*/React.createElement(Stack, {
    horizontal: true,
    className: (_props$styleProps15 = props.styleProps) === null || _props$styleProps15 === void 0 ? void 0 : (_props$styleProps15$c = _props$styleProps15.classNames) === null || _props$styleProps15$c === void 0 ? void 0 : _props$styleProps15$c.buttonGroupClassName,
    styles: buttonGroupStyles,
    id: elementId + "-buttongroup"
  }, !((_props$controlProps12 = props.controlProps) !== null && _props$controlProps12 !== void 0 && _props$controlProps12.hideConfirmButton) && (decodeComponentString((_props$componentOverr3 = props.componentOverrides) === null || _props$componentOverr3 === void 0 ? void 0 : _props$componentOverr3.confirmButton) || /*#__PURE__*/React.createElement(PrimaryButton, {
    className: (_props$styleProps16 = props.styleProps) === null || _props$styleProps16 === void 0 ? void 0 : (_props$styleProps16$c = _props$styleProps16.classNames) === null || _props$styleProps16$c === void 0 ? void 0 : _props$styleProps16$c.confirmButtonClassName,
    styles: confirmButtonStyles,
    text: ((_props$controlProps13 = props.controlProps) === null || _props$controlProps13 === void 0 ? void 0 : _props$controlProps13.confirmButtonText) || defaultConfirmationPaneControlProps.confirmButtonText,
    onClick: handleConfirmClick,
    id: elementId + "-confirmbutton",
    ariaLabel: ((_props$controlProps14 = props.controlProps) === null || _props$controlProps14 === void 0 ? void 0 : _props$controlProps14.confirmButtonAriaLabel) || defaultConfirmationPaneControlProps.confirmButtonAriaLabel
  })), !((_props$controlProps15 = props.controlProps) !== null && _props$controlProps15 !== void 0 && _props$controlProps15.hideCancelButton) && (decodeComponentString((_props$componentOverr4 = props.componentOverrides) === null || _props$componentOverr4 === void 0 ? void 0 : _props$componentOverr4.cancelButton) || /*#__PURE__*/React.createElement(DefaultButton, {
    className: (_props$styleProps17 = props.styleProps) === null || _props$styleProps17 === void 0 ? void 0 : (_props$styleProps17$c = _props$styleProps17.classNames) === null || _props$styleProps17$c === void 0 ? void 0 : _props$styleProps17$c.cancelButtonClassName,
    styles: cancelButtonStyles,
    text: ((_props$controlProps16 = props.controlProps) === null || _props$controlProps16 === void 0 ? void 0 : _props$controlProps16.cancelButtonText) || defaultConfirmationPaneControlProps.cancelButtonText,
    onClick: handleCancelClick,
    id: elementId + "-cancelbutton",
    ariaLabel: ((_props$controlProps17 = props.controlProps) === null || _props$controlProps17 === void 0 ? void 0 : _props$controlProps17.cancelButtonAriaLabel) || defaultConfirmationPaneControlProps.cancelButtonAriaLabel
  })))));
}

export default ConfirmationPane;