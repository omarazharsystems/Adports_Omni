import { Icon, Label, Spinner, Stack } from "@fluentui/react";
import React from "react";
import { decodeComponentString } from "../../common/decodeComponentString";
import { defaultLoadingPaneControlProps } from "./common/defaultProps/defaultLoadingPaneControlProps";
import { defaultLoadingPaneGeneralStyles } from "./common/defaultProps/defaultStyles/defaultLoadingPaneGeneralStyles";
import { defaultLoadingPaneIconImageProps } from "./common/defaultProps/defaultStyles/defaultLoadingPaneIconImageProps";
import { defaultLoadingPaneIconStyles } from "./common/defaultProps/defaultStyles/defaultLoadingPaneIconStyles";
import { defaultLoadingPaneSpinnerStyles } from "./common/defaultProps/defaultStyles/defaultLoadingPaneSpinnerStyles";
import { defaultLoadingPaneSpinnerTextStyles } from "./common/defaultProps/defaultStyles/defaultLoadingPaneSpinnerTextStyles";
import { defaultLoadingPaneSubtitleStyles } from "./common/defaultProps/defaultStyles/defaultLoadingPaneSubtitleStyles";
import { defaultLoadingPaneTitleStyles } from "./common/defaultProps/defaultStyles/defaultLoadingPaneTitleStyles";

function LoadingPane(props) {
  var _props$controlProps, _props$styleProps, _props$styleProps2, _props$styleProps3, _props$styleProps4, _props$styleProps5, _props$styleProps6, _props$styleProps7, _props$controlProps2, _props$controlProps3, _props$controlProps4, _props$controlProps5, _props$componentOverr, _props$styleProps8, _props$styleProps8$cl, _props$controlProps6, _props$componentOverr2, _props$styleProps9, _props$styleProps9$cl, _props$controlProps7, _props$controlProps8, _props$componentOverr3, _props$styleProps10, _props$styleProps10$c, _props$controlProps9, _props$controlProps10, _props$componentOverr4, _props$styleProps11, _props$styleProps11$c, _props$controlProps11, _props$controlProps12, _props$componentOverr5, _props$styleProps12, _props$styleProps12$c, _props$controlProps13;

  const elementId = ((_props$controlProps = props.controlProps) === null || _props$controlProps === void 0 ? void 0 : _props$controlProps.id) ?? defaultLoadingPaneControlProps.id;
  const containerStyles = {
    root: Object.assign({}, defaultLoadingPaneGeneralStyles, (_props$styleProps = props.styleProps) === null || _props$styleProps === void 0 ? void 0 : _props$styleProps.generalStyleProps)
  };
  const iconStyles = {
    root: Object.assign({}, defaultLoadingPaneIconStyles, (_props$styleProps2 = props.styleProps) === null || _props$styleProps2 === void 0 ? void 0 : _props$styleProps2.iconStyleProps)
  };
  const iconImageProps = ((_props$styleProps3 = props.styleProps) === null || _props$styleProps3 === void 0 ? void 0 : _props$styleProps3.iconImageProps) ?? defaultLoadingPaneIconImageProps;
  const titleStyles = {
    root: Object.assign({}, defaultLoadingPaneTitleStyles, (_props$styleProps4 = props.styleProps) === null || _props$styleProps4 === void 0 ? void 0 : _props$styleProps4.titleStyleProps)
  };
  const subtitleStyles = {
    root: Object.assign({}, defaultLoadingPaneSubtitleStyles, (_props$styleProps5 = props.styleProps) === null || _props$styleProps5 === void 0 ? void 0 : _props$styleProps5.subtitleStyleProps)
  };
  const spinnerStyles = {
    root: Object.assign({}, defaultLoadingPaneSpinnerStyles, (_props$styleProps6 = props.styleProps) === null || _props$styleProps6 === void 0 ? void 0 : _props$styleProps6.spinnerStyleProps)
  };
  const spinnerTextStyles = {
    root: Object.assign({}, defaultLoadingPaneSpinnerTextStyles, (_props$styleProps7 = props.styleProps) === null || _props$styleProps7 === void 0 ? void 0 : _props$styleProps7.spinnerTextStyleProps)
  };
  const showInSmallWindow = props.windowHeight ? props.windowHeight > 375 : true;
  return /*#__PURE__*/React.createElement(React.Fragment, null, !((_props$controlProps2 = props.controlProps) !== null && _props$controlProps2 !== void 0 && _props$controlProps2.hideLoadingPane) && /*#__PURE__*/React.createElement(Stack, {
    id: elementId,
    tabIndex: -1,
    styles: containerStyles,
    role: (_props$controlProps3 = props.controlProps) === null || _props$controlProps3 === void 0 ? void 0 : _props$controlProps3.role,
    dir: ((_props$controlProps4 = props.controlProps) === null || _props$controlProps4 === void 0 ? void 0 : _props$controlProps4.dir) ?? defaultLoadingPaneControlProps.dir
  }, !((_props$controlProps5 = props.controlProps) !== null && _props$controlProps5 !== void 0 && _props$controlProps5.hideIcon) && showInSmallWindow && (decodeComponentString((_props$componentOverr = props.componentOverrides) === null || _props$componentOverr === void 0 ? void 0 : _props$componentOverr.icon) || /*#__PURE__*/React.createElement(Icon, {
    className: (_props$styleProps8 = props.styleProps) === null || _props$styleProps8 === void 0 ? void 0 : (_props$styleProps8$cl = _props$styleProps8.classNames) === null || _props$styleProps8$cl === void 0 ? void 0 : _props$styleProps8$cl.iconClassName,
    styles: iconStyles,
    imageProps: iconImageProps,
    tabIndex: -1,
    id: elementId + "-icon"
  })), !((_props$controlProps6 = props.controlProps) !== null && _props$controlProps6 !== void 0 && _props$controlProps6.hideTitle) && (decodeComponentString((_props$componentOverr2 = props.componentOverrides) === null || _props$componentOverr2 === void 0 ? void 0 : _props$componentOverr2.title) || /*#__PURE__*/React.createElement(Label, {
    className: (_props$styleProps9 = props.styleProps) === null || _props$styleProps9 === void 0 ? void 0 : (_props$styleProps9$cl = _props$styleProps9.classNames) === null || _props$styleProps9$cl === void 0 ? void 0 : _props$styleProps9$cl.titleClassName,
    styles: titleStyles,
    tabIndex: -1,
    id: elementId + "-title"
  }, ((_props$controlProps7 = props.controlProps) === null || _props$controlProps7 === void 0 ? void 0 : _props$controlProps7.titleText) ?? defaultLoadingPaneControlProps.titleText)), !((_props$controlProps8 = props.controlProps) !== null && _props$controlProps8 !== void 0 && _props$controlProps8.hideSubtitle) && (decodeComponentString((_props$componentOverr3 = props.componentOverrides) === null || _props$componentOverr3 === void 0 ? void 0 : _props$componentOverr3.subtitle) || /*#__PURE__*/React.createElement(Label, {
    className: (_props$styleProps10 = props.styleProps) === null || _props$styleProps10 === void 0 ? void 0 : (_props$styleProps10$c = _props$styleProps10.classNames) === null || _props$styleProps10$c === void 0 ? void 0 : _props$styleProps10$c.subtitleClassName,
    styles: subtitleStyles,
    tabIndex: -1,
    id: elementId + "-subtitle"
  }, ((_props$controlProps9 = props.controlProps) === null || _props$controlProps9 === void 0 ? void 0 : _props$controlProps9.subtitleText) ?? defaultLoadingPaneControlProps.subtitleText)), !((_props$controlProps10 = props.controlProps) !== null && _props$controlProps10 !== void 0 && _props$controlProps10.hideSpinner) && (decodeComponentString((_props$componentOverr4 = props.componentOverrides) === null || _props$componentOverr4 === void 0 ? void 0 : _props$componentOverr4.spinner) || /*#__PURE__*/React.createElement(Spinner, {
    className: (_props$styleProps11 = props.styleProps) === null || _props$styleProps11 === void 0 ? void 0 : (_props$styleProps11$c = _props$styleProps11.classNames) === null || _props$styleProps11$c === void 0 ? void 0 : _props$styleProps11$c.spinnerClassName,
    styles: spinnerStyles,
    size: (_props$controlProps11 = props.controlProps) === null || _props$controlProps11 === void 0 ? void 0 : _props$controlProps11.spinnerSize,
    tabIndex: -1,
    id: elementId + "-spinner"
  })), !((_props$controlProps12 = props.controlProps) !== null && _props$controlProps12 !== void 0 && _props$controlProps12.hideSpinnerText) && (decodeComponentString((_props$componentOverr5 = props.componentOverrides) === null || _props$componentOverr5 === void 0 ? void 0 : _props$componentOverr5.spinnerText) || /*#__PURE__*/React.createElement(Label, {
    className: (_props$styleProps12 = props.styleProps) === null || _props$styleProps12 === void 0 ? void 0 : (_props$styleProps12$c = _props$styleProps12.classNames) === null || _props$styleProps12$c === void 0 ? void 0 : _props$styleProps12$c.spinnerTextClassName,
    styles: spinnerTextStyles,
    tabIndex: -1,
    id: elementId + "-spinner-text"
  }, ((_props$controlProps13 = props.controlProps) === null || _props$controlProps13 === void 0 ? void 0 : _props$controlProps13.spinnerText) ?? defaultLoadingPaneControlProps.spinnerText))));
}

export default LoadingPane;