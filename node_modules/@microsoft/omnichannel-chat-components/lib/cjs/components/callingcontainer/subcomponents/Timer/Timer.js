"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("@fluentui/react");

var _react2 = _interopRequireWildcard(require("react"));

var _utils = require("../../../../common/utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Timer(props) {
  const [time, setTime] = (0, _react2.useState)(0);
  const running = true;
  const timerStyles = {
    root: props.timerStyles
  };
  (0, _react2.useEffect)(() => {
    const interval = setInterval(() => {
      setTime(prevTime => prevTime + 1000);
    }, 1000);
    return () => clearInterval(interval);
  }, [running]);
  return /*#__PURE__*/_react2.default.createElement(_react.Label, {
    styles: timerStyles
  }, props.showHours && (0, _utils.getHours)(time) + ":", (0, _utils.getMinutes)(time), ":", (0, _utils.getSeconds)(time));
}

var _default = Timer;
exports.default = _default;