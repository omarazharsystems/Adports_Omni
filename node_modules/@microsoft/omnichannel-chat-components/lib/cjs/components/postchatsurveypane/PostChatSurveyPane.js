"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("@fluentui/react");

var _react2 = _interopRequireDefault(require("react"));

var _defaultPostChatSurveyPaneControlProps = require("./common/defaultProps/defaultPostChatSurveyPaneControlProps");

var _defaultPostChatSurveyPaneGeneralStyles = require("./common/defaultProps/defaultStyles/defaultPostChatSurveyPaneGeneralStyles");

var _utils = require("../../common/utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PostChatSurveyPane(props) {
  var _props$controlProps, _props$controlProps2, _props$styleProps, _props$controlProps3, _props$controlProps4;

  const elementId = ((_props$controlProps = props.controlProps) === null || _props$controlProps === void 0 ? void 0 : _props$controlProps.id) ?? _defaultPostChatSurveyPaneControlProps.defaultPostChatSurveyPaneControlProps.id;
  const inputUrl = ((_props$controlProps2 = props.controlProps) === null || _props$controlProps2 === void 0 ? void 0 : _props$controlProps2.surveyURL) ?? _defaultPostChatSurveyPaneControlProps.defaultPostChatSurveyPaneControlProps.surveyURL;
  const containerStyles = {
    root: Object.assign({}, _defaultPostChatSurveyPaneGeneralStyles.defaultPostChatSurveyPaneGeneralStyles, (_props$styleProps = props.styleProps) === null || _props$styleProps === void 0 ? void 0 : _props$styleProps.generalStyleProps)
  };
  const iframeStyles = {
    height: "100vh",
    width: "100%",
    display: "block",
    maxHeight: "100%"
  };
  return /*#__PURE__*/_react2.default.createElement(_react2.default.Fragment, null, /*#__PURE__*/_react2.default.createElement(_react.Stack, {
    id: elementId,
    tabIndex: -1,
    styles: containerStyles,
    role: (_props$controlProps3 = props.controlProps) === null || _props$controlProps3 === void 0 ? void 0 : _props$controlProps3.role
  }, /*#__PURE__*/_react2.default.createElement("iframe", {
    id: elementId + "-Iframe" // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    ,
    src: (0, _utils.getValidatedURL)(inputUrl),
    title: ((_props$controlProps4 = props.controlProps) === null || _props$controlProps4 === void 0 ? void 0 : _props$controlProps4.title) ?? _defaultPostChatSurveyPaneControlProps.defaultPostChatSurveyPaneControlProps.title,
    style: iframeStyles,
    frameBorder: "0"
  })));
}

var _default = PostChatSurveyPane;
exports.default = _default;