"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultHeaderComponentOverrides = void 0;

var React = _interopRequireWildcard(require("react"));

var _react2 = require("@fluentui/react");

var _Icon = require("@fluentui/react/lib/Icon");

var _styleUtilities = require("@fluentui/style-utilities");

var _Constants = require("../../../../common/Constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const iconClass = (0, _styleUtilities.mergeStyles)({
  fontSize: 40,
  height: 40,
  width: 40,
  margin: "0 5px",
  color: "white"
});
const labelClass = {
  root: {
    color: "Orange"
  }
};
const defaultHeaderComponentOverrides = {
  headerIcon: /*#__PURE__*/React.createElement(_Icon.FontIcon, {
    "aria-label": "ChatBot",
    iconName: "ChatBot",
    className: iconClass,
    id: "oc-lcw-header-icon"
  }),
  headerTitle: /*#__PURE__*/React.createElement(_react2.Label, {
    styles: labelClass,
    id: _Constants.Ids.HeaderTitleId
  }, "Hi, there!")
};
exports.defaultHeaderComponentOverrides = defaultHeaderComponentOverrides;