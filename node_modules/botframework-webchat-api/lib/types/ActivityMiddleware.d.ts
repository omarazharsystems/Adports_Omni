import type { ReactNode } from 'react';
import type { RenderAttachment } from './AttachmentMiddleware';
import type { WebChatActivity } from 'botframework-webchat-core';
type ActivityProps = {
    hideTimestamp: boolean;
    renderActivityStatus: (options: {
        hideTimestamp: boolean;
    }) => ReactNode;
    renderAvatar: false | (() => Exclude<ReactNode, boolean | null | undefined>);
    showCallout: boolean;
};
type ActivityComponent = (props: ActivityProps) => Exclude<ReactNode, boolean | null | undefined>;
type ActivityComponentFactoryOptions = {
    activity: WebChatActivity;
    nextVisibleActivity: WebChatActivity;
};
type ActivityComponentFactory = (options: ActivityComponentFactoryOptions) => ActivityComponent | false;
type LegacyRenderActivity = (renderAttachment: RenderAttachment, { hideTimestamp, renderActivityStatus, renderAvatar, showCallout }: ActivityProps) => Exclude<ReactNode, boolean>;
type LegacyActivityRenderer = (options: ActivityComponentFactoryOptions) => LegacyRenderActivity | false;
type ActivityEnhancer = (next: LegacyActivityRenderer) => LegacyActivityRenderer;
type ActivityMiddleware = () => ActivityEnhancer;
export default ActivityMiddleware;
export type { ActivityComponentFactory, LegacyActivityRenderer };
//# sourceMappingURL=ActivityMiddleware.d.ts.map