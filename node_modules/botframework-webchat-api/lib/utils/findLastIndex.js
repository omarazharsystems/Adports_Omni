"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findLastIndex;

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function findLastIndex(array, predicate) {
  var index = _toConsumableArray(array).reverse().findIndex(predicate);

  if (~index) {
    var _ref = array || [],
        length = _ref.length;

    return length - index - 1;
  }

  return index;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmaW5kTGFzdEluZGV4IiwiYXJyYXkiLCJwcmVkaWNhdGUiLCJpbmRleCIsInJldmVyc2UiLCJmaW5kSW5kZXgiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9maW5kTGFzdEluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZpbmRMYXN0SW5kZXg8VD4oYXJyYXk6IHJlYWRvbmx5IFRbXSwgcHJlZGljYXRlOiAodmFsdWU6IFQsIGluZGV4OiBudW1iZXIpID0+IGJvb2xlYW4pOiBudW1iZXIge1xuICBjb25zdCBpbmRleCA9IFsuLi5hcnJheV0ucmV2ZXJzZSgpLmZpbmRJbmRleChwcmVkaWNhdGUpO1xuXG4gIGlmICh+aW5kZXgpIHtcbiAgICBjb25zdCB7IGxlbmd0aCB9ID0gYXJyYXkgfHwgW107XG5cbiAgICByZXR1cm4gbGVuZ3RoIC0gaW5kZXggLSAxO1xuICB9XG5cbiAgcmV0dXJuIGluZGV4O1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWUsU0FBU0EsYUFBVCxDQUEwQkMsS0FBMUIsRUFBK0NDLFNBQS9DLEVBQXdHO0VBQ3JILElBQU1DLEtBQUssR0FBRyxtQkFBSUYsS0FBSixFQUFXRyxPQUFYLEdBQXFCQyxTQUFyQixDQUErQkgsU0FBL0IsQ0FBZDs7RUFFQSxJQUFJLENBQUNDLEtBQUwsRUFBWTtJQUNWLFdBQW1CRixLQUFLLElBQUksRUFBNUI7SUFBQSxJQUFRSyxNQUFSLFFBQVFBLE1BQVI7O0lBRUEsT0FBT0EsTUFBTSxHQUFHSCxLQUFULEdBQWlCLENBQXhCO0VBQ0Q7O0VBRUQsT0FBT0EsS0FBUDtBQUNEIn0=