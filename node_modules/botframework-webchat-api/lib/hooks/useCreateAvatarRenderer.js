"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useCreateAvatarRenderer;

var _react = require("react");

var _useStyleOptions3 = _interopRequireDefault(require("./useStyleOptions"));

var _useWebChatAPIContext2 = _interopRequireDefault(require("./internal/useWebChatAPIContext"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function useCreateAvatarRenderer() {
  var _useStyleOptions = (0, _useStyleOptions3.default)(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      styleOptions = _useStyleOptions2[0];

  var _useWebChatAPIContext = (0, _useWebChatAPIContext2.default)(),
      avatarRenderer = _useWebChatAPIContext.avatarRenderer;

  return (0, _react.useMemo)(function () {
    return function (_ref) {
      var activity = _ref.activity;
      var _activity$from = activity.from;
      _activity$from = _activity$from === void 0 ? {} : _activity$from;
      var role = _activity$from.role;
      var result = avatarRenderer({
        activity: activity,
        fromUser: role === 'user',
        styleOptions: styleOptions
      });

      if (result !== false && typeof result !== 'function') {
        console.warn('botframework-webchat: avatarMiddleware should return a function to render the avatar, or return false if avatar should be hidden. Please refer to HOOKS.md for details.');
        return function () {
          return result;
        };
      }

      return result;
    };
  }, [avatarRenderer, styleOptions]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VDcmVhdGVBdmF0YXJSZW5kZXJlciIsInVzZVN0eWxlT3B0aW9ucyIsInN0eWxlT3B0aW9ucyIsInVzZVdlYkNoYXRBUElDb250ZXh0IiwiYXZhdGFyUmVuZGVyZXIiLCJ1c2VNZW1vIiwiYWN0aXZpdHkiLCJmcm9tIiwicm9sZSIsInJlc3VsdCIsImZyb21Vc2VyIiwiY29uc29sZSIsIndhcm4iXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VDcmVhdGVBdmF0YXJSZW5kZXJlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZVN0eWxlT3B0aW9ucyBmcm9tICcuL3VzZVN0eWxlT3B0aW9ucyc7XG5pbXBvcnQgdXNlV2ViQ2hhdEFQSUNvbnRleHQgZnJvbSAnLi9pbnRlcm5hbC91c2VXZWJDaGF0QVBJQ29udGV4dCc7XG5cbmltcG9ydCB0eXBlIHsgQXZhdGFyQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gJy4uL3R5cGVzL0F2YXRhck1pZGRsZXdhcmUnO1xuaW1wb3J0IHR5cGUgeyBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IFdlYkNoYXRBY3Rpdml0eSB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvcmUnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VDcmVhdGVBdmF0YXJSZW5kZXJlcigpOiAoe1xuICBhY3Rpdml0eVxufToge1xuICBhY3Rpdml0eTogV2ViQ2hhdEFjdGl2aXR5O1xufSkgPT4gZmFsc2UgfCAoKCkgPT4gRXhjbHVkZTxSZWFjdE5vZGUsIGJvb2xlYW4gfCBudWxsIHwgdW5kZWZpbmVkPikge1xuICBjb25zdCBbc3R5bGVPcHRpb25zXSA9IHVzZVN0eWxlT3B0aW9ucygpO1xuICBjb25zdCB7IGF2YXRhclJlbmRlcmVyIH06IHsgYXZhdGFyUmVuZGVyZXI6IEF2YXRhckNvbXBvbmVudEZhY3RvcnkgfSA9IHVzZVdlYkNoYXRBUElDb250ZXh0KCk7XG5cbiAgcmV0dXJuIHVzZU1lbW8oXG4gICAgKCkgPT5cbiAgICAgICh7IGFjdGl2aXR5IH0pID0+IHtcbiAgICAgICAgY29uc3QgeyBmcm9tOiB7IHJvbGUgfSA9IHt9IH06IHsgZnJvbT86IHsgcm9sZT86IHN0cmluZyB9IH0gPSBhY3Rpdml0eTtcblxuICAgICAgICBjb25zdCByZXN1bHQgPSBhdmF0YXJSZW5kZXJlcih7XG4gICAgICAgICAgYWN0aXZpdHksXG4gICAgICAgICAgZnJvbVVzZXI6IHJvbGUgPT09ICd1c2VyJyxcbiAgICAgICAgICBzdHlsZU9wdGlvbnNcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKHJlc3VsdCAhPT0gZmFsc2UgJiYgdHlwZW9mIHJlc3VsdCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICAgICdib3RmcmFtZXdvcmstd2ViY2hhdDogYXZhdGFyTWlkZGxld2FyZSBzaG91bGQgcmV0dXJuIGEgZnVuY3Rpb24gdG8gcmVuZGVyIHRoZSBhdmF0YXIsIG9yIHJldHVybiBmYWxzZSBpZiBhdmF0YXIgc2hvdWxkIGJlIGhpZGRlbi4gUGxlYXNlIHJlZmVyIHRvIEhPT0tTLm1kIGZvciBkZXRhaWxzLidcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgcmV0dXJuICgpID0+IHJlc3VsdDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9LFxuICAgIFthdmF0YXJSZW5kZXJlciwgc3R5bGVPcHRpb25zXVxuICApO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNZSxTQUFTQSx1QkFBVCxHQUlzRDtFQUNuRSx1QkFBdUIsSUFBQUMseUJBQUEsR0FBdkI7RUFBQTtFQUFBLElBQU9DLFlBQVA7O0VBQ0EsNEJBQXVFLElBQUFDLDhCQUFBLEdBQXZFO0VBQUEsSUFBUUMsY0FBUix5QkFBUUEsY0FBUjs7RUFFQSxPQUFPLElBQUFDLGNBQUEsRUFDTDtJQUFBLE9BQ0UsZ0JBQWtCO01BQUEsSUFBZkMsUUFBZSxRQUFmQSxRQUFlO01BQ2hCLHFCQUE4REEsUUFBOUQsQ0FBUUMsSUFBUjtNQUFBLDZDQUF5QixFQUF6QjtNQUFBLElBQWdCQyxJQUFoQixrQkFBZ0JBLElBQWhCO01BRUEsSUFBTUMsTUFBTSxHQUFHTCxjQUFjLENBQUM7UUFDNUJFLFFBQVEsRUFBUkEsUUFENEI7UUFFNUJJLFFBQVEsRUFBRUYsSUFBSSxLQUFLLE1BRlM7UUFHNUJOLFlBQVksRUFBWkE7TUFINEIsQ0FBRCxDQUE3Qjs7TUFNQSxJQUFJTyxNQUFNLEtBQUssS0FBWCxJQUFvQixPQUFPQSxNQUFQLEtBQWtCLFVBQTFDLEVBQXNEO1FBQ3BERSxPQUFPLENBQUNDLElBQVIsQ0FDRSx5S0FERjtRQUlBLE9BQU87VUFBQSxPQUFNSCxNQUFOO1FBQUEsQ0FBUDtNQUNEOztNQUVELE9BQU9BLE1BQVA7SUFDRCxDQW5CSDtFQUFBLENBREssRUFxQkwsQ0FBQ0wsY0FBRCxFQUFpQkYsWUFBakIsQ0FyQkssQ0FBUDtBQXVCRCJ9