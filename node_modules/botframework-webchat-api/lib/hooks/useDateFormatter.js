"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useDateFormatter;

var _react = require("react");

var _useLocalizedGlobalize = _interopRequireDefault(require("./internal/useLocalizedGlobalize"));

var _usePonyfill3 = _interopRequireDefault(require("./usePonyfill"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// False positive: we are using `Date` as a type.
// eslint-disable-next-line no-restricted-globals
function useDateFormatter() {
  var _usePonyfill = (0, _usePonyfill3.default)(),
      _usePonyfill2 = _slicedToArray(_usePonyfill, 1),
      Date = _usePonyfill2[0].Date;

  var _useLocalizedGlobaliz = (0, _useLocalizedGlobalize.default)(),
      _useLocalizedGlobaliz2 = _slicedToArray(_useLocalizedGlobaliz, 1),
      globalize = _useLocalizedGlobaliz2[0];

  var formatDate = (0, _react.useMemo)(function () {
    return function (date) {
      return globalize.dateFormatter({
        skeleton: 'MMMMdhm'
      })(new Date(date));
    };
  }, [Date, globalize]);
  return formatDate;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VEYXRlRm9ybWF0dGVyIiwidXNlUG9ueWZpbGwiLCJEYXRlIiwidXNlTG9jYWxpemVkR2xvYmFsaXplIiwiZ2xvYmFsaXplIiwiZm9ybWF0RGF0ZSIsInVzZU1lbW8iLCJkYXRlIiwiZGF0ZUZvcm1hdHRlciIsInNrZWxldG9uIl0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaG9va3MvdXNlRGF0ZUZvcm1hdHRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgdXNlTG9jYWxpemVkR2xvYmFsaXplIGZyb20gJy4vaW50ZXJuYWwvdXNlTG9jYWxpemVkR2xvYmFsaXplJztcbmltcG9ydCB1c2VQb255ZmlsbCBmcm9tICcuL3VzZVBvbnlmaWxsJztcblxuLy8gRmFsc2UgcG9zaXRpdmU6IHdlIGFyZSB1c2luZyBgRGF0ZWAgYXMgYSB0eXBlLlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlRGF0ZUZvcm1hdHRlcigpOiAoZGF0ZTogRGF0ZSB8IG51bWJlciB8IHN0cmluZykgPT4gc3RyaW5nIHtcbiAgY29uc3QgW3sgRGF0ZSB9XSA9IHVzZVBvbnlmaWxsKCk7XG4gIGNvbnN0IFtnbG9iYWxpemVdID0gdXNlTG9jYWxpemVkR2xvYmFsaXplKCk7XG5cbiAgY29uc3QgZm9ybWF0RGF0ZSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gZGF0ZSA9PiBnbG9iYWxpemUuZGF0ZUZvcm1hdHRlcih7IHNrZWxldG9uOiAnTU1NTWRobScgfSkobmV3IERhdGUoZGF0ZSkpLFxuICAgIFtEYXRlLCBnbG9iYWxpemVdXG4gICk7XG5cbiAgcmV0dXJuIGZvcm1hdERhdGU7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBO0FBQ0E7QUFDZSxTQUFTQSxnQkFBVCxHQUFzRTtFQUNuRixtQkFBbUIsSUFBQUMscUJBQUEsR0FBbkI7RUFBQTtFQUFBLElBQVNDLElBQVQsb0JBQVNBLElBQVQ7O0VBQ0EsNEJBQW9CLElBQUFDLDhCQUFBLEdBQXBCO0VBQUE7RUFBQSxJQUFPQyxTQUFQOztFQUVBLElBQU1DLFVBQVUsR0FBRyxJQUFBQyxjQUFBLEVBQ2pCO0lBQUEsT0FBTSxVQUFBQyxJQUFJO01BQUEsT0FBSUgsU0FBUyxDQUFDSSxhQUFWLENBQXdCO1FBQUVDLFFBQVEsRUFBRTtNQUFaLENBQXhCLEVBQWlELElBQUlQLElBQUosQ0FBU0ssSUFBVCxDQUFqRCxDQUFKO0lBQUEsQ0FBVjtFQUFBLENBRGlCLEVBRWpCLENBQUNMLElBQUQsRUFBT0UsU0FBUCxDQUZpQixDQUFuQjtFQUtBLE9BQU9DLFVBQVA7QUFDRCJ9