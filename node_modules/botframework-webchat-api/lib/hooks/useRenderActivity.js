"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useRenderActivity;

var _react = require("react");

var _useCreateActivityRendererInternal = _interopRequireDefault(require("./internal/useCreateActivityRendererInternal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// In the old days, the useRenderActivity() will be called like this:
//
// const renderActivity = useRenderActivity();
// const element = renderActivity({ activity, nextVisibleActivity });
// In the new days, the useCreateActivityRenderer() is a 3-pass function:
//
// const createActivityRenderer = useCreateActivityRenderer();
// const renderActivity = createActivityRenderer({ activity, nextVisibleActivity });
// const element = renderActivity && renderActivity(undefined, { renderActivityStatus, renderAvatar, showCallout });
// Despite deprecation, useRenderActivity() can be retrofitted using useCreateActivityRenderer().
var showDeprecationNotes = true;
/** @deprecated Please use `useCreateActivityRenderer()` instead. */

function useRenderActivity(renderAttachment) {
  if (showDeprecationNotes) {
    console.warn('botframework-webchat: "useRenderActivity" is deprecated and will be removed on or after 2022-07-22. Please use "useCreateActivityRenderer()" instead.');
    showDeprecationNotes = false;
  }

  if (typeof renderAttachment !== 'function') {
    throw new Error('botframework-webchat: First argument passed to "useRenderActivity" must be a function.');
  }

  var createActivityRenderer = (0, _useCreateActivityRendererInternal.default)(renderAttachment);
  return (0, _react.useMemo)(function () {
    return function (renderActivityArg) {
      var renderOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var _ref = renderActivityArg || {},
          activity = _ref.activity;

      if (!activity) {
        throw new Error('botframework-webchat: First argument passed to the callback of useRenderActivity() must contain an "activity" property.');
      }

      var renderActivity = createActivityRenderer(renderActivityArg);
      return !!renderActivity && renderActivity(renderOptions);
    };
  }, [createActivityRenderer]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzaG93RGVwcmVjYXRpb25Ob3RlcyIsInVzZVJlbmRlckFjdGl2aXR5IiwicmVuZGVyQXR0YWNobWVudCIsImNvbnNvbGUiLCJ3YXJuIiwiRXJyb3IiLCJjcmVhdGVBY3Rpdml0eVJlbmRlcmVyIiwidXNlQ3JlYXRlQWN0aXZpdHlSZW5kZXJlckludGVybmFsIiwidXNlTWVtbyIsInJlbmRlckFjdGl2aXR5QXJnIiwicmVuZGVyT3B0aW9ucyIsImFjdGl2aXR5IiwicmVuZGVyQWN0aXZpdHkiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VSZW5kZXJBY3Rpdml0eS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgdXNlQ3JlYXRlQWN0aXZpdHlSZW5kZXJlckludGVybmFsIGZyb20gJy4vaW50ZXJuYWwvdXNlQ3JlYXRlQWN0aXZpdHlSZW5kZXJlckludGVybmFsJztcblxuLy8gSW4gdGhlIG9sZCBkYXlzLCB0aGUgdXNlUmVuZGVyQWN0aXZpdHkoKSB3aWxsIGJlIGNhbGxlZCBsaWtlIHRoaXM6XG4vL1xuLy8gY29uc3QgcmVuZGVyQWN0aXZpdHkgPSB1c2VSZW5kZXJBY3Rpdml0eSgpO1xuLy8gY29uc3QgZWxlbWVudCA9IHJlbmRlckFjdGl2aXR5KHsgYWN0aXZpdHksIG5leHRWaXNpYmxlQWN0aXZpdHkgfSk7XG5cbi8vIEluIHRoZSBuZXcgZGF5cywgdGhlIHVzZUNyZWF0ZUFjdGl2aXR5UmVuZGVyZXIoKSBpcyBhIDMtcGFzcyBmdW5jdGlvbjpcbi8vXG4vLyBjb25zdCBjcmVhdGVBY3Rpdml0eVJlbmRlcmVyID0gdXNlQ3JlYXRlQWN0aXZpdHlSZW5kZXJlcigpO1xuLy8gY29uc3QgcmVuZGVyQWN0aXZpdHkgPSBjcmVhdGVBY3Rpdml0eVJlbmRlcmVyKHsgYWN0aXZpdHksIG5leHRWaXNpYmxlQWN0aXZpdHkgfSk7XG4vLyBjb25zdCBlbGVtZW50ID0gcmVuZGVyQWN0aXZpdHkgJiYgcmVuZGVyQWN0aXZpdHkodW5kZWZpbmVkLCB7IHJlbmRlckFjdGl2aXR5U3RhdHVzLCByZW5kZXJBdmF0YXIsIHNob3dDYWxsb3V0IH0pO1xuXG4vLyBEZXNwaXRlIGRlcHJlY2F0aW9uLCB1c2VSZW5kZXJBY3Rpdml0eSgpIGNhbiBiZSByZXRyb2ZpdHRlZCB1c2luZyB1c2VDcmVhdGVBY3Rpdml0eVJlbmRlcmVyKCkuXG5cbmxldCBzaG93RGVwcmVjYXRpb25Ob3RlcyA9IHRydWU7XG5cbi8qKiBAZGVwcmVjYXRlZCBQbGVhc2UgdXNlIGB1c2VDcmVhdGVBY3Rpdml0eVJlbmRlcmVyKClgIGluc3RlYWQuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VSZW5kZXJBY3Rpdml0eShyZW5kZXJBdHRhY2htZW50KSB7XG4gIGlmIChzaG93RGVwcmVjYXRpb25Ob3Rlcykge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdib3RmcmFtZXdvcmstd2ViY2hhdDogXCJ1c2VSZW5kZXJBY3Rpdml0eVwiIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBvbiBvciBhZnRlciAyMDIyLTA3LTIyLiBQbGVhc2UgdXNlIFwidXNlQ3JlYXRlQWN0aXZpdHlSZW5kZXJlcigpXCIgaW5zdGVhZC4nXG4gICAgKTtcblxuICAgIHNob3dEZXByZWNhdGlvbk5vdGVzID0gZmFsc2U7XG4gIH1cblxuICBpZiAodHlwZW9mIHJlbmRlckF0dGFjaG1lbnQgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2JvdGZyYW1ld29yay13ZWJjaGF0OiBGaXJzdCBhcmd1bWVudCBwYXNzZWQgdG8gXCJ1c2VSZW5kZXJBY3Rpdml0eVwiIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIGNvbnN0IGNyZWF0ZUFjdGl2aXR5UmVuZGVyZXIgPSB1c2VDcmVhdGVBY3Rpdml0eVJlbmRlcmVySW50ZXJuYWwocmVuZGVyQXR0YWNobWVudCk7XG5cbiAgcmV0dXJuIHVzZU1lbW8oXG4gICAgKCkgPT5cbiAgICAgIChyZW5kZXJBY3Rpdml0eUFyZywgcmVuZGVyT3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgYWN0aXZpdHkgfSA9IHJlbmRlckFjdGl2aXR5QXJnIHx8IHt9O1xuXG4gICAgICAgIGlmICghYWN0aXZpdHkpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAnYm90ZnJhbWV3b3JrLXdlYmNoYXQ6IEZpcnN0IGFyZ3VtZW50IHBhc3NlZCB0byB0aGUgY2FsbGJhY2sgb2YgdXNlUmVuZGVyQWN0aXZpdHkoKSBtdXN0IGNvbnRhaW4gYW4gXCJhY3Rpdml0eVwiIHByb3BlcnR5LidcbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcmVuZGVyQWN0aXZpdHkgPSBjcmVhdGVBY3Rpdml0eVJlbmRlcmVyKHJlbmRlckFjdGl2aXR5QXJnKTtcblxuICAgICAgICByZXR1cm4gISFyZW5kZXJBY3Rpdml0eSAmJiByZW5kZXJBY3Rpdml0eShyZW5kZXJPcHRpb25zKTtcbiAgICAgIH0sXG4gICAgW2NyZWF0ZUFjdGl2aXR5UmVuZGVyZXJdXG4gICk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUEsSUFBSUEsb0JBQW9CLEdBQUcsSUFBM0I7QUFFQTs7QUFDZSxTQUFTQyxpQkFBVCxDQUEyQkMsZ0JBQTNCLEVBQTZDO0VBQzFELElBQUlGLG9CQUFKLEVBQTBCO0lBQ3hCRyxPQUFPLENBQUNDLElBQVIsQ0FDRSx1SkFERjtJQUlBSixvQkFBb0IsR0FBRyxLQUF2QjtFQUNEOztFQUVELElBQUksT0FBT0UsZ0JBQVAsS0FBNEIsVUFBaEMsRUFBNEM7SUFDMUMsTUFBTSxJQUFJRyxLQUFKLENBQVUsd0ZBQVYsQ0FBTjtFQUNEOztFQUVELElBQU1DLHNCQUFzQixHQUFHLElBQUFDLDBDQUFBLEVBQWtDTCxnQkFBbEMsQ0FBL0I7RUFFQSxPQUFPLElBQUFNLGNBQUEsRUFDTDtJQUFBLE9BQ0UsVUFBQ0MsaUJBQUQsRUFBMkM7TUFBQSxJQUF2QkMsYUFBdUIsdUVBQVAsRUFBTzs7TUFDekMsV0FBcUJELGlCQUFpQixJQUFJLEVBQTFDO01BQUEsSUFBUUUsUUFBUixRQUFRQSxRQUFSOztNQUVBLElBQUksQ0FBQ0EsUUFBTCxFQUFlO1FBQ2IsTUFBTSxJQUFJTixLQUFKLENBQ0oseUhBREksQ0FBTjtNQUdEOztNQUVELElBQU1PLGNBQWMsR0FBR04sc0JBQXNCLENBQUNHLGlCQUFELENBQTdDO01BRUEsT0FBTyxDQUFDLENBQUNHLGNBQUYsSUFBb0JBLGNBQWMsQ0FBQ0YsYUFBRCxDQUF6QztJQUNELENBYkg7RUFBQSxDQURLLEVBZUwsQ0FBQ0osc0JBQUQsQ0FmSyxDQUFQO0FBaUJEIn0=