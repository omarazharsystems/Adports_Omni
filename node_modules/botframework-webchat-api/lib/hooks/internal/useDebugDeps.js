"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useDebugDeps;

var _botframeworkWebchatCore = require("botframework-webchat-core");

var _react = require("react");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function useDebugDeps(depsMap, name) {
  var lastDepsMapRef = (0, _react.useRef)({});
  var lastDepsMap = lastDepsMapRef.current;
  var keys = new Set([].concat(_toConsumableArray(Object.keys(depsMap)), _toConsumableArray(Object.keys(lastDepsMap))));
  var keysChanged = Array.from(keys).filter( // Mitigation through denylisting.
  // eslint-disable-next-line security/detect-object-injection
  function (key) {
    return !(0, _botframeworkWebchatCore.isForbiddenPropertyName)(key) && !Object.is(depsMap[key], lastDepsMap[key]);
  });

  if (keysChanged.length) {
    console.groupCollapsed("Changes found in ".concat(name));
    keysChanged.forEach(function (key) {
      // Mitigation through denylisting.
      // eslint-disable-next-line security/detect-object-injection
      (0, _botframeworkWebchatCore.isForbiddenPropertyName)(key) || console.log(key, {
        from: lastDepsMap[key],
        to: depsMap[key]
      });
    });
    console.groupEnd();
  }

  lastDepsMapRef.current = depsMap;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VEZWJ1Z0RlcHMiLCJkZXBzTWFwIiwibmFtZSIsImxhc3REZXBzTWFwUmVmIiwidXNlUmVmIiwibGFzdERlcHNNYXAiLCJjdXJyZW50Iiwia2V5cyIsIlNldCIsIk9iamVjdCIsImtleXNDaGFuZ2VkIiwiQXJyYXkiLCJmcm9tIiwiZmlsdGVyIiwia2V5IiwiaXNGb3JiaWRkZW5Qcm9wZXJ0eU5hbWUiLCJpcyIsImxlbmd0aCIsImNvbnNvbGUiLCJncm91cENvbGxhcHNlZCIsImZvckVhY2giLCJsb2ciLCJ0byIsImdyb3VwRW5kIl0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvaG9va3MvaW50ZXJuYWwvdXNlRGVidWdEZXBzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1jb25zb2xlOiBcIm9mZlwiICovXG5cbmltcG9ydCB7IGlzRm9yYmlkZGVuUHJvcGVydHlOYW1lIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtY29yZSc7XG5pbXBvcnQgeyB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZURlYnVnRGVwcyhkZXBzTWFwLCBuYW1lKSB7XG4gIGNvbnN0IGxhc3REZXBzTWFwUmVmID0gdXNlUmVmKHt9KTtcblxuICBjb25zdCB7IGN1cnJlbnQ6IGxhc3REZXBzTWFwIH0gPSBsYXN0RGVwc01hcFJlZjtcbiAgY29uc3Qga2V5cyA9IG5ldyBTZXQoWy4uLk9iamVjdC5rZXlzKGRlcHNNYXApLCAuLi5PYmplY3Qua2V5cyhsYXN0RGVwc01hcCldKTtcbiAgY29uc3Qga2V5c0NoYW5nZWQgPSBBcnJheS5mcm9tKGtleXMpLmZpbHRlcihcbiAgICAvLyBNaXRpZ2F0aW9uIHRocm91Z2ggZGVueWxpc3RpbmcuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHNlY3VyaXR5L2RldGVjdC1vYmplY3QtaW5qZWN0aW9uXG4gICAga2V5ID0+ICFpc0ZvcmJpZGRlblByb3BlcnR5TmFtZShrZXkpICYmICFPYmplY3QuaXMoZGVwc01hcFtrZXldLCBsYXN0RGVwc01hcFtrZXldKVxuICApO1xuXG4gIGlmIChrZXlzQ2hhbmdlZC5sZW5ndGgpIHtcbiAgICBjb25zb2xlLmdyb3VwQ29sbGFwc2VkKGBDaGFuZ2VzIGZvdW5kIGluICR7bmFtZX1gKTtcblxuICAgIGtleXNDaGFuZ2VkLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIC8vIE1pdGlnYXRpb24gdGhyb3VnaCBkZW55bGlzdGluZy5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBzZWN1cml0eS9kZXRlY3Qtb2JqZWN0LWluamVjdGlvblxuICAgICAgaXNGb3JiaWRkZW5Qcm9wZXJ0eU5hbWUoa2V5KSB8fCBjb25zb2xlLmxvZyhrZXksIHsgZnJvbTogbGFzdERlcHNNYXBba2V5XSwgdG86IGRlcHNNYXBba2V5XSB9KTtcbiAgICB9KTtcblxuICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTtcbiAgfVxuXG4gIGxhc3REZXBzTWFwUmVmLmN1cnJlbnQgPSBkZXBzTWFwO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0FBRWUsU0FBU0EsWUFBVCxDQUFzQkMsT0FBdEIsRUFBK0JDLElBQS9CLEVBQXFDO0VBQ2xELElBQU1DLGNBQWMsR0FBRyxJQUFBQyxhQUFBLEVBQU8sRUFBUCxDQUF2QjtFQUVBLElBQWlCQyxXQUFqQixHQUFpQ0YsY0FBakMsQ0FBUUcsT0FBUjtFQUNBLElBQU1DLElBQUksR0FBRyxJQUFJQyxHQUFKLDhCQUFZQyxNQUFNLENBQUNGLElBQVAsQ0FBWU4sT0FBWixDQUFaLHNCQUFxQ1EsTUFBTSxDQUFDRixJQUFQLENBQVlGLFdBQVosQ0FBckMsR0FBYjtFQUNBLElBQU1LLFdBQVcsR0FBR0MsS0FBSyxDQUFDQyxJQUFOLENBQVdMLElBQVgsRUFBaUJNLE1BQWpCLEVBQ2xCO0VBQ0E7RUFDQSxVQUFBQyxHQUFHO0lBQUEsT0FBSSxDQUFDLElBQUFDLGdEQUFBLEVBQXdCRCxHQUF4QixDQUFELElBQWlDLENBQUNMLE1BQU0sQ0FBQ08sRUFBUCxDQUFVZixPQUFPLENBQUNhLEdBQUQsQ0FBakIsRUFBd0JULFdBQVcsQ0FBQ1MsR0FBRCxDQUFuQyxDQUF0QztFQUFBLENBSGUsQ0FBcEI7O0VBTUEsSUFBSUosV0FBVyxDQUFDTyxNQUFoQixFQUF3QjtJQUN0QkMsT0FBTyxDQUFDQyxjQUFSLDRCQUEyQ2pCLElBQTNDO0lBRUFRLFdBQVcsQ0FBQ1UsT0FBWixDQUFvQixVQUFBTixHQUFHLEVBQUk7TUFDekI7TUFDQTtNQUNBLElBQUFDLGdEQUFBLEVBQXdCRCxHQUF4QixLQUFnQ0ksT0FBTyxDQUFDRyxHQUFSLENBQVlQLEdBQVosRUFBaUI7UUFBRUYsSUFBSSxFQUFFUCxXQUFXLENBQUNTLEdBQUQsQ0FBbkI7UUFBMEJRLEVBQUUsRUFBRXJCLE9BQU8sQ0FBQ2EsR0FBRDtNQUFyQyxDQUFqQixDQUFoQztJQUNELENBSkQ7SUFNQUksT0FBTyxDQUFDSyxRQUFSO0VBQ0Q7O0VBRURwQixjQUFjLENBQUNHLE9BQWYsR0FBeUJMLE9BQXpCO0FBQ0QifQ==