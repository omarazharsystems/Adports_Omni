"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _useErrorBoxClass3 = _interopRequireDefault(require("./useErrorBoxClass"));

var _useTrackException = _interopRequireDefault(require("../useTrackException"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ErrorBox = function ErrorBox(_ref) {
  var error = _ref.error,
      type = _ref.type;

  var _useErrorBoxClass = (0, _useErrorBoxClass3.default)(),
      _useErrorBoxClass2 = _slicedToArray(_useErrorBoxClass, 1),
      errorBoxClass = _useErrorBoxClass2[0];

  var trackException = (0, _useTrackException.default)();
  (0, _react.useEffect)(function () {
    trackException(error, false);
  }, [error, trackException]);
  (0, _react.useEffect)(function () {
    console.group("botframework-webchat: ".concat(type));
    console.error(error);
    console.groupEnd();
  }, [error, type]);
  return !!errorBoxClass && /*#__PURE__*/(0, _react.createElement)(errorBoxClass, {
    error: error,
    type: type
  });
};

ErrorBox.defaultProps = {
  type: undefined
};
ErrorBox.propTypes = {
  error: _propTypes.default.any.isRequired,
  type: _propTypes.default.string
};
var _default = ErrorBox;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFcnJvckJveCIsImVycm9yIiwidHlwZSIsInVzZUVycm9yQm94Q2xhc3MiLCJlcnJvckJveENsYXNzIiwidHJhY2tFeGNlcHRpb24iLCJ1c2VUcmFja0V4Y2VwdGlvbiIsInVzZUVmZmVjdCIsImNvbnNvbGUiLCJncm91cCIsImdyb3VwRW5kIiwiY3JlYXRlRWxlbWVudCIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImFueSIsImlzUmVxdWlyZWQiLCJzdHJpbmciXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy9pbnRlcm5hbC9FcnJvckJveC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG5pbXBvcnQgeyBjcmVhdGVFbGVtZW50LCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgdXNlRXJyb3JCb3hDbGFzcyBmcm9tICcuL3VzZUVycm9yQm94Q2xhc3MnO1xuaW1wb3J0IHVzZVRyYWNrRXhjZXB0aW9uIGZyb20gJy4uL3VzZVRyYWNrRXhjZXB0aW9uJztcblxuY29uc3QgRXJyb3JCb3ggPSAoeyBlcnJvciwgdHlwZSB9KSA9PiB7XG4gIGNvbnN0IFtlcnJvckJveENsYXNzXSA9IHVzZUVycm9yQm94Q2xhc3MoKTtcbiAgY29uc3QgdHJhY2tFeGNlcHRpb24gPSB1c2VUcmFja0V4Y2VwdGlvbigpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgdHJhY2tFeGNlcHRpb24oZXJyb3IsIGZhbHNlKTtcbiAgfSwgW2Vycm9yLCB0cmFja0V4Y2VwdGlvbl0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5ncm91cChgYm90ZnJhbWV3b3JrLXdlYmNoYXQ6ICR7dHlwZX1gKTtcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICBjb25zb2xlLmdyb3VwRW5kKCk7XG4gIH0sIFtlcnJvciwgdHlwZV0pO1xuXG4gIHJldHVybiAhIWVycm9yQm94Q2xhc3MgJiYgY3JlYXRlRWxlbWVudChlcnJvckJveENsYXNzLCB7IGVycm9yLCB0eXBlIH0pO1xufTtcblxuRXJyb3JCb3guZGVmYXVsdFByb3BzID0ge1xuICB0eXBlOiB1bmRlZmluZWRcbn07XG5cbkVycm9yQm94LnByb3BUeXBlcyA9IHtcbiAgZXJyb3I6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZCxcbiAgdHlwZTogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRXJyb3JCb3g7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFFBQVEsR0FBRyxTQUFYQSxRQUFXLE9BQXFCO0VBQUEsSUFBbEJDLEtBQWtCLFFBQWxCQSxLQUFrQjtFQUFBLElBQVhDLElBQVcsUUFBWEEsSUFBVzs7RUFDcEMsd0JBQXdCLElBQUFDLDBCQUFBLEdBQXhCO0VBQUE7RUFBQSxJQUFPQyxhQUFQOztFQUNBLElBQU1DLGNBQWMsR0FBRyxJQUFBQywwQkFBQSxHQUF2QjtFQUVBLElBQUFDLGdCQUFBLEVBQVUsWUFBTTtJQUNkRixjQUFjLENBQUNKLEtBQUQsRUFBUSxLQUFSLENBQWQ7RUFDRCxDQUZELEVBRUcsQ0FBQ0EsS0FBRCxFQUFRSSxjQUFSLENBRkg7RUFJQSxJQUFBRSxnQkFBQSxFQUFVLFlBQU07SUFDZEMsT0FBTyxDQUFDQyxLQUFSLGlDQUF1Q1AsSUFBdkM7SUFDQU0sT0FBTyxDQUFDUCxLQUFSLENBQWNBLEtBQWQ7SUFDQU8sT0FBTyxDQUFDRSxRQUFSO0VBQ0QsQ0FKRCxFQUlHLENBQUNULEtBQUQsRUFBUUMsSUFBUixDQUpIO0VBTUEsT0FBTyxDQUFDLENBQUNFLGFBQUYsaUJBQW1CLElBQUFPLG9CQUFBLEVBQWNQLGFBQWQsRUFBNkI7SUFBRUgsS0FBSyxFQUFMQSxLQUFGO0lBQVNDLElBQUksRUFBSkE7RUFBVCxDQUE3QixDQUExQjtBQUNELENBZkQ7O0FBaUJBRixRQUFRLENBQUNZLFlBQVQsR0FBd0I7RUFDdEJWLElBQUksRUFBRVc7QUFEZ0IsQ0FBeEI7QUFJQWIsUUFBUSxDQUFDYyxTQUFULEdBQXFCO0VBQ25CYixLQUFLLEVBQUVjLGtCQUFBLENBQVVDLEdBQVYsQ0FBY0MsVUFERjtFQUVuQmYsSUFBSSxFQUFFYSxrQkFBQSxDQUFVRztBQUZHLENBQXJCO2VBS2VsQixRIn0=