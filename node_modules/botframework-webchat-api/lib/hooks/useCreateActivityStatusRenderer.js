"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useCreateActivityStatusRenderer;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _SendStatus = require("../types/internal/SendStatus");

var _useGetKeyByActivity = _interopRequireDefault(require("../hooks/useGetKeyByActivity"));

var _useSendStatusByActivityKey = _interopRequireDefault(require("../hooks/useSendStatusByActivityKey"));

var _useWebChatAPIContext2 = _interopRequireDefault(require("./internal/useWebChatAPIContext"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ActivityStatusContainerCore = /*#__PURE__*/(0, _react.memo)(function (_ref) {
  var activity = _ref.activity,
      hideTimestamp = _ref.hideTimestamp,
      nextVisibleActivity = _ref.nextVisibleActivity,
      sendStatus = _ref.sendStatus;

  var _useWebChatAPIContext = (0, _useWebChatAPIContext2.default)(),
      createActivityStatusRenderer = _useWebChatAPIContext.activityStatusRenderer;

  return createActivityStatusRenderer({
    activity: activity,
    hideTimestamp: hideTimestamp,
    nextVisibleActivity: nextVisibleActivity,
    // "nextVisibleActivity" is for backward compatibility, please remove this line on or after 2022-07-22.
    sameTimestampGroup: hideTimestamp,
    // "sameTimestampGroup" is for backward compatibility, please remove this line on or after 2022-07-22.
    sendState: sendStatus === _SendStatus.SEND_FAILED || sendStatus === _SendStatus.SENT ? sendStatus : _SendStatus.SENDING
  });
});
ActivityStatusContainerCore.propTypes = {
  // PropTypes cannot fully capture TypeScript types.
  // @ts-ignore
  activity: _propTypes.default.shape({
    from: _propTypes.default.shape({
      role: _propTypes.default.string
    }).isRequired,
    localTimestamp: _propTypes.default.string
  }).isRequired,
  hideTimestamp: _propTypes.default.bool.isRequired,
  nextVisibleActivity: _propTypes.default.any,
  sendStatus: _propTypes.default.oneOf([_SendStatus.SENDING, _SendStatus.SEND_FAILED, _SendStatus.SENT])
};
var ActivityStatusContainer = /*#__PURE__*/(0, _react.memo)(function (_ref2) {
  var activity = _ref2.activity,
      hideTimestamp = _ref2.hideTimestamp,
      nextVisibleActivity = _ref2.nextVisibleActivity;

  var _useSendStatusByActiv = (0, _useSendStatusByActivityKey.default)(),
      _useSendStatusByActiv2 = _slicedToArray(_useSendStatusByActiv, 1),
      sendStatusByActivityKey = _useSendStatusByActiv2[0];

  var getKeyByActivity = (0, _useGetKeyByActivity.default)();
  var key = getKeyByActivity(activity);

  var sendStatus = typeof key === 'string' && sendStatusByActivityKey.get(key) || _SendStatus.SENT;

  return /*#__PURE__*/_react.default.createElement(ActivityStatusContainerCore, {
    activity: activity,
    hideTimestamp: hideTimestamp,
    nextVisibleActivity: nextVisibleActivity,
    sendStatus: sendStatus
  });
});
ActivityStatusContainer.defaultProps = {
  hideTimestamp: false,
  nextVisibleActivity: undefined
};
ActivityStatusContainer.propTypes = {
  // PropTypes cannot fully capture TypeScript types.
  // @ts-ignore
  activity: _propTypes.default.shape({
    from: _propTypes.default.shape({
      role: _propTypes.default.string
    }).isRequired,
    localTimestamp: _propTypes.default.string
  }).isRequired,
  hideTimestamp: _propTypes.default.bool,
  nextVisibleActivity: _propTypes.default.any
};

function useCreateActivityStatusRenderer() {
  return (0, _react.useMemo)(function () {
    return function (_ref3) {
      var activity = _ref3.activity,
          nextVisibleActivity = _ref3.nextVisibleActivity;
      return function () {
        var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            hideTimestamp = _ref4.hideTimestamp;

        return /*#__PURE__*/_react.default.createElement(ActivityStatusContainer, {
          activity: activity,
          hideTimestamp: hideTimestamp,
          nextVisibleActivity: nextVisibleActivity
        });
      };
    };
  }, []);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,