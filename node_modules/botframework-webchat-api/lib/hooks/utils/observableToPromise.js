"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = observableToPromise;

function observableToPromise(observable, _ref) {
  var setTimeout = _ref.setTimeout;
  return new Promise(function (resolve, reject) {
    var subscription = observable.subscribe(function (sessionId) {
      resolve(sessionId); // HACK: Sometimes, the call complete asynchronously and we cannot unsubscribe.
      //       Need to wait some short time here to make sure the subscription variable has setup.
      //       Potentially, this can be fixed by assigning to `subscription` variable thru `Observer.start`.
      //       However, we should do some testing because we are not sure if RxJS@5 supports `Observer.start`.

      setTimeout(function () {
        return subscription.unsubscribe();
      }, 0);
    }, function (error) {
      reject(error);
      setTimeout(function () {
        return subscription.unsubscribe();
      }, 0);
    });
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvYnNlcnZhYmxlVG9Qcm9taXNlIiwib2JzZXJ2YWJsZSIsInNldFRpbWVvdXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInN1YnNjcmlwdGlvbiIsInN1YnNjcmliZSIsInNlc3Npb25JZCIsInVuc3Vic2NyaWJlIiwiZXJyb3IiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy91dGlscy9vYnNlcnZhYmxlVG9Qcm9taXNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPYnNlcnZhYmxlIGZyb20gJ2NvcmUtanMvZmVhdHVyZXMvb2JzZXJ2YWJsZSc7XG5cbmltcG9ydCB0eXBlIHsgR2xvYmFsU2NvcGVQb255ZmlsbCB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvcmUnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvYnNlcnZhYmxlVG9Qcm9taXNlPFQ+KFxuICBvYnNlcnZhYmxlOiBPYnNlcnZhYmxlPFQ+LFxuICB7IHNldFRpbWVvdXQgfTogR2xvYmFsU2NvcGVQb255ZmlsbFxuKTogUHJvbWlzZTxUPiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gb2JzZXJ2YWJsZS5zdWJzY3JpYmUoXG4gICAgICAoc2Vzc2lvbklkOiBUKSA9PiB7XG4gICAgICAgIHJlc29sdmUoc2Vzc2lvbklkKTtcblxuICAgICAgICAvLyBIQUNLOiBTb21ldGltZXMsIHRoZSBjYWxsIGNvbXBsZXRlIGFzeW5jaHJvbm91c2x5IGFuZCB3ZSBjYW5ub3QgdW5zdWJzY3JpYmUuXG4gICAgICAgIC8vICAgICAgIE5lZWQgdG8gd2FpdCBzb21lIHNob3J0IHRpbWUgaGVyZSB0byBtYWtlIHN1cmUgdGhlIHN1YnNjcmlwdGlvbiB2YXJpYWJsZSBoYXMgc2V0dXAuXG4gICAgICAgIC8vICAgICAgIFBvdGVudGlhbGx5LCB0aGlzIGNhbiBiZSBmaXhlZCBieSBhc3NpZ25pbmcgdG8gYHN1YnNjcmlwdGlvbmAgdmFyaWFibGUgdGhydSBgT2JzZXJ2ZXIuc3RhcnRgLlxuICAgICAgICAvLyAgICAgICBIb3dldmVyLCB3ZSBzaG91bGQgZG8gc29tZSB0ZXN0aW5nIGJlY2F1c2Ugd2UgYXJlIG5vdCBzdXJlIGlmIFJ4SlNANSBzdXBwb3J0cyBgT2JzZXJ2ZXIuc3RhcnRgLlxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpLCAwKTtcbiAgICAgIH0sXG4gICAgICAoZXJyb3I6IEVycm9yKSA9PiB7XG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCksIDApO1xuICAgICAgfVxuICAgICk7XG4gIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSWUsU0FBU0EsbUJBQVQsQ0FDYkMsVUFEYSxRQUdEO0VBQUEsSUFEVkMsVUFDVSxRQURWQSxVQUNVO0VBQ1osT0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0lBQ3RDLElBQU1DLFlBQVksR0FBR0wsVUFBVSxDQUFDTSxTQUFYLENBQ25CLFVBQUNDLFNBQUQsRUFBa0I7TUFDaEJKLE9BQU8sQ0FBQ0ksU0FBRCxDQUFQLENBRGdCLENBR2hCO01BQ0E7TUFDQTtNQUNBOztNQUNBTixVQUFVLENBQUM7UUFBQSxPQUFNSSxZQUFZLENBQUNHLFdBQWIsRUFBTjtNQUFBLENBQUQsRUFBbUMsQ0FBbkMsQ0FBVjtJQUNELENBVGtCLEVBVW5CLFVBQUNDLEtBQUQsRUFBa0I7TUFDaEJMLE1BQU0sQ0FBQ0ssS0FBRCxDQUFOO01BQ0FSLFVBQVUsQ0FBQztRQUFBLE9BQU1JLFlBQVksQ0FBQ0csV0FBYixFQUFOO01BQUEsQ0FBRCxFQUFtQyxDQUFuQyxDQUFWO0lBQ0QsQ0Fia0IsQ0FBckI7RUFlRCxDQWhCTSxDQUFQO0FBaUJEIn0=