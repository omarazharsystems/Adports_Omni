"use strict";

var _typeof = require("@babel/runtime-corejs3/helpers/typeof");

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/slicedToArray"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _Composer = _interopRequireDefault(require("./Composer"));

var _useReadyState3 = _interopRequireDefault(require("./hooks/useReadyState"));

var _useRefFrom = _interopRequireDefault(require("./useRefFrom"));

var _useSupported3 = _interopRequireDefault(require("./hooks/useSupported"));

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint no-magic-numbers: ["error", { "ignore": [0, 1, 2, 3] }] */
var DictateButtonCore = function DictateButtonCore(_ref) {
  var children = _ref.children,
      className = _ref.className,
      disabled = _ref.disabled,
      onClick = _ref.onClick;

  var _useReadyState = (0, _useReadyState3["default"])(),
      _useReadyState2 = (0, _slicedToArray2["default"])(_useReadyState, 1),
      readyState = _useReadyState2[0];

  var _useSupported = (0, _useSupported3["default"])(),
      _useSupported2 = (0, _slicedToArray2["default"])(_useSupported, 1),
      supported = _useSupported2[0];

  return /*#__PURE__*/_react["default"].createElement("button", {
    className: className,
    disabled: readyState === 1 || readyState === 3 || !supported || disabled,
    onClick: onClick,
    type: "button"
  }, typeof children === 'function' ? children({
    readyState: readyState
  }) : children);
};

DictateButtonCore.defaultProps = {
  children: undefined,
  className: undefined,
  disabled: undefined
};
DictateButtonCore.propTypes = {
  children: _propTypes["default"].any,
  className: _propTypes["default"].string,
  disabled: _propTypes["default"].bool,
  onClick: _propTypes["default"].func.isRequired
};

var DictateButton = function DictateButton(_ref2) {
  var children = _ref2.children,
      className = _ref2.className,
      disabled = _ref2.disabled,
      extra = _ref2.extra,
      grammar = _ref2.grammar,
      lang = _ref2.lang,
      onClick = _ref2.onClick,
      onDictate = _ref2.onDictate,
      onError = _ref2.onError,
      onProgress = _ref2.onProgress,
      onRawEvent = _ref2.onRawEvent,
      speechGrammarList = _ref2.speechGrammarList,
      speechRecognition = _ref2.speechRecognition;

  var _useState = (0, _react.useState)(),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      started = _useState2[0],
      setStarted = _useState2[1];

  var onClickRef = (0, _useRefFrom["default"])(onClick);
  var onDictateRef = (0, _useRefFrom["default"])(onDictate);
  var onErrorRef = (0, _useRefFrom["default"])(onError);
  var handleClick = (0, _react.useCallback)(function (event) {
    onClickRef.current && onClickRef.current(event);
    !event.isDefaultPrevented() && setStarted(function (started) {
      return !started;
    });
  }, [onClickRef, setStarted]);
  var handleDictate = (0, _react.useCallback)(function (event) {
    setStarted(false);
    onDictateRef.current && onDictateRef.current(event);
  }, [onDictateRef, setStarted]);
  var handleError = (0, _react.useCallback)(function (event) {
    setStarted(false);
    onErrorRef.current && onErrorRef.current(event);
  }, [onErrorRef, setStarted]);
  return /*#__PURE__*/_react["default"].createElement(_Composer["default"], {
    extra: extra,
    grammar: grammar,
    lang: lang,
    onDictate: handleDictate,
    onError: handleError,
    onProgress: onProgress,
    onRawEvent: onRawEvent,
    speechGrammarList: speechGrammarList,
    speechRecognition: speechRecognition,
    started: started && !disabled
  }, /*#__PURE__*/_react["default"].createElement(DictateButtonCore, {
    className: className,
    disabled: disabled,
    onClick: handleClick
  }, children));
};

DictateButton.defaultProps = {
  children: undefined,
  className: undefined,
  disabled: undefined,
  extra: undefined,
  grammar: undefined,
  lang: undefined,
  onClick: undefined,
  onDictate: undefined,
  onError: undefined,
  onProgress: undefined,
  onRawEvent: undefined,
  speechGrammarList: undefined,
  speechRecognition: undefined
};
DictateButton.propTypes = {
  children: _propTypes["default"].any,
  className: _propTypes["default"].string,
  disabled: _propTypes["default"].bool,
  extra: _propTypes["default"].any,
  grammar: _propTypes["default"].string,
  lang: _propTypes["default"].string,
  onClick: _propTypes["default"].func,
  onDictate: _propTypes["default"].func,
  onError: _propTypes["default"].func,
  onProgress: _propTypes["default"].func,
  onRawEvent: _propTypes["default"].func,
  speechGrammarList: _propTypes["default"].any,
  speechRecognition: _propTypes["default"].any
};
var _default = DictateButton;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,