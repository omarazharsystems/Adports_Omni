"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _ErrorNotificationIcon = _interopRequireDefault(require("./Assets/ErrorNotificationIcon"));

var _ScreenReaderText = _interopRequireDefault(require("../ScreenReaderText"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDirection = _botframeworkWebchatApi.hooks.useDirection,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;

var ConnectivityStatusJavaScriptError = function ConnectivityStatusJavaScriptError() {
  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      errorNotificationStyleSet = _useStyleSet2[0].errorNotification;

  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var localize = useLocalizer();
  var renderErrorNotificationText = localize('CONNECTIVITY_STATUS_ALT_RENDER_ERROR');
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: localize('CONNECTIVITY_STATUS_ALT', renderErrorNotificationText)
  }), /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": true,
    className: (0, _classnames.default)('webchat__connectivityStatus', errorNotificationStyleSet + ''),
    dir: direction
  }, /*#__PURE__*/_react.default.createElement(_ErrorNotificationIcon.default, null), renderErrorNotificationText));
};

var _default = ConnectivityStatusJavaScriptError;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VEaXJlY3Rpb24iLCJob29rcyIsInVzZUxvY2FsaXplciIsIkNvbm5lY3Rpdml0eVN0YXR1c0phdmFTY3JpcHRFcnJvciIsInVzZVN0eWxlU2V0IiwiZXJyb3JOb3RpZmljYXRpb25TdHlsZVNldCIsImVycm9yTm90aWZpY2F0aW9uIiwiZGlyZWN0aW9uIiwibG9jYWxpemUiLCJyZW5kZXJFcnJvck5vdGlmaWNhdGlvblRleHQiLCJjbGFzc05hbWVzIl0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi9zcmMvQ29ubmVjdGl2aXR5U3RhdHVzL0phdmFTY3JpcHRFcnJvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBFcnJvck5vdGlmaWNhdGlvbkljb24gZnJvbSAnLi9Bc3NldHMvRXJyb3JOb3RpZmljYXRpb25JY29uJztcbmltcG9ydCBTY3JlZW5SZWFkZXJUZXh0IGZyb20gJy4uL1NjcmVlblJlYWRlclRleHQnO1xuaW1wb3J0IHVzZVN0eWxlU2V0IGZyb20gJy4uL2hvb2tzL3VzZVN0eWxlU2V0JztcblxuY29uc3QgeyB1c2VEaXJlY3Rpb24sIHVzZUxvY2FsaXplciB9ID0gaG9va3M7XG5cbmNvbnN0IENvbm5lY3Rpdml0eVN0YXR1c0phdmFTY3JpcHRFcnJvciA9ICgpID0+IHtcbiAgY29uc3QgW3sgZXJyb3JOb3RpZmljYXRpb246IGVycm9yTm90aWZpY2F0aW9uU3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuICBjb25zdCBbZGlyZWN0aW9uXSA9IHVzZURpcmVjdGlvbigpO1xuICBjb25zdCBsb2NhbGl6ZSA9IHVzZUxvY2FsaXplcigpO1xuXG4gIGNvbnN0IHJlbmRlckVycm9yTm90aWZpY2F0aW9uVGV4dCA9IGxvY2FsaXplKCdDT05ORUNUSVZJVFlfU1RBVFVTX0FMVF9SRU5ERVJfRVJST1InKTtcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxTY3JlZW5SZWFkZXJUZXh0IHRleHQ9e2xvY2FsaXplKCdDT05ORUNUSVZJVFlfU1RBVFVTX0FMVCcsIHJlbmRlckVycm9yTm90aWZpY2F0aW9uVGV4dCl9IC8+XG4gICAgICA8ZGl2XG4gICAgICAgIGFyaWEtaGlkZGVuPXt0cnVlfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3dlYmNoYXRfX2Nvbm5lY3Rpdml0eVN0YXR1cycsIGVycm9yTm90aWZpY2F0aW9uU3R5bGVTZXQgKyAnJyl9XG4gICAgICAgIGRpcj17ZGlyZWN0aW9ufVxuICAgICAgPlxuICAgICAgICA8RXJyb3JOb3RpZmljYXRpb25JY29uIC8+XG4gICAgICAgIHtyZW5kZXJFcnJvck5vdGlmaWNhdGlvblRleHR9XG4gICAgICA8L2Rpdj5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29ubmVjdGl2aXR5U3RhdHVzSmF2YVNjcmlwdEVycm9yO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFRQSxZQUFSLEdBQXVDQyw2QkFBdkMsQ0FBUUQsWUFBUjtBQUFBLElBQXNCRSxZQUF0QixHQUF1Q0QsNkJBQXZDLENBQXNCQyxZQUF0Qjs7QUFFQSxJQUFNQyxpQ0FBaUMsR0FBRyxTQUFwQ0EsaUNBQW9DLEdBQU07RUFDOUMsbUJBQTJELElBQUFDLHFCQUFBLEdBQTNEO0VBQUE7RUFBQSxJQUE0QkMseUJBQTVCLG9CQUFTQyxpQkFBVDs7RUFDQSxvQkFBb0JOLFlBQVksRUFBaEM7RUFBQTtFQUFBLElBQU9PLFNBQVA7O0VBQ0EsSUFBTUMsUUFBUSxHQUFHTixZQUFZLEVBQTdCO0VBRUEsSUFBTU8sMkJBQTJCLEdBQUdELFFBQVEsQ0FBQyxzQ0FBRCxDQUE1QztFQUVBLG9CQUNFLDZCQUFDLGNBQUQsQ0FBTyxRQUFQLHFCQUNFLDZCQUFDLHlCQUFEO0lBQWtCLElBQUksRUFBRUEsUUFBUSxDQUFDLHlCQUFELEVBQTRCQywyQkFBNUI7RUFBaEMsRUFERixlQUVFO0lBQ0UsZUFBYSxJQURmO0lBRUUsU0FBUyxFQUFFLElBQUFDLG1CQUFBLEVBQVcsNkJBQVgsRUFBMENMLHlCQUF5QixHQUFHLEVBQXRFLENBRmI7SUFHRSxHQUFHLEVBQUVFO0VBSFAsZ0JBS0UsNkJBQUMsOEJBQUQsT0FMRixFQU1HRSwyQkFOSCxDQUZGLENBREY7QUFhRCxDQXBCRDs7ZUFzQmVOLGlDIn0=