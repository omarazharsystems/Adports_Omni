"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isPresentational;

/**
 * Determines if the rendering activity is presentational or not.
 * Returns `true` if the activity is presentational and should not be read by screen reader, otherwise, `false`.
 *
 * @returns {boolean} `true` if the activity is presentational and should not be read by screen reader, otherwise, `false`.
 */
function isPresentational(activity) {
  var _channelData$messageB, _activity$attachments, _activity$suggestedAc, _activity$suggestedAc2;

  if (activity.type !== 'message') {
    return true;
  }

  var channelData = activity.channelData; // "Fallback text" includes both message text and narratives for attachments.
  // Emptying out "fallback text" essentially mute for both message and attachments.

  var fallbackText = channelData === null || channelData === void 0 ? void 0 : channelData['webchat:fallback-text'];

  if (typeof fallbackText === 'string') {
    return !fallbackText;
  } // If there are "displayText" (MessageBack), "text", any attachments, or suggested actions, there are something to narrate.


  return !(channelData !== null && channelData !== void 0 && (_channelData$messageB = channelData.messageBack) !== null && _channelData$messageB !== void 0 && _channelData$messageB.displayText || activity.text || (_activity$attachments = activity.attachments) !== null && _activity$attachments !== void 0 && _activity$attachments.length || (_activity$suggestedAc = activity.suggestedActions) !== null && _activity$suggestedAc !== void 0 && (_activity$suggestedAc2 = _activity$suggestedAc.actions) !== null && _activity$suggestedAc2 !== void 0 && _activity$suggestedAc2.length);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpc1ByZXNlbnRhdGlvbmFsIiwiYWN0aXZpdHkiLCJ0eXBlIiwiY2hhbm5lbERhdGEiLCJmYWxsYmFja1RleHQiLCJtZXNzYWdlQmFjayIsImRpc3BsYXlUZXh0IiwidGV4dCIsImF0dGFjaG1lbnRzIiwibGVuZ3RoIiwic3VnZ2VzdGVkQWN0aW9ucyIsImFjdGlvbnMiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9UcmFuc2NyaXB0L0xpdmVSZWdpb24vaXNQcmVzZW50YXRpb25hbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFdlYkNoYXRBY3Rpdml0eSB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvcmUnO1xuXG4vKipcbiAqIERldGVybWluZXMgaWYgdGhlIHJlbmRlcmluZyBhY3Rpdml0eSBpcyBwcmVzZW50YXRpb25hbCBvciBub3QuXG4gKiBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYWN0aXZpdHkgaXMgcHJlc2VudGF0aW9uYWwgYW5kIHNob3VsZCBub3QgYmUgcmVhZCBieSBzY3JlZW4gcmVhZGVyLCBvdGhlcndpc2UsIGBmYWxzZWAuXG4gKlxuICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgYWN0aXZpdHkgaXMgcHJlc2VudGF0aW9uYWwgYW5kIHNob3VsZCBub3QgYmUgcmVhZCBieSBzY3JlZW4gcmVhZGVyLCBvdGhlcndpc2UsIGBmYWxzZWAuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzUHJlc2VudGF0aW9uYWwoYWN0aXZpdHk6IFdlYkNoYXRBY3Rpdml0eSk6IGJvb2xlYW4ge1xuICBpZiAoYWN0aXZpdHkudHlwZSAhPT0gJ21lc3NhZ2UnKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBjb25zdCB7IGNoYW5uZWxEYXRhIH0gPSBhY3Rpdml0eTtcblxuICAvLyBcIkZhbGxiYWNrIHRleHRcIiBpbmNsdWRlcyBib3RoIG1lc3NhZ2UgdGV4dCBhbmQgbmFycmF0aXZlcyBmb3IgYXR0YWNobWVudHMuXG4gIC8vIEVtcHR5aW5nIG91dCBcImZhbGxiYWNrIHRleHRcIiBlc3NlbnRpYWxseSBtdXRlIGZvciBib3RoIG1lc3NhZ2UgYW5kIGF0dGFjaG1lbnRzLlxuICBjb25zdCBmYWxsYmFja1RleHQgPSBjaGFubmVsRGF0YT8uWyd3ZWJjaGF0OmZhbGxiYWNrLXRleHQnXTtcblxuICBpZiAodHlwZW9mIGZhbGxiYWNrVGV4dCA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gIWZhbGxiYWNrVGV4dDtcbiAgfVxuXG4gIC8vIElmIHRoZXJlIGFyZSBcImRpc3BsYXlUZXh0XCIgKE1lc3NhZ2VCYWNrKSwgXCJ0ZXh0XCIsIGFueSBhdHRhY2htZW50cywgb3Igc3VnZ2VzdGVkIGFjdGlvbnMsIHRoZXJlIGFyZSBzb21ldGhpbmcgdG8gbmFycmF0ZS5cbiAgcmV0dXJuICEoXG4gICAgY2hhbm5lbERhdGE/Lm1lc3NhZ2VCYWNrPy5kaXNwbGF5VGV4dCB8fFxuICAgIGFjdGl2aXR5LnRleHQgfHxcbiAgICBhY3Rpdml0eS5hdHRhY2htZW50cz8ubGVuZ3RoIHx8XG4gICAgYWN0aXZpdHkuc3VnZ2VzdGVkQWN0aW9ucz8uYWN0aW9ucz8ubGVuZ3RoXG4gICk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZSxTQUFTQSxnQkFBVCxDQUEwQkMsUUFBMUIsRUFBOEQ7RUFBQTs7RUFDM0UsSUFBSUEsUUFBUSxDQUFDQyxJQUFULEtBQWtCLFNBQXRCLEVBQWlDO0lBQy9CLE9BQU8sSUFBUDtFQUNEOztFQUVELElBQVFDLFdBQVIsR0FBd0JGLFFBQXhCLENBQVFFLFdBQVIsQ0FMMkUsQ0FPM0U7RUFDQTs7RUFDQSxJQUFNQyxZQUFZLEdBQUdELFdBQUgsYUFBR0EsV0FBSCx1QkFBR0EsV0FBVyxDQUFHLHVCQUFILENBQWhDOztFQUVBLElBQUksT0FBT0MsWUFBUCxLQUF3QixRQUE1QixFQUFzQztJQUNwQyxPQUFPLENBQUNBLFlBQVI7RUFDRCxDQWIwRSxDQWUzRTs7O0VBQ0EsT0FBTyxFQUNMRCxXQUFXLFNBQVgsSUFBQUEsV0FBVyxXQUFYLDZCQUFBQSxXQUFXLENBQUVFLFdBQWIsd0VBQTBCQyxXQUExQixJQUNBTCxRQUFRLENBQUNNLElBRFQsNkJBRUFOLFFBQVEsQ0FBQ08sV0FGVCxrREFFQSxzQkFBc0JDLE1BRnRCLDZCQUdBUixRQUFRLENBQUNTLGdCQUhULDRFQUdBLHNCQUEyQkMsT0FIM0IsbURBR0EsdUJBQW9DRixNQUovQixDQUFQO0FBTUQifQ==