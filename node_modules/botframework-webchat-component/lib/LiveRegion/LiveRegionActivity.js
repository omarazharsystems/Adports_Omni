"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _activityAltText = _interopRequireDefault(require("../Utils/activityAltText"));

var _LiveRegionAttachments = _interopRequireDefault(require("./private/LiveRegionAttachments"));

var _LiveRegionSuggestedActions = _interopRequireDefault(require("./private/LiveRegionSuggestedActions"));

var _useRenderMarkdownAsHTML = _interopRequireDefault(require("../hooks/useRenderMarkdownAsHTML"));

var _useStyleToEmotionObject = _interopRequireDefault(require("../hooks/internal/useStyleToEmotionObject"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useAvatarForBot = _botframeworkWebchatApi.hooks.useAvatarForBot,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;
var ROOT_STYLE = {
  '&.webchat__live-region-activity': {
    color: 'transparent',
    height: 1,
    opacity: 0,
    overflow: 'hidden',
    position: 'absolute',
    top: 0,
    whiteSpace: 'nowrap',
    width: 1
  }
};

var LiveRegionActivity = function LiveRegionActivity(_ref) {
  var activity = _ref.activity;

  var _useAvatarForBot = useAvatarForBot(),
      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),
      botInitials = _useAvatarForBot2[0].initials;

  var role = activity.from.role,
      type = activity.type;
  var fallbackText = type === 'message' ? activity.channelData['webchat:fallback-text'] : undefined;
  var localize = useLocalizer();
  var renderMarkdownAsHTML = (0, _useRenderMarkdownAsHTML.default)();
  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';
  var textAlt = (0, _react.useMemo)(function () {
    return (0, _activityAltText.default)(activity, renderMarkdownAsHTML);
  }, [activity, renderMarkdownAsHTML]);
  var greetingAlt = (role === 'user' ? localize('ACTIVITY_YOU_SAID_ALT') : localize('ACTIVITY_BOT_SAID_ALT', botInitials || '')).replace(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]{2,}/g, ' ');
  var validFallbackText = fallbackText && typeof fallbackText === 'string';
  return /*#__PURE__*/_react.default.createElement("article", {
    "aria-atomic": true,
    className: (0, _classnames.default)('webchat__live-region-activity', rootClassName)
  }, /*#__PURE__*/_react.default.createElement("div", null, greetingAlt), validFallbackText ? /*#__PURE__*/_react.default.createElement("div", null, fallbackText) : /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement("div", null, textAlt), type === 'message' && /*#__PURE__*/_react.default.createElement(_react.Fragment, null, !!activity.suggestedActions && /*#__PURE__*/_react.default.createElement(_LiveRegionSuggestedActions.default, {
    suggestedActions: activity.suggestedActions
  }), /*#__PURE__*/_react.default.createElement(_LiveRegionAttachments.default, {
    activity: activity
  }))));
};

LiveRegionActivity.propTypes = {
  activity: _propTypes.default.any.isRequired
};
var _default = LiveRegionActivity;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VBdmF0YXJGb3JCb3QiLCJob29rcyIsInVzZUxvY2FsaXplciIsIlJPT1RfU1RZTEUiLCJjb2xvciIsImhlaWdodCIsIm9wYWNpdHkiLCJvdmVyZmxvdyIsInBvc2l0aW9uIiwidG9wIiwid2hpdGVTcGFjZSIsIndpZHRoIiwiTGl2ZVJlZ2lvbkFjdGl2aXR5IiwiYWN0aXZpdHkiLCJib3RJbml0aWFscyIsImluaXRpYWxzIiwicm9sZSIsImZyb20iLCJ0eXBlIiwiZmFsbGJhY2tUZXh0IiwiY2hhbm5lbERhdGEiLCJ1bmRlZmluZWQiLCJsb2NhbGl6ZSIsInJlbmRlck1hcmtkb3duQXNIVE1MIiwidXNlUmVuZGVyTWFya2Rvd25Bc0hUTUwiLCJyb290Q2xhc3NOYW1lIiwidXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QiLCJ0ZXh0QWx0IiwidXNlTWVtbyIsImFjdGl2aXR5QWx0VGV4dCIsImdyZWV0aW5nQWx0IiwicmVwbGFjZSIsInZhbGlkRmFsbGJhY2tUZXh0IiwiY2xhc3NOYW1lcyIsInN1Z2dlc3RlZEFjdGlvbnMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhbnkiLCJpc1JlcXVpcmVkIl0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi9zcmMvTGl2ZVJlZ2lvbi9MaXZlUmVnaW9uQWN0aXZpdHkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiBbXCJlcnJvclwiLCB7IFwiaWdub3JlXCI6IFsyXSB9XSAqL1xuXG5pbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBhY3Rpdml0eUFsdFRleHQgZnJvbSAnLi4vVXRpbHMvYWN0aXZpdHlBbHRUZXh0JztcbmltcG9ydCBMaXZlUmVnaW9uQXR0YWNobWVudHMgZnJvbSAnLi9wcml2YXRlL0xpdmVSZWdpb25BdHRhY2htZW50cyc7XG5pbXBvcnQgTGl2ZVJlZ2lvblN1Z2dlc3RlZEFjdGlvbnMgZnJvbSAnLi9wcml2YXRlL0xpdmVSZWdpb25TdWdnZXN0ZWRBY3Rpb25zJztcbmltcG9ydCB1c2VSZW5kZXJNYXJrZG93bkFzSFRNTCBmcm9tICcuLi9ob29rcy91c2VSZW5kZXJNYXJrZG93bkFzSFRNTCc7XG5pbXBvcnQgdXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QgZnJvbSAnLi4vaG9va3MvaW50ZXJuYWwvdXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QnO1xuXG5pbXBvcnQgdHlwZSB7IFZGQyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgV2ViQ2hhdEFjdGl2aXR5IH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtY29yZSc7XG5cbmNvbnN0IHsgdXNlQXZhdGFyRm9yQm90LCB1c2VMb2NhbGl6ZXIgfSA9IGhvb2tzO1xuXG5jb25zdCBST09UX1NUWUxFID0ge1xuICAnJi53ZWJjaGF0X19saXZlLXJlZ2lvbi1hY3Rpdml0eSc6IHtcbiAgICBjb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICBoZWlnaHQ6IDEsXG4gICAgb3BhY2l0eTogMCxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgdG9wOiAwLFxuICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIHdpZHRoOiAxXG4gIH1cbn07XG5cbnR5cGUgTGl2ZVJlZ2lvbkFjdGl2aXR5UHJvcHMgPSB7XG4gIGFjdGl2aXR5OiBXZWJDaGF0QWN0aXZpdHk7XG59O1xuXG5jb25zdCBMaXZlUmVnaW9uQWN0aXZpdHk6IFZGQzxMaXZlUmVnaW9uQWN0aXZpdHlQcm9wcz4gPSAoeyBhY3Rpdml0eSB9KSA9PiB7XG4gIGNvbnN0IFt7IGluaXRpYWxzOiBib3RJbml0aWFscyB9XSA9IHVzZUF2YXRhckZvckJvdCgpO1xuICBjb25zdCB7XG4gICAgZnJvbTogeyByb2xlIH0sXG4gICAgdHlwZVxuICB9ID0gYWN0aXZpdHk7XG4gIGNvbnN0IGZhbGxiYWNrVGV4dDogc3RyaW5nIHwgdW5kZWZpbmVkID1cbiAgICB0eXBlID09PSAnbWVzc2FnZScgPyBhY3Rpdml0eS5jaGFubmVsRGF0YVsnd2ViY2hhdDpmYWxsYmFjay10ZXh0J10gOiB1bmRlZmluZWQ7XG4gIGNvbnN0IGxvY2FsaXplID0gdXNlTG9jYWxpemVyKCk7XG4gIGNvbnN0IHJlbmRlck1hcmtkb3duQXNIVE1MID0gdXNlUmVuZGVyTWFya2Rvd25Bc0hUTUwoKTtcbiAgY29uc3Qgcm9vdENsYXNzTmFtZSA9IHVzZVN0eWxlVG9FbW90aW9uT2JqZWN0KCkoUk9PVF9TVFlMRSkgKyAnJztcbiAgY29uc3QgdGV4dEFsdCA9IHVzZU1lbW8oKCkgPT4gYWN0aXZpdHlBbHRUZXh0KGFjdGl2aXR5LCByZW5kZXJNYXJrZG93bkFzSFRNTCksIFthY3Rpdml0eSwgcmVuZGVyTWFya2Rvd25Bc0hUTUxdKTtcblxuICBjb25zdCBncmVldGluZ0FsdDogc3RyaW5nID0gKFxuICAgIHJvbGUgPT09ICd1c2VyJyA/IGxvY2FsaXplKCdBQ1RJVklUWV9ZT1VfU0FJRF9BTFQnKSA6IGxvY2FsaXplKCdBQ1RJVklUWV9CT1RfU0FJRF9BTFQnLCBib3RJbml0aWFscyB8fCAnJylcbiAgKS5yZXBsYWNlKC9cXHN7Mix9L2d1LCAnICcpO1xuICBjb25zdCB2YWxpZEZhbGxiYWNrVGV4dCA9IGZhbGxiYWNrVGV4dCAmJiB0eXBlb2YgZmFsbGJhY2tUZXh0ID09PSAnc3RyaW5nJztcblxuICByZXR1cm4gKFxuICAgIDxhcnRpY2xlIGFyaWEtYXRvbWljPXt0cnVlfSBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3dlYmNoYXRfX2xpdmUtcmVnaW9uLWFjdGl2aXR5Jywgcm9vdENsYXNzTmFtZSl9PlxuICAgICAgPGRpdj57Z3JlZXRpbmdBbHR9PC9kaXY+XG4gICAgICB7dmFsaWRGYWxsYmFja1RleHQgPyAoXG4gICAgICAgIDxkaXY+e2ZhbGxiYWNrVGV4dH08L2Rpdj5cbiAgICAgICkgOiAoXG4gICAgICAgIDxGcmFnbWVudD5cbiAgICAgICAgICA8ZGl2Pnt0ZXh0QWx0fTwvZGl2PlxuICAgICAgICAgIHt0eXBlID09PSAnbWVzc2FnZScgJiYgKFxuICAgICAgICAgICAgPEZyYWdtZW50PlxuICAgICAgICAgICAgICB7ISFhY3Rpdml0eS5zdWdnZXN0ZWRBY3Rpb25zICYmIChcbiAgICAgICAgICAgICAgICA8TGl2ZVJlZ2lvblN1Z2dlc3RlZEFjdGlvbnMgc3VnZ2VzdGVkQWN0aW9ucz17YWN0aXZpdHkuc3VnZ2VzdGVkQWN0aW9uc30gLz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPExpdmVSZWdpb25BdHRhY2htZW50cyBhY3Rpdml0eT17YWN0aXZpdHl9IC8+XG4gICAgICAgICAgICA8L0ZyYWdtZW50PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvRnJhZ21lbnQ+XG4gICAgICApfVxuICAgIDwvYXJ0aWNsZT5cbiAgKTtcbn07XG5cbkxpdmVSZWdpb25BY3Rpdml0eS5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2aXR5OiBQcm9wVHlwZXMuYW55LmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IExpdmVSZWdpb25BY3Rpdml0eTtcblxuZXhwb3J0IHR5cGUgeyBMaXZlUmVnaW9uQWN0aXZpdHlQcm9wcyB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLQSxJQUFRQSxlQUFSLEdBQTBDQyw2QkFBMUMsQ0FBUUQsZUFBUjtBQUFBLElBQXlCRSxZQUF6QixHQUEwQ0QsNkJBQTFDLENBQXlCQyxZQUF6QjtBQUVBLElBQU1DLFVBQVUsR0FBRztFQUNq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