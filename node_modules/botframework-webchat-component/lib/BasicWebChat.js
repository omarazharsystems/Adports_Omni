"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Surface = _interopRequireDefault(require("./Utils/AccessKeySink/Surface"));

var _BasicConnectivityStatus = _interopRequireDefault(require("./BasicConnectivityStatus"));

var _BasicSendBox = _interopRequireDefault(require("./BasicSendBox"));

var _BasicToaster = _interopRequireDefault(require("./BasicToaster"));

var _BasicTranscript = _interopRequireDefault(require("./BasicTranscript"));

var _useStyleSet3 = _interopRequireDefault(require("./hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("./hooks/internal/useStyleToEmotionObject"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;
var ROOT_STYLE = {
  display: 'flex',
  flexDirection: 'column'
};
var CONNECTIVITY_STATUS_STYLE = {
  flexShrink: 0
};
var SEND_BOX_CSS = {
  flexShrink: 0
};
var TOASTER_STYLE = {
  flexShrink: 0
};
var TRANSCRIPT_STYLE = {
  flex: 1
}; // Subset of landmark roles: https://w3.org/TR/wai-aria/#landmark_roles

var ARIA_LANDMARK_ROLES = ['complementary', 'contentinfo', 'form', 'main', 'region'];

var BasicWebChat = function BasicWebChat(_ref) {
  var className = _ref.className,
      role = _ref.role;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      rootStyleSet = _useStyleSet2[0].root;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      options = _useStyleOptions2[0];

  var styleToEmotionObject = (0, _useStyleToEmotionObject.default)();
  var connectivityStatusClassName = styleToEmotionObject(CONNECTIVITY_STATUS_STYLE) + '';
  var rootClassName = styleToEmotionObject(ROOT_STYLE) + '';
  var sendBoxClassName = styleToEmotionObject(SEND_BOX_CSS) + '';
  var toasterClassName = styleToEmotionObject(TOASTER_STYLE) + '';
  var transcriptClassName = styleToEmotionObject(TRANSCRIPT_STYLE) + ''; // Fallback to "complementary" if specified is not a valid landmark role.

  if (!ARIA_LANDMARK_ROLES.includes(role)) {
    role = 'complementary';
  }

  return /*#__PURE__*/_react.default.createElement(_Surface.default, {
    className: (0, _classnames.default)(rootClassName, rootStyleSet + '', (className || '') + ''),
    role: role
  }, !options.hideToaster && /*#__PURE__*/_react.default.createElement(_BasicToaster.default, {
    className: toasterClassName
  }), /*#__PURE__*/_react.default.createElement(_BasicTranscript.default, {
    className: transcriptClassName
  }), /*#__PURE__*/_react.default.createElement(_BasicConnectivityStatus.default, {
    className: connectivityStatusClassName
  }), !options.hideSendBox && /*#__PURE__*/_react.default.createElement(_BasicSendBox.default, {
    className: sendBoxClassName
  }));
};

BasicWebChat.defaultProps = {
  className: '',
  role: 'complementary'
};
BasicWebChat.propTypes = {
  className: _propTypes.default.string,
  // Ignoring deficiencies with TypeScript/PropTypes inference.
  // @ts-ignore
  role: _propTypes.default.oneOf(ARIA_LANDMARK_ROLES)
};
var _default = BasicWebChat;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VTdHlsZU9wdGlvbnMiLCJob29rcyIsIlJPT1RfU1RZTEUiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsIkNPTk5FQ1RJVklUWV9TVEFUVVNfU1RZTEUiLCJmbGV4U2hyaW5rIiwiU0VORF9CT1hfQ1NTIiwiVE9BU1RFUl9TVFlMRSIsIlRSQU5TQ1JJUFRfU1RZTEUiLCJmbGV4IiwiQVJJQV9MQU5ETUFSS19ST0xFUyIsIkJhc2ljV2ViQ2hhdCIsImNsYXNzTmFtZSIsInJvbGUiLCJ1c2VTdHlsZVNldCIsInJvb3RTdHlsZVNldCIsInJvb3QiLCJvcHRpb25zIiwic3R5bGVUb0Vtb3Rpb25PYmplY3QiLCJ1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCIsImNvbm5lY3Rpdml0eVN0YXR1c0NsYXNzTmFtZSIsInJvb3RDbGFzc05hbWUiLCJzZW5kQm94Q2xhc3NOYW1lIiwidG9hc3RlckNsYXNzTmFtZSIsInRyYW5zY3JpcHRDbGFzc05hbWUiLCJpbmNsdWRlcyIsImNsYXNzTmFtZXMiLCJoaWRlVG9hc3RlciIsImhpZGVTZW5kQm94IiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwib25lT2YiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uL3NyYy9CYXNpY1dlYkNoYXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiBbXCJlcnJvclwiLCB7IFwiaWdub3JlXCI6IFswLCAxLCAyXSB9XSAqL1xuLyogZXNsaW50IHJlYWN0L25vLXVuc2FmZTogb2ZmICovXG5cbmltcG9ydCB7IGhvb2tzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwgeyBGQyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEFjY2Vzc0tleVNpbmtTdXJmYWNlIGZyb20gJy4vVXRpbHMvQWNjZXNzS2V5U2luay9TdXJmYWNlJztcbmltcG9ydCBCYXNpY0Nvbm5lY3Rpdml0eVN0YXR1cyBmcm9tICcuL0Jhc2ljQ29ubmVjdGl2aXR5U3RhdHVzJztcbmltcG9ydCBCYXNpY1NlbmRCb3ggZnJvbSAnLi9CYXNpY1NlbmRCb3gnO1xuaW1wb3J0IEJhc2ljVG9hc3RlciBmcm9tICcuL0Jhc2ljVG9hc3Rlcic7XG5pbXBvcnQgQmFzaWNUcmFuc2NyaXB0IGZyb20gJy4vQmFzaWNUcmFuc2NyaXB0JztcbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuL2hvb2tzL3VzZVN0eWxlU2V0JztcbmltcG9ydCB1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCBmcm9tICcuL2hvb2tzL2ludGVybmFsL3VzZVN0eWxlVG9FbW90aW9uT2JqZWN0JztcblxuY29uc3QgeyB1c2VTdHlsZU9wdGlvbnMgfSA9IGhvb2tzO1xuXG5jb25zdCBST09UX1NUWUxFID0ge1xuICBkaXNwbGF5OiAnZmxleCcsXG4gIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nXG59O1xuXG5jb25zdCBDT05ORUNUSVZJVFlfU1RBVFVTX1NUWUxFID0ge1xuICBmbGV4U2hyaW5rOiAwXG59O1xuXG5jb25zdCBTRU5EX0JPWF9DU1MgPSB7XG4gIGZsZXhTaHJpbms6IDBcbn07XG5cbmNvbnN0IFRPQVNURVJfU1RZTEUgPSB7XG4gIGZsZXhTaHJpbms6IDBcbn07XG5cbmNvbnN0IFRSQU5TQ1JJUFRfU1RZTEUgPSB7XG4gIGZsZXg6IDFcbn07XG5cbi8vIFN1YnNldCBvZiBsYW5kbWFyayByb2xlczogaHR0cHM6Ly93My5vcmcvVFIvd2FpLWFyaWEvI2xhbmRtYXJrX3JvbGVzXG5jb25zdCBBUklBX0xBTkRNQVJLX1JPTEVTID0gWydjb21wbGVtZW50YXJ5JywgJ2NvbnRlbnRpbmZvJywgJ2Zvcm0nLCAnbWFpbicsICdyZWdpb24nXTtcblxudHlwZSBCYXNpY1dlYkNoYXRQcm9wcyA9IHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICByb2xlPzogJ2NvbXBsZW1lbnRhcnknIHwgJ2NvbnRlbnRpbmZvJyB8ICdmb3JtJyB8ICdtYWluJyB8ICdyZWdpb24nO1xufTtcblxuY29uc3QgQmFzaWNXZWJDaGF0OiBGQzxCYXNpY1dlYkNoYXRQcm9wcz4gPSAoeyBjbGFzc05hbWUsIHJvbGUgfSkgPT4ge1xuICBjb25zdCBbeyByb290OiByb290U3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuICBjb25zdCBbb3B0aW9uc10gPSB1c2VTdHlsZU9wdGlvbnMoKTtcbiAgY29uc3Qgc3R5bGVUb0Vtb3Rpb25PYmplY3QgPSB1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCgpO1xuXG4gIGNvbnN0IGNvbm5lY3Rpdml0eVN0YXR1c0NsYXNzTmFtZSA9IHN0eWxlVG9FbW90aW9uT2JqZWN0KENPTk5FQ1RJVklUWV9TVEFUVVNfU1RZTEUpICsgJyc7XG4gIGNvbnN0IHJvb3RDbGFzc05hbWUgPSBzdHlsZVRvRW1vdGlvbk9iamVjdChST09UX1NUWUxFKSArICcnO1xuICBjb25zdCBzZW5kQm94Q2xhc3NOYW1lID0gc3R5bGVUb0Vtb3Rpb25PYmplY3QoU0VORF9CT1hfQ1NTKSArICcnO1xuICBjb25zdCB0b2FzdGVyQ2xhc3NOYW1lID0gc3R5bGVUb0Vtb3Rpb25PYmplY3QoVE9BU1RFUl9TVFlMRSkgKyAnJztcbiAgY29uc3QgdHJhbnNjcmlwdENsYXNzTmFtZSA9IHN0eWxlVG9FbW90aW9uT2JqZWN0KFRSQU5TQ1JJUFRfU1RZTEUpICsgJyc7XG5cbiAgLy8gRmFsbGJhY2sgdG8gXCJjb21wbGVtZW50YXJ5XCIgaWYgc3BlY2lmaWVkIGlzIG5vdCBhIHZhbGlkIGxhbmRtYXJrIHJvbGUuXG4gIGlmICghQVJJQV9MQU5ETUFSS19ST0xFUy5pbmNsdWRlcyhyb2xlKSkge1xuICAgIHJvbGUgPSAnY29tcGxlbWVudGFyeSc7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxBY2Nlc3NLZXlTaW5rU3VyZmFjZSBjbGFzc05hbWU9e2NsYXNzTmFtZXMocm9vdENsYXNzTmFtZSwgcm9vdFN0eWxlU2V0ICsgJycsIChjbGFzc05hbWUgfHwgJycpICsgJycpfSByb2xlPXtyb2xlfT5cbiAgICAgIHshb3B0aW9ucy5oaWRlVG9hc3RlciAmJiA8QmFzaWNUb2FzdGVyIGNsYXNzTmFtZT17dG9hc3RlckNsYXNzTmFtZX0gLz59XG4gICAgICA8QmFzaWNUcmFuc2NyaXB0IGNsYXNzTmFtZT17dHJhbnNjcmlwdENsYXNzTmFtZX0gLz5cbiAgICAgIDxCYXNpY0Nvbm5lY3Rpdml0eVN0YXR1cyBjbGFzc05hbWU9e2Nvbm5lY3Rpdml0eVN0YXR1c0NsYXNzTmFtZX0gLz5cbiAgICAgIHshb3B0aW9ucy5oaWRlU2VuZEJveCAmJiA8QmFzaWNTZW5kQm94IGNsYXNzTmFtZT17c2VuZEJveENsYXNzTmFtZX0gLz59XG4gICAgPC9BY2Nlc3NLZXlTaW5rU3VyZmFjZT5cbiAgKTtcbn07XG5cbkJhc2ljV2ViQ2hhdC5kZWZhdWx0UHJvcHMgPSB7XG4gIGNsYXNzTmFtZTogJycsXG4gIHJvbGU6ICdjb21wbGVtZW50YXJ5J1xufTtcblxuQmFzaWNXZWJDaGF0LnByb3BUeXBlcyA9IHtcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAvLyBJZ25vcmluZyBkZWZpY2llbmNpZXMgd2l0aCBUeXBlU2NyaXB0L1Byb3BUeXBlcyBpbmZlcmVuY2UuXG4gIC8vIEB0cy1pZ25vcmVcbiAgcm9sZTogUHJvcFR5cGVzLm9uZU9mKEFSSUFfTEFORE1BUktfUk9MRVMpXG59O1xuXG5leHBvcnQgZGVmYXVsdCBCYXNpY1dlYkNoYXQ7XG5cbmV4cG9ydCB0eXBlIHsgQmFzaWNXZWJDaGF0UHJvcHMgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBUUEsZUFB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