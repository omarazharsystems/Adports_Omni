"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _ScreenReaderText = _interopRequireDefault(require("../ScreenReaderText"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("../hooks/internal/useStyleToEmotionObject"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDirection = _botframeworkWebchatApi.hooks.useDirection,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;
var ROOT_STYLE = {
  '&.webchat__typingIndicator.webchat__typingIndicator--rtl': {
    transform: 'scale(-1, 1)'
  }
};

var TypingAnimation = function TypingAnimation() {
  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      typingAnimationStyleSet = _useStyleSet2[0].typingAnimation;

  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var localize = useLocalizer();
  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: localize('TYPING_INDICATOR_ALT')
  }), /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": true,
    className: (0, _classnames.default)('webchat__typingIndicator', {
      'webchat__typingIndicator--rtl': direction === 'rtl'
    }, rootClassName, typingAnimationStyleSet + '')
  }));
};

var _default = TypingAnimation;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VEaXJlY3Rpb24iLCJob29rcyIsInVzZUxvY2FsaXplciIsIlJPT1RfU1RZTEUiLCJ0cmFuc2Zvcm0iLCJUeXBpbmdBbmltYXRpb24iLCJ1c2VTdHlsZVNldCIsInR5cGluZ0FuaW1hdGlvblN0eWxlU2V0IiwidHlwaW5nQW5pbWF0aW9uIiwiZGlyZWN0aW9uIiwibG9jYWxpemUiLCJyb290Q2xhc3NOYW1lIiwidXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QiLCJjbGFzc05hbWVzIl0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi9zcmMvQXNzZXRzL1R5cGluZ0FuaW1hdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBTY3JlZW5SZWFkZXJUZXh0IGZyb20gJy4uL1NjcmVlblJlYWRlclRleHQnO1xuXG5pbXBvcnQgdXNlU3R5bGVTZXQgZnJvbSAnLi4vaG9va3MvdXNlU3R5bGVTZXQnO1xuaW1wb3J0IHVzZVN0eWxlVG9FbW90aW9uT2JqZWN0IGZyb20gJy4uL2hvb2tzL2ludGVybmFsL3VzZVN0eWxlVG9FbW90aW9uT2JqZWN0JztcblxuY29uc3QgeyB1c2VEaXJlY3Rpb24sIHVzZUxvY2FsaXplciB9ID0gaG9va3M7XG5cbmNvbnN0IFJPT1RfU1RZTEUgPSB7XG4gICcmLndlYmNoYXRfX3R5cGluZ0luZGljYXRvci53ZWJjaGF0X190eXBpbmdJbmRpY2F0b3ItLXJ0bCc6IHsgdHJhbnNmb3JtOiAnc2NhbGUoLTEsIDEpJyB9XG59O1xuXG5jb25zdCBUeXBpbmdBbmltYXRpb24gPSAoKSA9PiB7XG4gIGNvbnN0IFt7IHR5cGluZ0FuaW1hdGlvbjogdHlwaW5nQW5pbWF0aW9uU3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuICBjb25zdCBbZGlyZWN0aW9uXSA9IHVzZURpcmVjdGlvbigpO1xuICBjb25zdCBsb2NhbGl6ZSA9IHVzZUxvY2FsaXplcigpO1xuICBjb25zdCByb290Q2xhc3NOYW1lID0gdXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QoKShST09UX1NUWUxFKSArICcnO1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPFNjcmVlblJlYWRlclRleHQgdGV4dD17bG9jYWxpemUoJ1RZUElOR19JTkRJQ0FUT1JfQUxUJyl9IC8+XG4gICAgICA8ZGl2XG4gICAgICAgIGFyaWEtaGlkZGVuPXt0cnVlfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXG4gICAgICAgICAgJ3dlYmNoYXRfX3R5cGluZ0luZGljYXRvcicsXG4gICAgICAgICAge1xuICAgICAgICAgICAgJ3dlYmNoYXRfX3R5cGluZ0luZGljYXRvci0tcnRsJzogZGlyZWN0aW9uID09PSAncnRsJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcm9vdENsYXNzTmFtZSxcbiAgICAgICAgICB0eXBpbmdBbmltYXRpb25TdHlsZVNldCArICcnXG4gICAgICAgICl9XG4gICAgICAvPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBUeXBpbmdBbmltYXRpb247XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQVFBLFlBQVIsR0FBdUNDLDZCQUF2QyxDQUFRRCxZQUFSO0FBQUEsSUFBc0JFLFlBQXRCLEdBQXVDRCw2QkFBdkMsQ0FBc0JDLFlBQXRCO0FBRUEsSUFBTUMsVUFBVSxHQUFHO0VBQ2pCLDREQUE0RDtJQUFFQyxTQUFTLEVBQUU7RUFBYjtBQUQzQyxDQUFuQjs7QUFJQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLEdBQU07RUFDNUIsbUJBQXVELElBQUFDLHFCQUFBLEdBQXZEO0VBQUE7RUFBQSxJQUEwQkMsdUJBQTFCLG9CQUFTQyxlQUFUOztFQUNBLG9CQUFvQlIsWUFBWSxFQUFoQztFQUFBO0VBQUEsSUFBT1MsU0FBUDs7RUFDQSxJQUFNQyxRQUFRLEdBQUdSLFlBQVksRUFBN0I7RUFDQSxJQUFNUyxhQUFhLEdBQUcsSUFBQUMsZ0NBQUEsSUFBMEJULFVBQTFCLElBQXdDLEVBQTlEO0VBRUEsb0JBQ0UsNkJBQUMsY0FBRCxDQUFPLFFBQVAscUJBQ0UsNkJBQUMseUJBQUQ7SUFBa0IsSUFBSSxFQUFFTyxRQUFRLENBQUMsc0JBQUQ7RUFBaEMsRUFERixlQUVFO0lBQ0UsZUFBYSxJQURmO0lBRUUsU0FBUyxFQUFFLElBQUFHLG1CQUFBLEVBQ1QsMEJBRFMsRUFFVDtNQUNFLGlDQUFpQ0osU0FBUyxLQUFLO0lBRGpELENBRlMsRUFLVEUsYUFMUyxFQU1USix1QkFBdUIsR0FBRyxFQU5qQjtFQUZiLEVBRkYsQ0FERjtBQWdCRCxDQXRCRDs7ZUF3QmVGLGUifQ==