"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _DismissIcon = _interopRequireDefault(require("./Toast/DismissIcon"));

var _NotificationIcon = _interopRequireDefault(require("./Toast/NotificationIcon"));

var _randomId = _interopRequireDefault(require("./Utils/randomId"));

var _ScreenReaderText = _interopRequireDefault(require("./ScreenReaderText"));

var _useInternalRenderMarkdownInline = _interopRequireDefault(require("./hooks/internal/useInternalRenderMarkdownInline"));

var _useStyleSet3 = _interopRequireDefault(require("./hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("./hooks/internal/useStyleToEmotionObject"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDismissNotification = _botframeworkWebchatApi.hooks.useDismissNotification,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;
var ROOT_STYLE = {
  display: 'flex',
  '& .webchat__toast__text': {
    flex: 1
  }
};

var BasicToast = function BasicToast(_ref) {
  var _ref$notification = _ref.notification,
      alt = _ref$notification.alt,
      id = _ref$notification.id,
      level = _ref$notification.level,
      _ref$notification$mes = _ref$notification.message,
      message = _ref$notification$mes === void 0 ? '' : _ref$notification$mes;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      toastStyleSet = _useStyleSet2[0].toast;

  var contentId = (0, _react.useMemo)(function () {
    return "webchat__toast__".concat((0, _randomId.default)());
  }, []);
  var localize = useLocalizer();
  var dismissNotification = useDismissNotification();
  var renderMarkdownInline = (0, _useInternalRenderMarkdownInline.default)();
  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';
  var handleDismiss = (0, _react.useCallback)(function () {
    return dismissNotification(id);
  }, [dismissNotification, id]);
  var html = (0, _react.useMemo)(function () {
    return {
      __html: renderMarkdownInline(message)
    };
  }, [message, renderMarkdownInline]);
  return /*#__PURE__*/_react.default.createElement("div", {
    "aria-describedby": contentId,
    "aria-label": localize('TOAST_TITLE_ALT'),
    className: (0, _classnames.default)('webchat__toast', {
      'webchat__toast--error': level === 'error',
      'webchat__toast--info': level === 'info',
      'webchat__toast--success': level === 'success',
      'webchat__toast--warn': level === 'warn'
    }, rootClassName, toastStyleSet + ''),
    role: "dialog"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__toast__iconBox"
  }, /*#__PURE__*/_react.default.createElement(_NotificationIcon.default, {
    className: "webchat__toast__icon",
    level: level
  })), !!alt && /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: alt
  }), /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": !!alt,
    className: "webchat__toast__text",
    dangerouslySetInnerHTML: html,
    id: contentId
  }), /*#__PURE__*/_react.default.createElement("button", {
    "aria-label": localize('TOAST_DISMISS_BUTTON'),
    className: "webchat__toast__dismissButton",
    onClick: handleDismiss,
    type: "button"
  }, /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": true,
    className: "webchat__toast__dismissButtonFocus"
  }, /*#__PURE__*/_react.default.createElement(_DismissIcon.default, null))));
};

BasicToast.propTypes = {
  notification: _propTypes.default.shape({
    alt: _propTypes.default.string,
    id: _propTypes.default.string.isRequired,
    level: _propTypes.default.string.isRequired,
    message: _propTypes.default.string.isRequired
  }).isRequired
};
var _default = BasicToast;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VEaXNtaXNzTm90aWZpY2F0aW9uIiwiaG9va3MiLCJ1c2VMb2NhbGl6ZXIiLCJST09UX1NUWUxFIiwiZGlzcGxheSIsImZsZXgiLCJCYXNpY1RvYXN0Iiwibm90aWZpY2F0aW9uIiwiYWx0IiwiaWQiLCJsZXZlbCIsIm1lc3NhZ2UiLCJ1c2VTdHlsZVNldCIsInRvYXN0U3R5bGVTZXQiLCJ0b2FzdCIsImNvbnRlbnRJZCIsInVzZU1lbW8iLCJyYW5kb21JZCIsImxvY2FsaXplIiwiZGlzbWlzc05vdGlmaWNhdGlvbiIsInJlbmRlck1hcmtkb3duSW5saW5lIiwidXNlSW50ZXJuYWxSZW5kZXJNYXJrZG93bklubGluZSIsInJvb3RDbGFzc05hbWUiLCJ1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCIsImhhbmRsZURpc21pc3MiLCJ1c2VDYWxsYmFjayIsImh0bWwiLCJfX2h0bWwiLCJjbGFzc05hbWVzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic2hhcGUiLCJzdHJpbmciLCJpc1JlcXVpcmVkIl0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi9zcmMvQmFzaWNUb2FzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgcmVhY3QvZm9yYmlkLWRvbS1wcm9wczogXCJvZmZcIiAqL1xuLyogZXNsaW50IHJlYWN0L25vLWRhbmdlcjogXCJvZmZcIiAqL1xuXG5pbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBEaXNtaXNzSWNvbiBmcm9tICcuL1RvYXN0L0Rpc21pc3NJY29uJztcbmltcG9ydCBOb3RpZmljYXRpb25JY29uIGZyb20gJy4vVG9hc3QvTm90aWZpY2F0aW9uSWNvbic7XG5pbXBvcnQgcmFuZG9tSWQgZnJvbSAnLi9VdGlscy9yYW5kb21JZCc7XG5pbXBvcnQgU2NyZWVuUmVhZGVyVGV4dCBmcm9tICcuL1NjcmVlblJlYWRlclRleHQnO1xuaW1wb3J0IHVzZUludGVybmFsUmVuZGVyTWFya2Rvd25JbmxpbmUgZnJvbSAnLi9ob29rcy9pbnRlcm5hbC91c2VJbnRlcm5hbFJlbmRlck1hcmtkb3duSW5saW5lJztcbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuL2hvb2tzL3VzZVN0eWxlU2V0JztcbmltcG9ydCB1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCBmcm9tICcuL2hvb2tzL2ludGVybmFsL3VzZVN0eWxlVG9FbW90aW9uT2JqZWN0JztcblxuY29uc3QgeyB1c2VEaXNtaXNzTm90aWZpY2F0aW9uLCB1c2VMb2NhbGl6ZXIgfSA9IGhvb2tzO1xuXG5jb25zdCBST09UX1NUWUxFID0ge1xuICBkaXNwbGF5OiAnZmxleCcsXG5cbiAgJyYgLndlYmNoYXRfX3RvYXN0X190ZXh0Jzoge1xuICAgIGZsZXg6IDFcbiAgfVxufTtcblxuY29uc3QgQmFzaWNUb2FzdCA9ICh7IG5vdGlmaWNhdGlvbjogeyBhbHQsIGlkLCBsZXZlbCwgbWVzc2FnZSA9ICcnIH0gfSkgPT4ge1xuICBjb25zdCBbeyB0b2FzdDogdG9hc3RTdHlsZVNldCB9XSA9IHVzZVN0eWxlU2V0KCk7XG4gIGNvbnN0IGNvbnRlbnRJZCA9IHVzZU1lbW8oKCkgPT4gYHdlYmNoYXRfX3RvYXN0X18ke3JhbmRvbUlkKCl9YCwgW10pO1xuICBjb25zdCBsb2NhbGl6ZSA9IHVzZUxvY2FsaXplcigpO1xuICBjb25zdCBkaXNtaXNzTm90aWZpY2F0aW9uID0gdXNlRGlzbWlzc05vdGlmaWNhdGlvbigpO1xuICBjb25zdCByZW5kZXJNYXJrZG93bklubGluZSA9IHVzZUludGVybmFsUmVuZGVyTWFya2Rvd25JbmxpbmUoKTtcbiAgY29uc3Qgcm9vdENsYXNzTmFtZSA9IHVzZVN0eWxlVG9FbW90aW9uT2JqZWN0KCkoUk9PVF9TVFlMRSkgKyAnJztcblxuICBjb25zdCBoYW5kbGVEaXNtaXNzID0gdXNlQ2FsbGJhY2soKCkgPT4gZGlzbWlzc05vdGlmaWNhdGlvbihpZCksIFtkaXNtaXNzTm90aWZpY2F0aW9uLCBpZF0pO1xuICBjb25zdCBodG1sID0gdXNlTWVtbygoKSA9PiAoeyBfX2h0bWw6IHJlbmRlck1hcmtkb3duSW5saW5lKG1lc3NhZ2UpIH0pLCBbbWVzc2FnZSwgcmVuZGVyTWFya2Rvd25JbmxpbmVdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGFyaWEtZGVzY3JpYmVkYnk9e2NvbnRlbnRJZH1cbiAgICAgIGFyaWEtbGFiZWw9e2xvY2FsaXplKCdUT0FTVF9USVRMRV9BTFQnKX1cbiAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbiAgICAgICAgJ3dlYmNoYXRfX3RvYXN0JyxcbiAgICAgICAge1xuICAgICAgICAgICd3ZWJjaGF0X190b2FzdC0tZXJyb3InOiBsZXZlbCA9PT0gJ2Vycm9yJyxcbiAgICAgICAgICAnd2ViY2hhdF9fdG9hc3QtLWluZm8nOiBsZXZlbCA9PT0gJ2luZm8nLFxuICAgICAgICAgICd3ZWJjaGF0X190b2FzdC0tc3VjY2Vzcyc6IGxldmVsID09PSAnc3VjY2VzcycsXG4gICAgICAgICAgJ3dlYmNoYXRfX3RvYXN0LS13YXJuJzogbGV2ZWwgPT09ICd3YXJuJ1xuICAgICAgICB9LFxuICAgICAgICByb290Q2xhc3NOYW1lLFxuICAgICAgICB0b2FzdFN0eWxlU2V0ICsgJydcbiAgICAgICl9XG4gICAgICByb2xlPVwiZGlhbG9nXCJcbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIndlYmNoYXRfX3RvYXN0X19pY29uQm94XCI+XG4gICAgICAgIDxOb3RpZmljYXRpb25JY29uIGNsYXNzTmFtZT1cIndlYmNoYXRfX3RvYXN0X19pY29uXCIgbGV2ZWw9e2xldmVsfSAvPlxuICAgICAgPC9kaXY+XG4gICAgICB7ISFhbHQgJiYgPFNjcmVlblJlYWRlclRleHQgdGV4dD17YWx0fSAvPn1cbiAgICAgIDxkaXYgYXJpYS1oaWRkZW49eyEhYWx0fSBjbGFzc05hbWU9XCJ3ZWJjaGF0X190b2FzdF9fdGV4dFwiIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXtodG1sfSBpZD17Y29udGVudElkfSAvPlxuICAgICAgPGJ1dHRvblxuICAgICAgICBhcmlhLWxhYmVsPXtsb2NhbGl6ZSgnVE9BU1RfRElTTUlTU19CVVRUT04nKX1cbiAgICAgICAgY2xhc3NOYW1lPVwid2ViY2hhdF9fdG9hc3RfX2Rpc21pc3NCdXR0b25cIlxuICAgICAgICBvbkNsaWNrPXtoYW5kbGVEaXNtaXNzfVxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgID5cbiAgICAgICAgPGRpdiBhcmlhLWhpZGRlbj17dHJ1ZX0gY2xhc3NOYW1lPVwid2ViY2hhdF9fdG9hc3RfX2Rpc21pc3NCdXR0b25Gb2N1c1wiPlxuICAgICAgICAgIDxEaXNtaXNzSWNvbiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuQmFzaWNUb2FzdC5wcm9wVHlwZXMgPSB7XG4gIG5vdGlmaWNhdGlvbjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBhbHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgaWQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBsZXZlbDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIG1lc3NhZ2U6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBCYXNpY1RvYXN0O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFRQSxz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