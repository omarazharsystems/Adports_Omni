"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.connectSuggestedAction = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _AccessibleButton = _interopRequireDefault(require("../Utils/AccessibleButton"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _useFocus = _interopRequireDefault(require("../hooks/useFocus"));

var _useFocusAccessKeyEffect = _interopRequireDefault(require("../Utils/AccessKeySink/useFocusAccessKeyEffect"));

var _useFocusVisible3 = _interopRequireDefault(require("../hooks/internal/useFocusVisible"));

var _useItemRef = _interopRequireDefault(require("../providers/RovingTabIndex/useItemRef"));

var _useLocalizeAccessKey = _interopRequireDefault(require("../hooks/internal/useLocalizeAccessKey"));

var _useScrollToEnd = _interopRequireDefault(require("../hooks/useScrollToEnd"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("../hooks/internal/useStyleToEmotionObject"));

var _useSuggestedActionsAccessKey = _interopRequireDefault(require("../hooks/internal/useSuggestedActionsAccessKey"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDirection = _botframeworkWebchatApi.hooks.useDirection,
    useDisabled = _botframeworkWebchatApi.hooks.useDisabled,
    usePerformCardAction = _botframeworkWebchatApi.hooks.usePerformCardAction,
    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions,
    useSuggestedActions = _botframeworkWebchatApi.hooks.useSuggestedActions;
var ROOT_STYLE = {
  '&.webchat__suggested-action': {
    display: 'flex',
    overflow: 'hidden' // Prevent image from leaking; object-fit does not work with IE11

  }
};

var connectSuggestedAction = function connectSuggestedAction() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return _connectToWebChat.default.apply(void 0, [function (_ref, _ref2) {
    var clearSuggestedActions = _ref.clearSuggestedActions,
        disabled = _ref.disabled,
        language = _ref.language,
        onCardAction = _ref.onCardAction;
    var displayText = _ref2.displayText,
        text = _ref2.text,
        type = _ref2.type,
        value = _ref2.value;
    return {
      click: function click() {
        onCardAction({
          displayText: displayText,
          text: text,
          type: type,
          value: value
        });
        type === 'openUrl' && clearSuggestedActions();
      },
      disabled: disabled,
      language: language
    };
  }].concat(selectors));
};

exports.connectSuggestedAction = connectSuggestedAction;

var SuggestedAction = function SuggestedAction(_ref3) {
  var buttonText = _ref3.buttonText,
      className = _ref3.className,
      displayText = _ref3.displayText,
      image = _ref3.image,
      imageAlt = _ref3.imageAlt,
      itemIndex = _ref3.itemIndex,
      text = _ref3.text,
      textClassName = _ref3.textClassName,
      type = _ref3.type,
      value = _ref3.value;

  var _useSuggestedActions = useSuggestedActions(),
      _useSuggestedActions2 = _slicedToArray(_useSuggestedActions, 2),
      _ = _useSuggestedActions2[0],
      setSuggestedActions = _useSuggestedActions2[1];

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      suggestedActionsStackedLayoutButtonTextWrap = _useStyleOptions2[0].suggestedActionsStackedLayoutButtonTextWrap;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      suggestedActionStyleSet = _useStyleSet2[0].suggestedAction;

  var _useSuggestedActionsA = (0, _useSuggestedActionsAccessKey.default)(),
      _useSuggestedActionsA2 = _slicedToArray(_useSuggestedActionsA, 1),
      accessKey = _useSuggestedActionsA2[0];

  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var _useDisabled = useDisabled(),
      _useDisabled2 = _slicedToArray(_useDisabled, 1),
      disabled = _useDisabled2[0];

  var focus = (0, _useFocus.default)();
  var focusRef = (0, _useItemRef.default)(itemIndex);
  var localizeAccessKeyAsAriaKeyShortcuts = (0, _useLocalizeAccessKey.default)('aria-keyshortcuts');
  var performCardAction = usePerformCardAction();
  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';
  var scrollToEnd = (0, _useScrollToEnd.default)();

  var _useFocusVisible = (0, _useFocusVisible3.default)(focusRef),
      _useFocusVisible2 = _slicedToArray(_useFocusVisible, 1),
      focusVisible = _useFocusVisible2[0];

  var handleClick = (0, _react.useCallback)(function (_ref4) {
    var target = _ref4.target;
    // TODO: [P3] #XXX We should not destruct DirectLineCardAction into React props and pass them in. It makes typings difficult.
    //       Instead, we should pass a "cardAction" props.
    performCardAction({
      displayText: displayText,
      text: text,
      type: type,
      value: value
    }, {
      target: target
    }); // Since "openUrl" action do not submit, the suggested action buttons do not hide after click.

    type === 'openUrl' && setSuggestedActions([]);
    focus('sendBoxWithoutKeyboard');
    scrollToEnd();
  }, [displayText, focus, performCardAction, scrollToEnd, setSuggestedActions, text, type, value]);
  (0, _useFocusAccessKeyEffect.default)(accessKey, focusRef);
  return /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, _extends({}, accessKey ? {
    'aria-keyshortcuts': localizeAccessKeyAsAriaKeyShortcuts(accessKey)
  } : {}, {
    className: (0, _classnames.default)('webchat__suggested-action', {
      'webchat__suggested-action--focus-visible': focusVisible,
      'webchat__suggested-action--rtl': direction === 'rtl',
      'webchat__suggested-action--wrapping': suggestedActionsStackedLayoutButtonTextWrap
    }, rootClassName, suggestedActionStyleSet + '', (className || '') + ''),
    disabled: disabled,
    onClick: handleClick,
    ref: focusRef,
    type: "button"
  }), image && /*#__PURE__*/_react.default.createElement("img", {
    alt: imageAlt,
    className: (0, _classnames.default)('webchat__suggested-action__image', direction === 'rtl' && 'webchat__suggested-action__image--rtl'),
    src: image
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: (0, _classnames.default)('webchat__suggested-action__text', (textClassName || '') + '')
  }, buttonText), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__suggested-action__keyboard-focus-indicator"
  }));
};

SuggestedAction.defaultProps = {
  className: '',
  displayText: '',
  image: '',
  imageAlt: undefined,
  text: '',
  textClassName: '',
  type: undefined,
  value: undefined
};
SuggestedAction.propTypes = {
  buttonText: _propTypes.default.string.isRequired,
  className: _propTypes.default.string,
  displayText: _propTypes.default.string,
  image: _propTypes.default.string,
  imageAlt: _propTypes.default.string,
  itemIndex: _propTypes.default.number.isRequired,
  text: _propTypes.default.string,
  textClassName: _propTypes.default.string,
  // TypeScript class is not mappable to PropTypes.
  // @ts-ignore
  type: _propTypes.default.string,
  value: _propTypes.default.any
};
var _default = SuggestedAction;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,