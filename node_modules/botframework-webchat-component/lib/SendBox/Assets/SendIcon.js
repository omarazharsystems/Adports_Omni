"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _useStyleToEmotionObject = _interopRequireDefault(require("../../hooks/internal/useStyleToEmotionObject"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDirection = _botframeworkWebchatApi.hooks.useDirection;
var ROOT_STYLE = {
  '&.webchat__send-icon': {
    '&.webchat__send-icon--rtl': {
      transform: 'scale(-1, 1)'
    }
  }
};

var SendIcon = function SendIcon() {
  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';
  return /*#__PURE__*/_react.default.createElement("svg", {
    className: (0, _classnames.default)('webchat__send-icon', {
      'webchat__send-icon--rtl': direction === 'rtl'
    }, rootClassName),
    height: 28,
    viewBox: "0 0 45.7 33.8",
    width: 28
  }, /*#__PURE__*/_react.default.createElement("path", {
    clipRule: "evenodd",
    d: "M8.55 25.25l21.67-7.25H11zm2.41-9.47h19.26l-21.67-7.23zm-6 13l4-11.9L5 5l35.7 11.9z"
  }));
};

var _default = SendIcon;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VEaXJlY3Rpb24iLCJob29rcyIsIlJPT1RfU1RZTEUiLCJ0cmFuc2Zvcm0iLCJTZW5kSWNvbiIsImRpcmVjdGlvbiIsInJvb3RDbGFzc05hbWUiLCJ1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCIsImNsYXNzTmFtZXMiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9TZW5kQm94L0Fzc2V0cy9TZW5kSWNvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCBmcm9tICcuLi8uLi9ob29rcy9pbnRlcm5hbC91c2VTdHlsZVRvRW1vdGlvbk9iamVjdCc7XG5cbmNvbnN0IHsgdXNlRGlyZWN0aW9uIH0gPSBob29rcztcblxuY29uc3QgUk9PVF9TVFlMRSA9IHtcbiAgJyYud2ViY2hhdF9fc2VuZC1pY29uJzoge1xuICAgICcmLndlYmNoYXRfX3NlbmQtaWNvbi0tcnRsJzoge1xuICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLTEsIDEpJ1xuICAgIH1cbiAgfVxufTtcblxuY29uc3QgU2VuZEljb24gPSAoKSA9PiB7XG4gIGNvbnN0IFtkaXJlY3Rpb25dID0gdXNlRGlyZWN0aW9uKCk7XG4gIGNvbnN0IHJvb3RDbGFzc05hbWUgPSB1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCgpKFJPT1RfU1RZTEUpICsgJyc7XG5cbiAgcmV0dXJuIChcbiAgICA8c3ZnXG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3dlYmNoYXRfX3NlbmQtaWNvbicsIHsgJ3dlYmNoYXRfX3NlbmQtaWNvbi0tcnRsJzogZGlyZWN0aW9uID09PSAncnRsJyB9LCByb290Q2xhc3NOYW1lKX1cbiAgICAgIGhlaWdodD17Mjh9XG4gICAgICB2aWV3Qm94PVwiMCAwIDQ1LjcgMzMuOFwiXG4gICAgICB3aWR0aD17Mjh9XG4gICAgPlxuICAgICAgPHBhdGhcbiAgICAgICAgY2xpcFJ1bGU9XCJldmVub2RkXCJcbiAgICAgICAgZD1cIk04LjU1IDI1LjI1bDIxLjY3LTcuMjVIMTF6bTIuNDEtOS40N2gxOS4yNmwtMjEuNjctNy4yM3ptLTYgMTNsNC0xMS45TDUgNWwzNS43IDExLjl6XCJcbiAgICAgIC8+XG4gICAgPC9zdmc+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTZW5kSWNvbjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBUUEsWUFBUixHQUF5QkMsNkJBQXpCLENBQVFELFlBQVI7QUFFQSxJQUFNRSxVQUFVLEdBQUc7RUFDakIsd0JBQXdCO0lBQ3RCLDZCQUE2QjtNQUMzQkMsU0FBUyxFQUFFO0lBRGdCO0VBRFA7QUFEUCxDQUFuQjs7QUFRQSxJQUFNQyxRQUFRLEdBQUcsU0FBWEEsUUFBVyxHQUFNO0VBQ3JCLG9CQUFvQkosWUFBWSxFQUFoQztFQUFBO0VBQUEsSUFBT0ssU0FBUDs7RUFDQSxJQUFNQyxhQUFhLEdBQUcsSUFBQUMsZ0NBQUEsSUFBMEJMLFVBQTFCLElBQXdDLEVBQTlEO0VBRUEsb0JBQ0U7SUFDRSxTQUFTLEVBQUUsSUFBQU0sbUJBQUEsRUFBVyxvQkFBWCxFQUFpQztNQUFFLDJCQUEyQkgsU0FBUyxLQUFLO0lBQTNDLENBQWpDLEVBQXFGQyxhQUFyRixDQURiO0lBRUUsTUFBTSxFQUFFLEVBRlY7SUFHRSxPQUFPLEVBQUMsZUFIVjtJQUlFLEtBQUssRUFBRTtFQUpULGdCQU1FO0lBQ0UsUUFBUSxFQUFDLFNBRFg7SUFFRSxDQUFDLEVBQUM7RUFGSixFQU5GLENBREY7QUFhRCxDQWpCRDs7ZUFtQmVGLFEifQ==