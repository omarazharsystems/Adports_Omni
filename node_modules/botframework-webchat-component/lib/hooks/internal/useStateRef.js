"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useStateRef;

var _react = require("react");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function useStateRef(initialValue) {
  var _useState = (0, _react.useState)(),
      _useState2 = _slicedToArray(_useState, 2),
      _ = _useState2[0],
      forceRender = _useState2[1];

  var valueRef = (0, _react.useRef)(initialValue);
  var setter = (0, _react.useCallback)(function (value) {
    var current = valueRef.current;
    value = value instanceof Function ? value(current) : value;

    if (current !== value) {
      valueRef.current = value;
      forceRender({});
    }
  }, [forceRender, valueRef]);
  return Object.freeze([valueRef.current, setter, valueRef]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VTdGF0ZVJlZiIsImluaXRpYWxWYWx1ZSIsInVzZVN0YXRlIiwiXyIsImZvcmNlUmVuZGVyIiwidmFsdWVSZWYiLCJ1c2VSZWYiLCJzZXR0ZXIiLCJ1c2VDYWxsYmFjayIsInZhbHVlIiwiY3VycmVudCIsIkZ1bmN0aW9uIiwiT2JqZWN0IiwiZnJlZXplIl0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvaG9va3MvaW50ZXJuYWwvdXNlU3RhdGVSZWYudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB0eXBlIHsgRGlzcGF0Y2gsIE11dGFibGVSZWZPYmplY3QsIFNldFN0YXRlQWN0aW9uIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VTdGF0ZVJlZjxUPihcbiAgaW5pdGlhbFZhbHVlPzogVFxuKTogcmVhZG9ubHkgW1QsIERpc3BhdGNoPFNldFN0YXRlQWN0aW9uPFQ+PiwgTXV0YWJsZVJlZk9iamVjdDxUPl0ge1xuICBjb25zdCBbXywgZm9yY2VSZW5kZXJdID0gdXNlU3RhdGU8e30+KCk7XG4gIGNvbnN0IHZhbHVlUmVmOiBNdXRhYmxlUmVmT2JqZWN0PFQ+ID0gdXNlUmVmPFQ+KGluaXRpYWxWYWx1ZSk7XG5cbiAgY29uc3Qgc2V0dGVyOiBEaXNwYXRjaDxTZXRTdGF0ZUFjdGlvbjxUPj4gPSB1c2VDYWxsYmFjayhcbiAgICAodmFsdWU6IFNldFN0YXRlQWN0aW9uPFQ+KSA9PiB7XG4gICAgICBjb25zdCB7IGN1cnJlbnQgfSA9IHZhbHVlUmVmO1xuXG4gICAgICB2YWx1ZSA9IHZhbHVlIGluc3RhbmNlb2YgRnVuY3Rpb24gPyB2YWx1ZShjdXJyZW50KSA6IHZhbHVlO1xuXG4gICAgICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHtcbiAgICAgICAgdmFsdWVSZWYuY3VycmVudCA9IHZhbHVlO1xuXG4gICAgICAgIGZvcmNlUmVuZGVyKHt9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFtmb3JjZVJlbmRlciwgdmFsdWVSZWZdXG4gICk7XG5cbiAgcmV0dXJuIE9iamVjdC5mcmVlemUoW3ZhbHVlUmVmLmN1cnJlbnQsIHNldHRlciwgdmFsdWVSZWZdKSBhcyByZWFkb25seSBbXG4gICAgVCxcbiAgICBEaXNwYXRjaDxTZXRTdGF0ZUFjdGlvbjxUPj4sXG4gICAgTXV0YWJsZVJlZk9iamVjdDxUPlxuICBdO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7O0FBSWUsU0FBU0EsV0FBVCxDQUNiQyxZQURhLEVBRW1EO0VBQ2hFLGdCQUF5QixJQUFBQyxlQUFBLEdBQXpCO0VBQUE7RUFBQSxJQUFPQyxDQUFQO0VBQUEsSUFBVUMsV0FBVjs7RUFDQSxJQUFNQyxRQUE2QixHQUFHLElBQUFDLGFBQUEsRUFBVUwsWUFBVixDQUF0QztFQUVBLElBQU1NLE1BQW1DLEdBQUcsSUFBQUMsa0JBQUEsRUFDMUMsVUFBQ0MsS0FBRCxFQUE4QjtJQUM1QixJQUFRQyxPQUFSLEdBQW9CTCxRQUFwQixDQUFRSyxPQUFSO0lBRUFELEtBQUssR0FBR0EsS0FBSyxZQUFZRSxRQUFqQixHQUE0QkYsS0FBSyxDQUFDQyxPQUFELENBQWpDLEdBQTZDRCxLQUFyRDs7SUFFQSxJQUFJQyxPQUFPLEtBQUtELEtBQWhCLEVBQXVCO01BQ3JCSixRQUFRLENBQUNLLE9BQVQsR0FBbUJELEtBQW5CO01BRUFMLFdBQVcsQ0FBQyxFQUFELENBQVg7SUFDRDtFQUNGLENBWHlDLEVBWTFDLENBQUNBLFdBQUQsRUFBY0MsUUFBZCxDQVowQyxDQUE1QztFQWVBLE9BQU9PLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLENBQUNSLFFBQVEsQ0FBQ0ssT0FBVixFQUFtQkgsTUFBbkIsRUFBMkJGLFFBQTNCLENBQWQsQ0FBUDtBQUtEIn0=