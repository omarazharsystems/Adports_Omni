"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useObserveScrollPosition;

var _react = require("react");

var _useWebChatUIContext2 = _interopRequireDefault(require("./internal/useWebChatUIContext"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function useObserveScrollPosition(observer, deps) {
  if (typeof observer !== 'function') {
    observer = undefined;
    console.warn('botframework-webchat: First argument passed to "useObserveScrollPosition" must be a function.');
  } else if (typeof deps !== 'undefined' && !Array.isArray(deps)) {
    console.warn('botframework-webchat: Second argument passed to "useObserveScrollPosition" must be an array if specified.');
  }

  var _useWebChatUIContext = (0, _useWebChatUIContext2.default)(),
      observeScrollPosition = _useWebChatUIContext.observeScrollPosition;
  /* eslint-disable-next-line react-hooks/exhaustive-deps */


  (0, _react.useEffect)(function () {
    return observer && observeScrollPosition(observer);
  }, [].concat(_toConsumableArray(deps || []), [observer, observeScrollPosition]));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VPYnNlcnZlU2Nyb2xsUG9zaXRpb24iLCJvYnNlcnZlciIsImRlcHMiLCJ1bmRlZmluZWQiLCJjb25zb2xlIiwid2FybiIsIkFycmF5IiwiaXNBcnJheSIsInVzZVdlYkNoYXRVSUNvbnRleHQiLCJvYnNlcnZlU2Nyb2xsUG9zaXRpb24iLCJ1c2VFZmZlY3QiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VPYnNlcnZlU2Nyb2xsUG9zaXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgU2Nyb2xsUG9zaXRpb24gZnJvbSAnLi4vdHlwZXMvU2Nyb2xsUG9zaXRpb24nO1xuaW1wb3J0IHVzZVdlYkNoYXRVSUNvbnRleHQgZnJvbSAnLi9pbnRlcm5hbC91c2VXZWJDaGF0VUlDb250ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlT2JzZXJ2ZVNjcm9sbFBvc2l0aW9uKFxuICBvYnNlcnZlcjogKHNjcm9sbFBvc2l0aW9uOiBTY3JvbGxQb3NpdGlvbikgPT4gdm9pZCxcbiAgZGVwczogYW55W11cbik6IHZvaWQge1xuICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgb2JzZXJ2ZXIgPSB1bmRlZmluZWQ7XG4gICAgY29uc29sZS53YXJuKCdib3RmcmFtZXdvcmstd2ViY2hhdDogRmlyc3QgYXJndW1lbnQgcGFzc2VkIHRvIFwidXNlT2JzZXJ2ZVNjcm9sbFBvc2l0aW9uXCIgbXVzdCBiZSBhIGZ1bmN0aW9uLicpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBkZXBzICE9PSAndW5kZWZpbmVkJyAmJiAhQXJyYXkuaXNBcnJheShkZXBzKSkge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdib3RmcmFtZXdvcmstd2ViY2hhdDogU2Vjb25kIGFyZ3VtZW50IHBhc3NlZCB0byBcInVzZU9ic2VydmVTY3JvbGxQb3NpdGlvblwiIG11c3QgYmUgYW4gYXJyYXkgaWYgc3BlY2lmaWVkLidcbiAgICApO1xuICB9XG5cbiAgY29uc3QgeyBvYnNlcnZlU2Nyb2xsUG9zaXRpb24gfSA9IHVzZVdlYkNoYXRVSUNvbnRleHQoKTtcblxuICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXG4gIHVzZUVmZmVjdCgoKSA9PiBvYnNlcnZlciAmJiBvYnNlcnZlU2Nyb2xsUG9zaXRpb24ob2JzZXJ2ZXIpLCBbLi4uKGRlcHMgfHwgW10pLCBvYnNlcnZlciwgb2JzZXJ2ZVNjcm9sbFBvc2l0aW9uXSk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVlLFNBQVNBLHdCQUFULENBQ2JDLFFBRGEsRUFFYkMsSUFGYSxFQUdQO0VBQ04sSUFBSSxPQUFPRCxRQUFQLEtBQW9CLFVBQXhCLEVBQW9DO0lBQ2xDQSxRQUFRLEdBQUdFLFNBQVg7SUFDQUMsT0FBTyxDQUFDQyxJQUFSLENBQWEsK0ZBQWI7RUFDRCxDQUhELE1BR08sSUFBSSxPQUFPSCxJQUFQLEtBQWdCLFdBQWhCLElBQStCLENBQUNJLEtBQUssQ0FBQ0MsT0FBTixDQUFjTCxJQUFkLENBQXBDLEVBQXlEO0lBQzlERSxPQUFPLENBQUNDLElBQVIsQ0FDRSwyR0FERjtFQUdEOztFQUVELDJCQUFrQyxJQUFBRyw2QkFBQSxHQUFsQztFQUFBLElBQVFDLHFCQUFSLHdCQUFRQSxxQkFBUjtFQUVBOzs7RUFDQSxJQUFBQyxnQkFBQSxFQUFVO0lBQUEsT0FBTVQsUUFBUSxJQUFJUSxxQkFBcUIsQ0FBQ1IsUUFBRCxDQUF2QztFQUFBLENBQVYsK0JBQWtFQyxJQUFJLElBQUksRUFBMUUsSUFBK0VELFFBQS9FLEVBQXlGUSxxQkFBekY7QUFDRCJ9