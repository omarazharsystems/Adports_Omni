"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _BasicWebChat = _interopRequireDefault(require("./BasicWebChat"));

var _Composer = _interopRequireDefault(require("./Composer"));

var _excluded = ["className", "role"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// Please keep this file as simple as possible. This is for setting up the surface (a.k.a. <Composer>) and <BasicWebChat> only.
// Web developers may choose to put things before/after <BasicWebChat> while still inside the surface.
// For example,
// - They can hide our default send box and built their own using hooks
// - They can run hooks outside of activity/attachment middleware
//   - They will put <Composer> as very top of their page, and allow buttons on their existing page to send message to bot
// Subset of landmark roles: https://w3.org/TR/wai-aria/#landmark_roles
var ARIA_LANDMARK_ROLES = ['complementary', 'contentinfo', 'form', 'main', 'region'];

var ReactWebChat = function ReactWebChat(_ref) {
  var className = _ref.className,
      role = _ref.role,
      composerProps = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/_react.default.createElement(_Composer.default, composerProps, /*#__PURE__*/_react.default.createElement(_BasicWebChat.default, {
    className: className,
    role: role
  }));
};

ReactWebChat.defaultProps = _objectSpread({
  className: undefined,
  role: undefined
}, _Composer.default.defaultProps);

var _Composer$propTypes = _Composer.default.propTypes,
    _ = _Composer$propTypes.children,
    composerPropTypesWithoutChildren = _objectWithoutProperties(_Composer$propTypes, ["children"]);

ReactWebChat.propTypes = _objectSpread({
  className: _propTypes.default.string,
  // Ignoring deficiencies with TypeScript/PropTypes inference.
  // @ts-ignore
  role: _propTypes.default.oneOf(ARIA_LANDMARK_ROLES)
}, composerPropTypesWithoutChildren);
var _default = ReactWebChat;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBUklBX0xBTkRNQVJLX1JPTEVTIiwiUmVhY3RXZWJDaGF0IiwiY2xhc3NOYW1lIiwicm9sZSIsImNvbXBvc2VyUHJvcHMiLCJkZWZhdWx0UHJvcHMiLCJ1bmRlZmluZWQiLCJDb21wb3NlciIsInByb3BUeXBlcyIsIl8iLCJjaGlsZHJlbiIsImNvbXBvc2VyUHJvcFR5cGVzV2l0aG91dENoaWxkcmVuIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwib25lT2YiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uL3NyYy9SZWFjdFdlYkNoYXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgVkZDIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgQmFzaWNXZWJDaGF0IGZyb20gJy4vQmFzaWNXZWJDaGF0JztcbmltcG9ydCBDb21wb3NlciwgeyBDb21wb3NlclByb3BzIH0gZnJvbSAnLi9Db21wb3Nlcic7XG5cbi8vIFBsZWFzZSBrZWVwIHRoaXMgZmlsZSBhcyBzaW1wbGUgYXMgcG9zc2libGUuIFRoaXMgaXMgZm9yIHNldHRpbmcgdXAgdGhlIHN1cmZhY2UgKGEuay5hLiA8Q29tcG9zZXI+KSBhbmQgPEJhc2ljV2ViQ2hhdD4gb25seS5cblxuLy8gV2ViIGRldmVsb3BlcnMgbWF5IGNob29zZSB0byBwdXQgdGhpbmdzIGJlZm9yZS9hZnRlciA8QmFzaWNXZWJDaGF0PiB3aGlsZSBzdGlsbCBpbnNpZGUgdGhlIHN1cmZhY2UuXG4vLyBGb3IgZXhhbXBsZSxcbi8vIC0gVGhleSBjYW4gaGlkZSBvdXIgZGVmYXVsdCBzZW5kIGJveCBhbmQgYnVpbHQgdGhlaXIgb3duIHVzaW5nIGhvb2tzXG4vLyAtIFRoZXkgY2FuIHJ1biBob29rcyBvdXRzaWRlIG9mIGFjdGl2aXR5L2F0dGFjaG1lbnQgbWlkZGxld2FyZVxuLy8gICAtIFRoZXkgd2lsbCBwdXQgPENvbXBvc2VyPiBhcyB2ZXJ5IHRvcCBvZiB0aGVpciBwYWdlLCBhbmQgYWxsb3cgYnV0dG9ucyBvbiB0aGVpciBleGlzdGluZyBwYWdlIHRvIHNlbmQgbWVzc2FnZSB0byBib3RcblxuLy8gU3Vic2V0IG9mIGxhbmRtYXJrIHJvbGVzOiBodHRwczovL3czLm9yZy9UUi93YWktYXJpYS8jbGFuZG1hcmtfcm9sZXNcbmNvbnN0IEFSSUFfTEFORE1BUktfUk9MRVMgPSBbJ2NvbXBsZW1lbnRhcnknLCAnY29udGVudGluZm8nLCAnZm9ybScsICdtYWluJywgJ3JlZ2lvbiddO1xuXG50eXBlIFJlYWN0V2ViQ2hhdFByb3BzID0gT21pdDxDb21wb3NlclByb3BzLCAnY2hpbGRyZW4nPiAmIHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICByb2xlPzogJ2NvbXBsZW1lbnRhcnknIHwgJ2NvbnRlbnRpbmZvJyB8ICdmb3JtJyB8ICdtYWluJyB8ICdyZWdpb24nO1xufTtcblxuY29uc3QgUmVhY3RXZWJDaGF0OiBWRkM8UmVhY3RXZWJDaGF0UHJvcHM+ID0gKHsgY2xhc3NOYW1lLCByb2xlLCAuLi5jb21wb3NlclByb3BzIH0pID0+IChcbiAgPENvbXBvc2VyIHsuLi5jb21wb3NlclByb3BzfT5cbiAgICA8QmFzaWNXZWJDaGF0IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSByb2xlPXtyb2xlfSAvPlxuICA8L0NvbXBvc2VyPlxuKTtcblxuUmVhY3RXZWJDaGF0LmRlZmF1bHRQcm9wcyA9IHtcbiAgY2xhc3NOYW1lOiB1bmRlZmluZWQsXG4gIHJvbGU6IHVuZGVmaW5lZCxcbiAgLi4uQ29tcG9zZXIuZGVmYXVsdFByb3BzXG59O1xuXG5jb25zdCB7XG4gIC8vIEV4Y2x1ZGluZyBcImNoaWxkcmVuXCIgZnJvbSBDb21wb3NlclByb3BzLlxuICBjaGlsZHJlbjogXyxcbiAgLi4uY29tcG9zZXJQcm9wVHlwZXNXaXRob3V0Q2hpbGRyZW5cbn0gPSBDb21wb3Nlci5wcm9wVHlwZXM7XG5cblJlYWN0V2ViQ2hhdC5wcm9wVHlwZXMgPSB7XG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgLy8gSWdub3JpbmcgZGVmaWNpZW5jaWVzIHdpdGggVHlwZVNjcmlwdC9Qcm9wVHlwZXMgaW5mZXJlbmNlLlxuICAvLyBAdHMtaWdub3JlXG4gIHJvbGU6IFByb3BUeXBlcy5vbmVPZihBUklBX0xBTkRNQVJLX1JPTEVTKSxcbiAgLi4uY29tcG9zZXJQcm9wVHlwZXNXaXRob3V0Q2hpbGRyZW5cbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0V2ViQ2hhdDtcblxuZXhwb3J0IHR5cGUgeyBSZWFjdFdlYkNoYXRQcm9wcyB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBLElBQU1BLG1CQUFtQixHQUFHLENBQUMsZUFBRCxFQUFrQixhQUFsQixFQUFpQyxNQUFqQyxFQUF5QyxNQUF6QyxFQUFpRCxRQUFqRCxDQUE1Qjs7QUFPQSxJQUFNQyxZQUFvQyxHQUFHLFNBQXZDQSxZQUF1QztFQUFBLElBQUdDLFNBQUgsUUFBR0EsU0FBSDtFQUFBLElBQWNDLElBQWQsUUFBY0EsSUFBZDtFQUFBLElBQXVCQyxhQUF2Qjs7RUFBQSxvQkFDM0MsNkJBQUMsaUJBQUQsRUFBY0EsYUFBZCxlQUNFLDZCQUFDLHFCQUFEO0lBQWMsU0FBUyxFQUFFRixTQUF6QjtJQUFvQyxJQUFJLEVBQUVDO0VBQTFDLEVBREYsQ0FEMkM7QUFBQSxDQUE3Qzs7QUFNQUYsWUFBWSxDQUFDSSxZQUFiO0VBQ0VILFNBQVMsRUFBRUksU0FEYjtFQUVFSCxJQUFJLEVBQUVHO0FBRlIsR0FHS0MsaUJBQUEsQ0FBU0YsWUFIZDs7QUFNQSwwQkFJSUUsaUJBQUEsQ0FBU0MsU0FKYjtBQUFBLElBRVlDLENBRlosdUJBRUVDLFFBRkY7QUFBQSxJQUdLQyxnQ0FITDs7QUFNQVYsWUFBWSxDQUFDTyxTQUFiO0VBQ0VOLFNBQVMsRUFBRVUsa0JBQUEsQ0FBVUMsTUFEdkI7RUFFRTtFQUNBO0VBQ0FWLElBQUksRUFBRVMsa0JBQUEsQ0FBVUUsS0FBVixDQUFnQmQsbUJBQWhCO0FBSlIsR0FLS1csZ0NBTEw7ZUFRZVYsWSJ9