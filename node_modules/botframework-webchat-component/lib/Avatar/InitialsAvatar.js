"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("../hooks/internal/useStyleToEmotionObject"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useAvatarForBot = _botframeworkWebchatApi.hooks.useAvatarForBot,
    useAvatarForUser = _botframeworkWebchatApi.hooks.useAvatarForUser;
var ROOT_STYLE = {
  alignItems: 'center',
  display: 'flex',
  '& .webchat__initialsAvatar__initials': {
    justifyContent: 'center'
  }
};

var InitialsAvatar = function InitialsAvatar(_ref) {
  var fromUser = _ref.fromUser;

  var _useAvatarForBot = useAvatarForBot(),
      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),
      avatarInitialsForBot = _useAvatarForBot2[0].initials;

  var _useAvatarForUser = useAvatarForUser(),
      _useAvatarForUser2 = _slicedToArray(_useAvatarForUser, 1),
      avatarInitialsForUser = _useAvatarForUser2[0].initials;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      initialsAvatarStyleSet = _useStyleSet2[0].initialsAvatar;

  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('webchat__initialsAvatar', {
      'webchat__initialsAvatar--fromUser': fromUser
    }, rootClassName, initialsAvatarStyleSet + '')
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__initialsAvatar__initials"
  }, fromUser ? avatarInitialsForUser : avatarInitialsForBot));
};

InitialsAvatar.defaultProps = {
  fromUser: false
};
InitialsAvatar.propTypes = {
  fromUser: _propTypes.default.bool
};
var _default = InitialsAvatar;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VBdmF0YXJGb3JCb3QiLCJob29rcyIsInVzZUF2YXRhckZvclVzZXIiLCJST09UX1NUWUxFIiwiYWxpZ25JdGVtcyIsImRpc3BsYXkiLCJqdXN0aWZ5Q29udGVudCIsIkluaXRpYWxzQXZhdGFyIiwiZnJvbVVzZXIiLCJhdmF0YXJJbml0aWFsc0ZvckJvdCIsImluaXRpYWxzIiwiYXZhdGFySW5pdGlhbHNGb3JVc2VyIiwidXNlU3R5bGVTZXQiLCJpbml0aWFsc0F2YXRhclN0eWxlU2V0IiwiaW5pdGlhbHNBdmF0YXIiLCJyb290Q2xhc3NOYW1lIiwidXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QiLCJjbGFzc05hbWVzIiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYm9vbCJdLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0F2YXRhci9Jbml0aWFsc0F2YXRhci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgdXNlU3R5bGVTZXQgZnJvbSAnLi4vaG9va3MvdXNlU3R5bGVTZXQnO1xuaW1wb3J0IHVzZVN0eWxlVG9FbW90aW9uT2JqZWN0IGZyb20gJy4uL2hvb2tzL2ludGVybmFsL3VzZVN0eWxlVG9FbW90aW9uT2JqZWN0JztcblxuY29uc3QgeyB1c2VBdmF0YXJGb3JCb3QsIHVzZUF2YXRhckZvclVzZXIgfSA9IGhvb2tzO1xuXG5jb25zdCBST09UX1NUWUxFID0ge1xuICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgZGlzcGxheTogJ2ZsZXgnLFxuXG4gICcmIC53ZWJjaGF0X19pbml0aWFsc0F2YXRhcl9faW5pdGlhbHMnOiB7XG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInXG4gIH1cbn07XG5cbmNvbnN0IEluaXRpYWxzQXZhdGFyID0gKHsgZnJvbVVzZXIgfSkgPT4ge1xuICBjb25zdCBbeyBpbml0aWFsczogYXZhdGFySW5pdGlhbHNGb3JCb3QgfV0gPSB1c2VBdmF0YXJGb3JCb3QoKTtcbiAgY29uc3QgW3sgaW5pdGlhbHM6IGF2YXRhckluaXRpYWxzRm9yVXNlciB9XSA9IHVzZUF2YXRhckZvclVzZXIoKTtcbiAgY29uc3QgW3sgaW5pdGlhbHNBdmF0YXI6IGluaXRpYWxzQXZhdGFyU3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuICBjb25zdCByb290Q2xhc3NOYW1lID0gdXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QoKShST09UX1NUWUxFKSArICcnO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAnd2ViY2hhdF9faW5pdGlhbHNBdmF0YXInLFxuICAgICAgICB7XG4gICAgICAgICAgJ3dlYmNoYXRfX2luaXRpYWxzQXZhdGFyLS1mcm9tVXNlcic6IGZyb21Vc2VyXG4gICAgICAgIH0sXG4gICAgICAgIHJvb3RDbGFzc05hbWUsXG4gICAgICAgIGluaXRpYWxzQXZhdGFyU3R5bGVTZXQgKyAnJ1xuICAgICAgKX1cbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIndlYmNoYXRfX2luaXRpYWxzQXZhdGFyX19pbml0aWFsc1wiPntmcm9tVXNlciA/IGF2YXRhckluaXRpYWxzRm9yVXNlciA6IGF2YXRhckluaXRpYWxzRm9yQm90fTwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuSW5pdGlhbHNBdmF0YXIuZGVmYXVsdFByb3BzID0ge1xuICBmcm9tVXNlcjogZmFsc2Vcbn07XG5cbkluaXRpYWxzQXZhdGFyLnByb3BUeXBlcyA9IHtcbiAgZnJvbVVzZXI6IFByb3BUeXBlcy5ib29sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBJbml0aWFsc0F2YXRhcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBUUEsZUFBUixHQUE4Q0MsNkJBQTlDLENBQVFELGVBQVI7QUFBQSxJQUF5QkUsZ0JBQXpCLEdBQThDRCw2QkFBOUMsQ0FBeUJDLGdCQUF6QjtBQUVBLElBQU1DLFVBQVUsR0FBRztFQUNqQkMsVUFBVSxFQUFFLFFBREs7RUFFakJDLE9BQU8sRUFBRSxNQUZRO0VBSWpCLHdDQUF3QztJQUN0Q0MsY0FBYyxFQUFFO0VBRHNCO0FBSnZCLENBQW5COztBQVNBLElBQU1DLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsT0FBa0I7RUFBQSxJQUFmQyxRQUFlLFFBQWZBLFFBQWU7O0VBQ3ZDLHVCQUE2Q1IsZUFBZSxFQUE1RDtFQUFBO0VBQUEsSUFBbUJTLG9CQUFuQix3QkFBU0MsUUFBVDs7RUFDQSx3QkFBOENSLGdCQUFnQixFQUE5RDtFQUFBO0VBQUEsSUFBbUJTLHFCQUFuQix5QkFBU0QsUUFBVDs7RUFDQSxtQkFBcUQsSUFBQUUscUJBQUEsR0FBckQ7RUFBQTtFQUFBLElBQXlCQyxzQkFBekIsb0JBQVNDLGNBQVQ7O0VBQ0EsSUFBTUMsYUFBYSxHQUFHLElBQUFDLGdDQUFBLElBQTBCYixVQUExQixJQUF3QyxFQUE5RDtFQUVBLG9CQUNFO0lBQ0UsU0FBUyxFQUFFLElBQUFjLG1CQUFBLEVBQ1QseUJBRFMsRUFFVDtNQUNFLHFDQUFxQ1Q7SUFEdkMsQ0FGUyxFQUtUTyxhQUxTLEVBTVRGLHNCQUFzQixHQUFHLEVBTmhCO0VBRGIsZ0JBVUU7SUFBSyxTQUFTLEVBQUM7RUFBZixHQUFvREwsUUFBUSxHQUFHRyxxQkFBSCxHQUEyQkYsb0JBQXZGLENBVkYsQ0FERjtBQWNELENBcEJEOztBQXNCQUYsY0FBYyxDQUFDVyxZQUFmLEdBQThCO0VBQzVCVixRQUFRLEVBQUU7QUFEa0IsQ0FBOUI7QUFJQUQsY0FBYyxDQUFDWSxTQUFmLEdBQTJCO0VBQ3pCWCxRQUFRLEVBQUVZLGtCQUFBLENBQVVDO0FBREssQ0FBM0I7ZUFJZWQsYyJ9