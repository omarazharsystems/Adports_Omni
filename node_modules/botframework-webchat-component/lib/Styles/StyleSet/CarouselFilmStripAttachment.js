"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CarouselFilmStripAttachment;

var _mirrorStyle = _interopRequireDefault(require("../mirrorStyle"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function CarouselFilmStripAttachment(_ref) {
  var avatarSize = _ref.avatarSize,
      bubbleMaxWidth = _ref.bubbleMaxWidth,
      bubbleMinWidth = _ref.bubbleMinWidth,
      paddingRegular = _ref.paddingRegular,
      transcriptVisualKeyboardIndicatorColor = _ref.transcriptVisualKeyboardIndicatorColor,
      transcriptVisualKeyboardIndicatorStyle = _ref.transcriptVisualKeyboardIndicatorStyle,
      transcriptVisualKeyboardIndicatorWidth = _ref.transcriptVisualKeyboardIndicatorWidth,
      transitionDuration = _ref.transitionDuration;
  return _objectSpread({
    '&.webchat__carousel-filmstrip-attachment': {
      minWidth: bubbleMinWidth,
      maxWidth: bubbleMaxWidth,
      transitionDuration: transitionDuration,
      transitionProperty: 'max-width, min-width',
      '&:focus': {
        outline: 0
      },
      '&:focus .webchat__carousel-filmstrip-attachment--focus': {
        borderColor: transcriptVisualKeyboardIndicatorColor,
        borderStyle: transcriptVisualKeyboardIndicatorStyle,
        borderWidth: transcriptVisualKeyboardIndicatorWidth,
        boxSizing: 'border-box',
        height: "calc(100% - ".concat(transcriptVisualKeyboardIndicatorWidth, "px)"),
        left: 0,
        pointerEvents: 'none',
        position: 'absolute',
        top: 0,
        width: "calc(100% - ".concat(transcriptVisualKeyboardIndicatorWidth, "px)")
      }
    }
  }, (0, _mirrorStyle.default)('&.webchat__carousel-filmstrip-attachment--rtl', {
    paddingLeft: paddingRegular,
    '&.webchat__carousel-filmstrip-attachment--hide-avatar, &.webchat__carousel-filmstrip-attachment--show-avatar': {
      '&:first-child': {
        paddingLeft: avatarSize + paddingRegular * 2
      }
    },
    '&.webchat__carousel-filmstrip-attachment--hide-nub, &.webchat__carousel-filmstrip-attachment--show-nub': {
      '&:not(.webchat__carousel-filmstrip-attachment--hide-avatar.webchat__carousel-filmstrip-attachment--show-avatar):first-child': {
        paddingLeft: paddingRegular * 2
      }
    }
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDYXJvdXNlbEZpbG1TdHJpcEF0dGFjaG1lbnQiLCJhdmF0YXJTaXplIiwiYnViYmxlTWF4V2lkdGgiLCJidWJibGVNaW5XaWR0aCIsInBhZGRpbmdSZWd1bGFyIiwidHJhbnNjcmlwdFZpc3VhbEtleWJvYXJkSW5kaWNhdG9yQ29sb3IiLCJ0cmFuc2NyaXB0VmlzdWFsS2V5Ym9hcmRJbmRpY2F0b3JTdHlsZSIsInRyYW5zY3JpcHRWaXN1YWxLZXlib2FyZEluZGljYXRvcldpZHRoIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwibWluV2lkdGgiLCJtYXhXaWR0aCIsInRyYW5zaXRpb25Qcm9wZXJ0eSIsIm91dGxpbmUiLCJib3JkZXJDb2xvciIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJib3hTaXppbmciLCJoZWlnaHQiLCJsZWZ0IiwicG9pbnRlckV2ZW50cyIsInBvc2l0aW9uIiwidG9wIiwid2lkdGgiLCJtaXJyb3JTdHlsZSIsInBhZGRpbmdMZWZ0Il0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvU3R5bGVzL1N0eWxlU2V0L0Nhcm91c2VsRmlsbVN0cmlwQXR0YWNobWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogW1wiZXJyb3JcIiwgeyBcImlnbm9yZVwiOiBbMl0gfV0gKi9cbmltcG9ydCB7IFN0cmljdFN0eWxlT3B0aW9ucyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5cbmltcG9ydCBtaXJyb3JTdHlsZSBmcm9tICcuLi9taXJyb3JTdHlsZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENhcm91c2VsRmlsbVN0cmlwQXR0YWNobWVudCh7XG4gIGF2YXRhclNpemUsXG4gIGJ1YmJsZU1heFdpZHRoLFxuICBidWJibGVNaW5XaWR0aCxcbiAgcGFkZGluZ1JlZ3VsYXIsXG4gIHRyYW5zY3JpcHRWaXN1YWxLZXlib2FyZEluZGljYXRvckNvbG9yLFxuICB0cmFuc2NyaXB0VmlzdWFsS2V5Ym9hcmRJbmRpY2F0b3JTdHlsZSxcbiAgdHJhbnNjcmlwdFZpc3VhbEtleWJvYXJkSW5kaWNhdG9yV2lkdGgsXG4gIHRyYW5zaXRpb25EdXJhdGlvblxufTogU3RyaWN0U3R5bGVPcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgJyYud2ViY2hhdF9fY2Fyb3VzZWwtZmlsbXN0cmlwLWF0dGFjaG1lbnQnOiB7XG4gICAgICBtaW5XaWR0aDogYnViYmxlTWluV2lkdGgsXG4gICAgICBtYXhXaWR0aDogYnViYmxlTWF4V2lkdGgsXG4gICAgICB0cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICdtYXgtd2lkdGgsIG1pbi13aWR0aCcsXG5cbiAgICAgICcmOmZvY3VzJzoge1xuICAgICAgICBvdXRsaW5lOiAwXG4gICAgICB9LFxuXG4gICAgICAnJjpmb2N1cyAud2ViY2hhdF9fY2Fyb3VzZWwtZmlsbXN0cmlwLWF0dGFjaG1lbnQtLWZvY3VzJzoge1xuICAgICAgICBib3JkZXJDb2xvcjogdHJhbnNjcmlwdFZpc3VhbEtleWJvYXJkSW5kaWNhdG9yQ29sb3IsXG4gICAgICAgIGJvcmRlclN0eWxlOiB0cmFuc2NyaXB0VmlzdWFsS2V5Ym9hcmRJbmRpY2F0b3JTdHlsZSxcbiAgICAgICAgYm9yZGVyV2lkdGg6IHRyYW5zY3JpcHRWaXN1YWxLZXlib2FyZEluZGljYXRvcldpZHRoLFxuICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgICAgaGVpZ2h0OiBgY2FsYygxMDAlIC0gJHt0cmFuc2NyaXB0VmlzdWFsS2V5Ym9hcmRJbmRpY2F0b3JXaWR0aH1weClgLFxuICAgICAgICBsZWZ0OiAwLFxuICAgICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXG4gICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICB0b3A6IDAsXG4gICAgICAgIHdpZHRoOiBgY2FsYygxMDAlIC0gJHt0cmFuc2NyaXB0VmlzdWFsS2V5Ym9hcmRJbmRpY2F0b3JXaWR0aH1weClgXG4gICAgICB9XG4gICAgfSxcbiAgICAuLi5taXJyb3JTdHlsZSgnJi53ZWJjaGF0X19jYXJvdXNlbC1maWxtc3RyaXAtYXR0YWNobWVudC0tcnRsJywge1xuICAgICAgcGFkZGluZ0xlZnQ6IHBhZGRpbmdSZWd1bGFyLFxuXG4gICAgICAnJi53ZWJjaGF0X19jYXJvdXNlbC1maWxtc3RyaXAtYXR0YWNobWVudC0taGlkZS1hdmF0YXIsICYud2ViY2hhdF9fY2Fyb3VzZWwtZmlsbXN0cmlwLWF0dGFjaG1lbnQtLXNob3ctYXZhdGFyJzoge1xuICAgICAgICAnJjpmaXJzdC1jaGlsZCc6IHtcbiAgICAgICAgICBwYWRkaW5nTGVmdDogYXZhdGFyU2l6ZSArIHBhZGRpbmdSZWd1bGFyICogMlxuICAgICAgICB9XG4gICAgICB9LFxuXG4gICAgICAnJi53ZWJjaGF0X19jYXJvdXNlbC1maWxtc3RyaXAtYXR0YWNobWVudC0taGlkZS1udWIsICYud2ViY2hhdF9fY2Fyb3VzZWwtZmlsbXN0cmlwLWF0dGFjaG1lbnQtLXNob3ctbnViJzoge1xuICAgICAgICAnJjpub3QoLndlYmNoYXRfX2Nhcm91c2VsLWZpbG1zdHJpcC1hdHRhY2htZW50LS1oaWRlLWF2YXRhci53ZWJjaGF0X19jYXJvdXNlbC1maWxtc3RyaXAtYXR0YWNobWVudC0tc2hvdy1hdmF0YXIpOmZpcnN0LWNoaWxkJzpcbiAgICAgICAgICB7XG4gICAgICAgICAgICBwYWRkaW5nTGVmdDogcGFkZGluZ1JlZ3VsYXIgKiAyXG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQTs7Ozs7Ozs7OztBQUVlLFNBQVNBLDJCQUFULE9BU1E7RUFBQSxJQVJyQkMsVUFRcUIsUUFSckJBLFVBUXFCO0VBQUEsSUFQckJDLGNBT3FCLFFBUHJCQSxjQU9xQjtFQUFBLElBTnJCQyxjQU1xQixRQU5yQkEsY0FNcUI7RUFBQSxJQUxyQkMsY0FLcUIsUUFMckJBLGNBS3FCO0VBQUEsSUFKckJDLHNDQUlxQixRQUpyQkEsc0NBSXFCO0VBQUEsSUFIckJDLHNDQUdxQixRQUhyQkEsc0NBR3FCO0VBQUEsSUFGckJDLHNDQUVxQixRQUZyQkEsc0NBRXFCO0VBQUEsSUFEckJDLGtCQUNxQixRQURyQkEsa0JBQ3FCO0VBQ3JCO0lBQ0UsNENBQTRDO01BQzFDQyxRQUFRLEVBQUVOLGNBRGdDO01BRTFDTyxRQUFRLEVBQUVSLGNBRmdDO01BRzFDTSxrQkFBa0IsRUFBbEJBLGtCQUgwQztNQUkxQ0csa0JBQWtCLEVBQUUsc0JBSnNCO01BTTFDLFdBQVc7UUFDVEMsT0FBTyxFQUFFO01BREEsQ0FOK0I7TUFVMUMsMERBQTBEO1FBQ3hEQyxXQUFXLEVBQUVSLHNDQUQyQztRQUV4RFMsV0FBVyxFQUFFUixzQ0FGMkM7UUFHeERTLFdBQVcsRUFBRVIsc0NBSDJDO1FBSXhEUyxTQUFTLEVBQUUsWUFKNkM7UUFLeERDLE1BQU0sd0JBQWlCVixzQ0FBakIsUUFMa0Q7UUFNeERXLElBQUksRUFBRSxDQU5rRDtRQU94REMsYUFBYSxFQUFFLE1BUHlDO1FBUXhEQyxRQUFRLEVBQUUsVUFSOEM7UUFTeERDLEdBQUcsRUFBRSxDQVRtRDtRQVV4REMsS0FBSyx3QkFBaUJmLHNDQUFqQjtNQVZtRDtJQVZoQjtFQUQ5QyxHQXdCSyxJQUFBZ0Isb0JBQUEsRUFBWSwrQ0FBWixFQUE2RDtJQUM5REMsV0FBVyxFQUFFcEIsY0FEaUQ7SUFHOUQsZ0hBQWdIO01BQzlHLGlCQUFpQjtRQUNmb0IsV0FBVyxFQUFFdkIsVUFBVSxHQUFHRyxjQUFjLEdBQUc7TUFENUI7SUFENkYsQ0FIbEQ7SUFTOUQsMEdBQTBHO01BQ3hHLCtIQUNFO1FBQ0VvQixXQUFXLEVBQUVwQixjQUFjLEdBQUc7TUFEaEM7SUFGc0c7RUFUNUMsQ0FBN0QsQ0F4Qkw7QUF5Q0QifQ==