"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createScrollToEndButtonStyle;

function createScrollToEndButtonStyle(_ref) {
  var paddingRegular = _ref.paddingRegular,
      primaryFont = _ref.primaryFont,
      scrollToEndButtonFontSize = _ref.scrollToEndButtonFontSize,
      transcriptOverlayButtonBackground = _ref.transcriptOverlayButtonBackground,
      transcriptOverlayButtonBackgroundOnFocus = _ref.transcriptOverlayButtonBackgroundOnFocus,
      transcriptOverlayButtonBackgroundOnHover = _ref.transcriptOverlayButtonBackgroundOnHover,
      transcriptOverlayButtonColor = _ref.transcriptOverlayButtonColor,
      transcriptOverlayButtonColorOnFocus = _ref.transcriptOverlayButtonColorOnFocus,
      transcriptOverlayButtonColorOnHover = _ref.transcriptOverlayButtonColorOnHover;
  return {
    '&.webchat__scroll-to-end-button': {
      // TODO: [P3] Can we not to unset borderWidth and outline earlier?
      '@media screen and (forced-colors: active)': {
        borderWidth: 'initial',
        outline: 'initial'
      },
      appearance: 'none',
      backgroundColor: transcriptOverlayButtonBackground,
      borderRadius: paddingRegular,
      borderWidth: 0,
      bottom: 5,
      color: transcriptOverlayButtonColor,
      fontFamily: primaryFont,
      fontSize: scrollToEndButtonFontSize,
      outline: 0,
      padding: paddingRegular,
      position: 'absolute',
      zIndex: 1,
      // We formed a stacking context in the parent container, so we can use "z-index" here.
      '&:hover': {
        backgroundColor: transcriptOverlayButtonBackgroundOnHover,
        color: transcriptOverlayButtonColorOnHover || transcriptOverlayButtonColor
      },
      '&:focus': {
        backgroundColor: transcriptOverlayButtonBackgroundOnFocus,
        color: transcriptOverlayButtonColorOnFocus || transcriptOverlayButtonColor
      },
      '&:not(.webchat__scroll-to-end-button--rtl)': {
        right: 20
      },
      '&.webchat__scroll-to-end-button--rtl': {
        left: 20
      }
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVTY3JvbGxUb0VuZEJ1dHRvblN0eWxlIiwicGFkZGluZ1JlZ3VsYXIiLCJwcmltYXJ5Rm9udCIsInNjcm9sbFRvRW5kQnV0dG9uRm9udFNpemUiLCJ0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkJhY2tncm91bmQiLCJ0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkJhY2tncm91bmRPbkZvY3VzIiwidHJhbnNjcmlwdE92ZXJsYXlCdXR0b25CYWNrZ3JvdW5kT25Ib3ZlciIsInRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQ29sb3IiLCJ0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yT25Gb2N1cyIsInRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQ29sb3JPbkhvdmVyIiwiYm9yZGVyV2lkdGgiLCJvdXRsaW5lIiwiYXBwZWFyYW5jZSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsImJvdHRvbSIsImNvbG9yIiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwicGFkZGluZyIsInBvc2l0aW9uIiwiekluZGV4IiwicmlnaHQiLCJsZWZ0Il0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvU3R5bGVzL1N0eWxlU2V0L1Njcm9sbFRvRW5kQnV0dG9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0cmljdFN0eWxlT3B0aW9ucyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVNjcm9sbFRvRW5kQnV0dG9uU3R5bGUoe1xuICBwYWRkaW5nUmVndWxhcixcbiAgcHJpbWFyeUZvbnQsXG4gIHNjcm9sbFRvRW5kQnV0dG9uRm9udFNpemUsXG4gIHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQmFja2dyb3VuZCxcbiAgdHJhbnNjcmlwdE92ZXJsYXlCdXR0b25CYWNrZ3JvdW5kT25Gb2N1cyxcbiAgdHJhbnNjcmlwdE92ZXJsYXlCdXR0b25CYWNrZ3JvdW5kT25Ib3ZlcixcbiAgdHJhbnNjcmlwdE92ZXJsYXlCdXR0b25Db2xvcixcbiAgdHJhbnNjcmlwdE92ZXJsYXlCdXR0b25Db2xvck9uRm9jdXMsXG4gIHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQ29sb3JPbkhvdmVyXG59OiBTdHJpY3RTdHlsZU9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICAnJi53ZWJjaGF0X19zY3JvbGwtdG8tZW5kLWJ1dHRvbic6IHtcbiAgICAgIC8vIFRPRE86IFtQM10gQ2FuIHdlIG5vdCB0byB1bnNldCBib3JkZXJXaWR0aCBhbmQgb3V0bGluZSBlYXJsaWVyP1xuICAgICAgJ0BtZWRpYSBzY3JlZW4gYW5kIChmb3JjZWQtY29sb3JzOiBhY3RpdmUpJzoge1xuICAgICAgICBib3JkZXJXaWR0aDogJ2luaXRpYWwnLFxuICAgICAgICBvdXRsaW5lOiAnaW5pdGlhbCdcbiAgICAgIH0sXG5cbiAgICAgIGFwcGVhcmFuY2U6ICdub25lJyxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdHJhbnNjcmlwdE92ZXJsYXlCdXR0b25CYWNrZ3JvdW5kLFxuICAgICAgYm9yZGVyUmFkaXVzOiBwYWRkaW5nUmVndWxhcixcbiAgICAgIGJvcmRlcldpZHRoOiAwLFxuICAgICAgYm90dG9tOiA1LFxuICAgICAgY29sb3I6IHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQ29sb3IsXG4gICAgICBmb250RmFtaWx5OiBwcmltYXJ5Rm9udCxcbiAgICAgIGZvbnRTaXplOiBzY3JvbGxUb0VuZEJ1dHRvbkZvbnRTaXplLFxuICAgICAgb3V0bGluZTogMCxcbiAgICAgIHBhZGRpbmc6IHBhZGRpbmdSZWd1bGFyLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB6SW5kZXg6IDEsIC8vIFdlIGZvcm1lZCBhIHN0YWNraW5nIGNvbnRleHQgaW4gdGhlIHBhcmVudCBjb250YWluZXIsIHNvIHdlIGNhbiB1c2UgXCJ6LWluZGV4XCIgaGVyZS5cblxuICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogdHJhbnNjcmlwdE92ZXJsYXlCdXR0b25CYWNrZ3JvdW5kT25Ib3ZlcixcbiAgICAgICAgY29sb3I6IHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQ29sb3JPbkhvdmVyIHx8IHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQ29sb3JcbiAgICAgIH0sXG5cbiAgICAgICcmOmZvY3VzJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQmFja2dyb3VuZE9uRm9jdXMsXG4gICAgICAgIGNvbG9yOiB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yT25Gb2N1cyB8fCB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yXG4gICAgICB9LFxuXG4gICAgICAnJjpub3QoLndlYmNoYXRfX3Njcm9sbC10by1lbmQtYnV0dG9uLS1ydGwpJzoge1xuICAgICAgICByaWdodDogMjBcbiAgICAgIH0sXG5cbiAgICAgICcmLndlYmNoYXRfX3Njcm9sbC10by1lbmQtYnV0dG9uLS1ydGwnOiB7XG4gICAgICAgIGxlZnQ6IDIwXG4gICAgICB9XG4gICAgfVxuICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRWUsU0FBU0EsNEJBQVQsT0FVUTtFQUFBLElBVHJCQyxjQVNxQixRQVRyQkEsY0FTcUI7RUFBQSxJQVJyQkMsV0FRcUIsUUFSckJBLFdBUXFCO0VBQUEsSUFQckJDLHlCQU9xQixRQVByQkEseUJBT3FCO0VBQUEsSUFOckJDLGlDQU1xQixRQU5yQkEsaUNBTXFCO0VBQUEsSUFMckJDLHdDQUtxQixRQUxyQkEsd0NBS3FCO0VBQUEsSUFKckJDLHdDQUlxQixRQUpyQkEsd0NBSXFCO0VBQUEsSUFIckJDLDRCQUdxQixRQUhyQkEsNEJBR3FCO0VBQUEsSUFGckJDLG1DQUVxQixRQUZyQkEsbUNBRXFCO0VBQUEsSUFEckJDLG1DQUNxQixRQURyQkEsbUNBQ3FCO0VBQ3JCLE9BQU87SUFDTCxtQ0FBbUM7TUFDakM7TUFDQSw2Q0FBNkM7UUFDM0NDLFdBQVcsRUFBRSxTQUQ4QjtRQUUzQ0MsT0FBTyxFQUFFO01BRmtDLENBRlo7TUFPakNDLFVBQVUsRUFBRSxNQVBxQjtNQVFqQ0MsZUFBZSxFQUFFVCxpQ0FSZ0I7TUFTakNVLFlBQVksRUFBRWIsY0FUbUI7TUFVakNTLFdBQVcsRUFBRSxDQVZvQjtNQVdqQ0ssTUFBTSxFQUFFLENBWHlCO01BWWpDQyxLQUFLLEVBQUVULDRCQVowQjtNQWFqQ1UsVUFBVSxFQUFFZixXQWJxQjtNQWNqQ2dCLFFBQVEsRUFBRWYseUJBZHVCO01BZWpDUSxPQUFPLEVBQUUsQ0Fmd0I7TUFnQmpDUSxPQUFPLEVBQUVsQixjQWhCd0I7TUFpQmpDbUIsUUFBUSxFQUFFLFVBakJ1QjtNQWtCakNDLE1BQU0sRUFBRSxDQWxCeUI7TUFrQnRCO01BRVgsV0FBVztRQUNUUixlQUFlLEVBQUVQLHdDQURSO1FBRVRVLEtBQUssRUFBRVAsbUNBQW1DLElBQUlGO01BRnJDLENBcEJzQjtNQXlCakMsV0FBVztRQUNUTSxlQUFlLEVBQUVSLHdDQURSO1FBRVRXLEtBQUssRUFBRVIsbUNBQW1DLElBQUlEO01BRnJDLENBekJzQjtNQThCakMsOENBQThDO1FBQzVDZSxLQUFLLEVBQUU7TUFEcUMsQ0E5QmI7TUFrQ2pDLHdDQUF3QztRQUN0Q0MsSUFBSSxFQUFFO01BRGdDO0lBbENQO0VBRDlCLENBQVA7QUF3Q0QifQ==