"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CarouselFlipper;

function CarouselFlipper(_ref) {
  var transcriptOverlayButtonBackground = _ref.transcriptOverlayButtonBackground,
      transcriptOverlayButtonBackgroundOnDisabled = _ref.transcriptOverlayButtonBackgroundOnDisabled,
      transcriptOverlayButtonBackgroundOnFocus = _ref.transcriptOverlayButtonBackgroundOnFocus,
      transcriptOverlayButtonBackgroundOnHover = _ref.transcriptOverlayButtonBackgroundOnHover,
      transcriptOverlayButtonColor = _ref.transcriptOverlayButtonColor,
      transcriptOverlayButtonColorOnDisabled = _ref.transcriptOverlayButtonColorOnDisabled,
      transcriptOverlayButtonColorOnFocus = _ref.transcriptOverlayButtonColorOnFocus,
      transcriptOverlayButtonColorOnHover = _ref.transcriptOverlayButtonColorOnHover;
  return {
    '&.webchat__carousel-layout': {
      '& .react-film__flipper': {
        '& .react-film__flipper__body': {
          backgroundColor: transcriptOverlayButtonBackground,
          color: transcriptOverlayButtonColor,
          outline: 0
        },
        '&:disabled, &[aria-disabled="true"]': {
          '& .react-film__flipper__body': {
            backgroundColor: transcriptOverlayButtonBackgroundOnDisabled,
            color: transcriptOverlayButtonColorOnDisabled
          }
        },
        '&:focus .react-film__flipper__body': {
          backgroundColor: transcriptOverlayButtonBackgroundOnFocus,
          color: transcriptOverlayButtonColorOnFocus || transcriptOverlayButtonColor
        },
        '&:hover .react-film__flipper__body': {
          backgroundColor: transcriptOverlayButtonBackgroundOnHover,
          color: transcriptOverlayButtonColorOnHover || transcriptOverlayButtonColor
        }
      }
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDYXJvdXNlbEZsaXBwZXIiLCJ0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkJhY2tncm91bmQiLCJ0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkJhY2tncm91bmRPbkRpc2FibGVkIiwidHJhbnNjcmlwdE92ZXJsYXlCdXR0b25CYWNrZ3JvdW5kT25Gb2N1cyIsInRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQmFja2dyb3VuZE9uSG92ZXIiLCJ0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yIiwidHJhbnNjcmlwdE92ZXJsYXlCdXR0b25Db2xvck9uRGlzYWJsZWQiLCJ0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yT25Gb2N1cyIsInRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQ29sb3JPbkhvdmVyIiwiYmFja2dyb3VuZENvbG9yIiwiY29sb3IiLCJvdXRsaW5lIl0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvU3R5bGVzL1N0eWxlU2V0L0Nhcm91c2VsRmxpcHBlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHJpY3RTdHlsZU9wdGlvbnMgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1hcGknO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDYXJvdXNlbEZsaXBwZXIoe1xuICB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkJhY2tncm91bmQsXG4gIHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQmFja2dyb3VuZE9uRGlzYWJsZWQsXG4gIHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQmFja2dyb3VuZE9uRm9jdXMsXG4gIHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQmFja2dyb3VuZE9uSG92ZXIsXG4gIHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQ29sb3IsXG4gIHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQ29sb3JPbkRpc2FibGVkLFxuICB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yT25Gb2N1cyxcbiAgdHJhbnNjcmlwdE92ZXJsYXlCdXR0b25Db2xvck9uSG92ZXJcbn06IFN0cmljdFN0eWxlT3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgICcmLndlYmNoYXRfX2Nhcm91c2VsLWxheW91dCc6IHtcbiAgICAgICcmIC5yZWFjdC1maWxtX19mbGlwcGVyJzoge1xuICAgICAgICAnJiAucmVhY3QtZmlsbV9fZmxpcHBlcl9fYm9keSc6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQmFja2dyb3VuZCxcbiAgICAgICAgICBjb2xvcjogdHJhbnNjcmlwdE92ZXJsYXlCdXR0b25Db2xvcixcbiAgICAgICAgICBvdXRsaW5lOiAwXG4gICAgICAgIH0sXG5cbiAgICAgICAgJyY6ZGlzYWJsZWQsICZbYXJpYS1kaXNhYmxlZD1cInRydWVcIl0nOiB7XG4gICAgICAgICAgJyYgLnJlYWN0LWZpbG1fX2ZsaXBwZXJfX2JvZHknOiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRyYW5zY3JpcHRPdmVybGF5QnV0dG9uQmFja2dyb3VuZE9uRGlzYWJsZWQsXG4gICAgICAgICAgICBjb2xvcjogdHJhbnNjcmlwdE92ZXJsYXlCdXR0b25Db2xvck9uRGlzYWJsZWRcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgJyY6Zm9jdXMgLnJlYWN0LWZpbG1fX2ZsaXBwZXJfX2JvZHknOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkJhY2tncm91bmRPbkZvY3VzLFxuICAgICAgICAgIGNvbG9yOiB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yT25Gb2N1cyB8fCB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yXG4gICAgICAgIH0sXG5cbiAgICAgICAgJyY6aG92ZXIgLnJlYWN0LWZpbG1fX2ZsaXBwZXJfX2JvZHknOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkJhY2tncm91bmRPbkhvdmVyLFxuICAgICAgICAgIGNvbG9yOiB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yT25Ib3ZlciB8fCB0cmFuc2NyaXB0T3ZlcmxheUJ1dHRvbkNvbG9yXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFZSxTQUFTQSxlQUFULE9BU1E7RUFBQSxJQVJyQkMsaUNBUXFCLFFBUnJCQSxpQ0FRcUI7RUFBQSxJQVByQkMsMkNBT3FCLFFBUHJCQSwyQ0FPcUI7RUFBQSxJQU5yQkMsd0NBTXFCLFFBTnJCQSx3Q0FNcUI7RUFBQSxJQUxyQkMsd0NBS3FCLFFBTHJCQSx3Q0FLcUI7RUFBQSxJQUpyQkMsNEJBSXFCLFFBSnJCQSw0QkFJcUI7RUFBQSxJQUhyQkMsc0NBR3FCLFFBSHJCQSxzQ0FHcUI7RUFBQSxJQUZyQkMsbUNBRXFCLFFBRnJCQSxtQ0FFcUI7RUFBQSxJQURyQkMsbUNBQ3FCLFFBRHJCQSxtQ0FDcUI7RUFDckIsT0FBTztJQUNMLDhCQUE4QjtNQUM1QiwwQkFBMEI7UUFDeEIsZ0NBQWdDO1VBQzlCQyxlQUFlLEVBQUVSLGlDQURhO1VBRTlCUyxLQUFLLEVBQUVMLDRCQUZ1QjtVQUc5Qk0sT0FBTyxFQUFFO1FBSHFCLENBRFI7UUFPeEIsdUNBQXVDO1VBQ3JDLGdDQUFnQztZQUM5QkYsZUFBZSxFQUFFUCwyQ0FEYTtZQUU5QlEsS0FBSyxFQUFFSjtVQUZ1QjtRQURLLENBUGY7UUFjeEIsc0NBQXNDO1VBQ3BDRyxlQUFlLEVBQUVOLHdDQURtQjtVQUVwQ08sS0FBSyxFQUFFSCxtQ0FBbUMsSUFBSUY7UUFGVixDQWRkO1FBbUJ4QixzQ0FBc0M7VUFDcENJLGVBQWUsRUFBRUwsd0NBRG1CO1VBRXBDTSxLQUFLLEVBQUVGLG1DQUFtQyxJQUFJSDtRQUZWO01BbkJkO0lBREU7RUFEekIsQ0FBUDtBQTRCRCJ9