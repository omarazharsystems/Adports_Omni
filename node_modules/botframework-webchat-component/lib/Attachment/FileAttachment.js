"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _FileContent = _interopRequireDefault(require("./FileContent"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FileAttachment = function FileAttachment(_ref) {
  var _ref$activity = _ref.activity;
  _ref$activity = _ref$activity === void 0 ? {} : _ref$activity;
  var _ref$activity$attachm = _ref$activity.attachments,
      attachments = _ref$activity$attachm === void 0 ? [] : _ref$activity$attachm,
      _ref$activity$channel = _ref$activity.channelData;
  _ref$activity$channel = _ref$activity$channel === void 0 ? {} : _ref$activity$channel;
  var _ref$activity$channel2 = _ref$activity$channel.attachmentSizes,
      attachmentSizes = _ref$activity$channel2 === void 0 ? [] : _ref$activity$channel2,
      attachment = _ref.attachment;
  var attachmentIndex = attachments.indexOf(attachment);
  var size = attachmentSizes[+attachmentIndex];
  return /*#__PURE__*/_react.default.createElement(_FileContent.default, {
    fileName: attachment.name,
    href: attachment.contentUrl,
    size: size
  });
};

FileAttachment.propTypes = {
  activity: _propTypes.default.shape({
    attachment: _propTypes.default.array,
    channelData: _propTypes.default.shape({
      attachmentSizes: _propTypes.default.arrayOf(_propTypes.default.number)
    })
  }).isRequired,
  attachment: _propTypes.default.shape({
    contentUrl: _propTypes.default.string,
    name: _propTypes.default.string.isRequired
  }).isRequired
};
var _default = FileAttachment;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJGaWxlQXR0YWNobWVudCIsImFjdGl2aXR5IiwiYXR0YWNobWVudHMiLCJjaGFubmVsRGF0YSIsImF0dGFjaG1lbnRTaXplcyIsImF0dGFjaG1lbnQiLCJhdHRhY2htZW50SW5kZXgiLCJpbmRleE9mIiwic2l6ZSIsIm5hbWUiLCJjb250ZW50VXJsIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic2hhcGUiLCJhcnJheSIsImFycmF5T2YiLCJudW1iZXIiLCJpc1JlcXVpcmVkIiwic3RyaW5nIl0sInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlcyI6WyIuLi8uLi9zcmMvQXR0YWNobWVudC9GaWxlQXR0YWNobWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEZpbGVDb250ZW50IGZyb20gJy4vRmlsZUNvbnRlbnQnO1xuXG5jb25zdCBGaWxlQXR0YWNobWVudCA9ICh7XG4gIGFjdGl2aXR5OiB7IGF0dGFjaG1lbnRzID0gW10sIGNoYW5uZWxEYXRhOiB7IGF0dGFjaG1lbnRTaXplcyA9IFtdIH0gPSB7fSB9ID0ge30sXG4gIGF0dGFjaG1lbnRcbn0pID0+IHtcbiAgY29uc3QgYXR0YWNobWVudEluZGV4ID0gYXR0YWNobWVudHMuaW5kZXhPZihhdHRhY2htZW50KTtcbiAgY29uc3Qgc2l6ZSA9IGF0dGFjaG1lbnRTaXplc1srYXR0YWNobWVudEluZGV4XTtcblxuICByZXR1cm4gPEZpbGVDb250ZW50IGZpbGVOYW1lPXthdHRhY2htZW50Lm5hbWV9IGhyZWY9e2F0dGFjaG1lbnQuY29udGVudFVybH0gc2l6ZT17c2l6ZX0gLz47XG59O1xuXG5GaWxlQXR0YWNobWVudC5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2aXR5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGF0dGFjaG1lbnQ6IFByb3BUeXBlcy5hcnJheSxcbiAgICBjaGFubmVsRGF0YTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIGF0dGFjaG1lbnRTaXplczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm51bWJlcilcbiAgICB9KVxuICB9KS5pc1JlcXVpcmVkLFxuICBhdHRhY2htZW50OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGNvbnRlbnRVcmw6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEZpbGVBdHRhY2htZW50O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7QUFFQSxJQUFNQSxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLE9BR2pCO0VBQUEseUJBRkpDLFFBRUk7RUFBQSwyQ0FGeUUsRUFFekU7RUFBQSwwQ0FGUUMsV0FFUjtFQUFBLElBRlFBLFdBRVIsc0NBRnNCLEVBRXRCO0VBQUEsMENBRjBCQyxXQUUxQjtFQUFBLDJEQUZrRSxFQUVsRTtFQUFBLG1EQUZ5Q0MsZUFFekM7RUFBQSxJQUZ5Q0EsZUFFekMsdUNBRjJELEVBRTNEO0VBQUEsSUFESkMsVUFDSSxRQURKQSxVQUNJO0VBQ0osSUFBTUMsZUFBZSxHQUFHSixXQUFXLENBQUNLLE9BQVosQ0FBb0JGLFVBQXBCLENBQXhCO0VBQ0EsSUFBTUcsSUFBSSxHQUFHSixlQUFlLENBQUMsQ0FBQ0UsZUFBRixDQUE1QjtFQUVBLG9CQUFPLDZCQUFDLG9CQUFEO0lBQWEsUUFBUSxFQUFFRCxVQUFVLENBQUNJLElBQWxDO0lBQXdDLElBQUksRUFBRUosVUFBVSxDQUFDSyxVQUF6RDtJQUFxRSxJQUFJLEVBQUVGO0VBQTNFLEVBQVA7QUFDRCxDQVJEOztBQVVBUixjQUFjLENBQUNXLFNBQWYsR0FBMkI7RUFDekJWLFFBQVEsRUFBRVcsa0JBQUEsQ0FBVUMsS0FBVixDQUFnQjtJQUN4QlIsVUFBVSxFQUFFTyxrQkFBQSxDQUFVRSxLQURFO0lBRXhCWCxXQUFXLEVBQUVTLGtCQUFBLENBQVVDLEtBQVYsQ0FBZ0I7TUFDM0JULGVBQWUsRUFBRVEsa0JBQUEsQ0FBVUcsT0FBVixDQUFrQkgsa0JBQUEsQ0FBVUksTUFBNUI7SUFEVSxDQUFoQjtFQUZXLENBQWhCLEVBS1BDLFVBTnNCO0VBT3pCWixVQUFVLEVBQUVPLGtCQUFBLENBQVVDLEtBQVYsQ0FBZ0I7SUFDMUJILFVBQVUsRUFBRUUsa0JBQUEsQ0FBVU0sTUFESTtJQUUxQlQsSUFBSSxFQUFFRyxrQkFBQSxDQUFVTSxNQUFWLENBQWlCRDtFQUZHLENBQWhCLEVBR1RBO0FBVnNCLENBQTNCO2VBYWVqQixjIn0=