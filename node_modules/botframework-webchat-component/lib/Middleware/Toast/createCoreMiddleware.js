"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createToastMiddleware = _interopRequireDefault(require("../../Toast/createToastMiddleware"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createCoreMiddleware() {
  return [function () {
    return function (next) {
      return function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var id = args[0].notification.id; // We are ignoring "connectivitystatus" notifications, we will render it using <BasicConnectivityStatus> instead.
        // If devs want to render it, they can add a middleware.

        return id !== 'connectivitystatus' && next.apply(void 0, args);
      };
    };
  }, (0, _createToastMiddleware.default)()];
}

var _default = createCoreMiddleware;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVDb3JlTWlkZGxld2FyZSIsIm5leHQiLCJhcmdzIiwiaWQiLCJub3RpZmljYXRpb24iLCJjcmVhdGVUb2FzdE1pZGRsZXdhcmUiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NaWRkbGV3YXJlL1RvYXN0L2NyZWF0ZUNvcmVNaWRkbGV3YXJlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb2FzdE1pZGRsZXdhcmUgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1hcGknO1xuXG5pbXBvcnQgY3JlYXRlVG9hc3RNaWRkbGV3YXJlIGZyb20gJy4uLy4uL1RvYXN0L2NyZWF0ZVRvYXN0TWlkZGxld2FyZSc7XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvcmVNaWRkbGV3YXJlKCk6IFRvYXN0TWlkZGxld2FyZVtdIHtcbiAgcmV0dXJuIFtcbiAgICAoKSA9PlxuICAgICAgbmV4dCA9PlxuICAgICAgKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgY29uc3QgW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvbjogeyBpZCB9XG4gICAgICAgICAgfVxuICAgICAgICBdID0gYXJncztcblxuICAgICAgICAvLyBXZSBhcmUgaWdub3JpbmcgXCJjb25uZWN0aXZpdHlzdGF0dXNcIiBub3RpZmljYXRpb25zLCB3ZSB3aWxsIHJlbmRlciBpdCB1c2luZyA8QmFzaWNDb25uZWN0aXZpdHlTdGF0dXM+IGluc3RlYWQuXG4gICAgICAgIC8vIElmIGRldnMgd2FudCB0byByZW5kZXIgaXQsIHRoZXkgY2FuIGFkZCBhIG1pZGRsZXdhcmUuXG4gICAgICAgIHJldHVybiBpZCAhPT0gJ2Nvbm5lY3Rpdml0eXN0YXR1cycgJiYgbmV4dCguLi5hcmdzKTtcbiAgICAgIH0sXG4gICAgY3JlYXRlVG9hc3RNaWRkbGV3YXJlKClcbiAgXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQ29yZU1pZGRsZXdhcmU7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7OztBQUVBLFNBQVNBLG9CQUFULEdBQW1EO0VBQ2pELE9BQU8sQ0FDTDtJQUFBLE9BQ0UsVUFBQUMsSUFBSTtNQUFBLE9BQ0osWUFBYTtRQUFBLGtDQUFUQyxJQUFTO1VBQVRBLElBQVM7UUFBQTs7UUFDWCxJQUVvQkMsRUFGcEIsR0FJSUQsSUFKSixJQUVJRSxZQUZKLENBRW9CRCxFQUZwQixDQURXLENBT1g7UUFDQTs7UUFDQSxPQUFPQSxFQUFFLEtBQUssb0JBQVAsSUFBK0JGLElBQUksTUFBSixTQUFRQyxJQUFSLENBQXRDO01BQ0QsQ0FYRztJQUFBLENBRE47RUFBQSxDQURLLEVBY0wsSUFBQUcsOEJBQUEsR0FkSyxDQUFQO0FBZ0JEOztlQUVjTCxvQiJ9