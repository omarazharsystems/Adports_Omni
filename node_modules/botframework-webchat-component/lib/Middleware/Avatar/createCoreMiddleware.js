"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultAvatar = void 0;
exports.default = createCoreAvatarMiddleware;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _ImageAvatar = _interopRequireDefault(require("../../Avatar/ImageAvatar"));

var _InitialsAvatar = _interopRequireDefault(require("../../Avatar/InitialsAvatar"));

var _useStyleSet3 = _interopRequireDefault(require("../../hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("../../hooks/internal/useStyleToEmotionObject"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ROOT_STYLE = {
  overflow: 'hidden',
  position: 'relative',
  '> *': {
    left: 0,
    position: 'absolute',
    top: 0
  }
};

var DefaultAvatar = function DefaultAvatar(_ref) {
  var ariaHidden = _ref['aria-hidden'],
      className = _ref.className,
      fromUser = _ref.fromUser;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      avatarStyleSet = _useStyleSet2[0].avatar;

  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';
  return /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": ariaHidden,
    className: (0, _classnames.default)('webchat__defaultAvatar', {
      'webchat__defaultAvatar--fromUser': fromUser
    }, rootClassName, avatarStyleSet + '', (className || '') + '')
  }, /*#__PURE__*/_react.default.createElement(_InitialsAvatar.default, {
    fromUser: fromUser
  }), /*#__PURE__*/_react.default.createElement(_ImageAvatar.default, {
    fromUser: fromUser
  }));
};

exports.DefaultAvatar = DefaultAvatar;
DefaultAvatar.defaultProps = {
  'aria-hidden': true,
  className: ''
};
DefaultAvatar.propTypes = {
  'aria-hidden': _propTypes.default.bool,
  className: _propTypes.default.string,
  fromUser: _propTypes.default.bool.isRequired
};

function createCoreAvatarMiddleware() {
  return [function () {
    return function () {
      return function (_ref2) {
        var fromUser = _ref2.fromUser,
            styleOptions = _ref2.styleOptions;
        var botAvatarImage = styleOptions.botAvatarImage,
            botAvatarInitials = styleOptions.botAvatarInitials,
            userAvatarImage = styleOptions.userAvatarImage,
            userAvatarInitials = styleOptions.userAvatarInitials;

        if (fromUser ? userAvatarImage || userAvatarInitials : botAvatarImage || botAvatarInitials) {
          return function () {
            return /*#__PURE__*/_react.default.createElement(DefaultAvatar, {
              fromUser: fromUser
            });
          };
        }

        return false;
      };
    };
  }];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJST09UX1NUWUxFIiwib3ZlcmZsb3ciLCJwb3NpdGlvbiIsImxlZnQiLCJ0b3AiLCJEZWZhdWx0QXZhdGFyIiwiYXJpYUhpZGRlbiIsImNsYXNzTmFtZSIsImZyb21Vc2VyIiwidXNlU3R5bGVTZXQiLCJhdmF0YXJTdHlsZVNldCIsImF2YXRhciIsInJvb3RDbGFzc05hbWUiLCJ1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCIsImNsYXNzTmFtZXMiLCJkZWZhdWx0UHJvcHMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJib29sIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsImNyZWF0ZUNvcmVBdmF0YXJNaWRkbGV3YXJlIiwic3R5bGVPcHRpb25zIiwiYm90QXZhdGFySW1hZ2UiLCJib3RBdmF0YXJJbml0aWFscyIsInVzZXJBdmF0YXJJbWFnZSIsInVzZXJBdmF0YXJJbml0aWFscyJdLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL01pZGRsZXdhcmUvQXZhdGFyL2NyZWF0ZUNvcmVNaWRkbGV3YXJlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdmF0YXJNaWRkbGV3YXJlIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwgeyBGQyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEltYWdlQXZhdGFyIGZyb20gJy4uLy4uL0F2YXRhci9JbWFnZUF2YXRhcic7XG5pbXBvcnQgSW5pdGlhbHNBdmF0YXIgZnJvbSAnLi4vLi4vQXZhdGFyL0luaXRpYWxzQXZhdGFyJztcbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi8uLi9ob29rcy91c2VTdHlsZVNldCc7XG5pbXBvcnQgdXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QgZnJvbSAnLi4vLi4vaG9va3MvaW50ZXJuYWwvdXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QnO1xuXG5jb25zdCBST09UX1NUWUxFID0ge1xuICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuXG4gICc+IConOiB7XG4gICAgbGVmdDogMCxcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB0b3A6IDBcbiAgfVxufTtcblxudHlwZSBEZWZhdWx0QXZhdGFyUHJvcHMgPSB7XG4gICdhcmlhLWhpZGRlbic/OiBib29sZWFuO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGZyb21Vc2VyOiBib29sZWFuO1xufTtcblxuY29uc3QgRGVmYXVsdEF2YXRhcjogRkM8RGVmYXVsdEF2YXRhclByb3BzPiA9ICh7ICdhcmlhLWhpZGRlbic6IGFyaWFIaWRkZW4sIGNsYXNzTmFtZSwgZnJvbVVzZXIgfSkgPT4ge1xuICBjb25zdCBbeyBhdmF0YXI6IGF2YXRhclN0eWxlU2V0IH1dID0gdXNlU3R5bGVTZXQoKTtcbiAgY29uc3Qgcm9vdENsYXNzTmFtZSA9IHVzZVN0eWxlVG9FbW90aW9uT2JqZWN0KCkoUk9PVF9TVFlMRSkgKyAnJztcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGFyaWEtaGlkZGVuPXthcmlhSGlkZGVufVxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAnd2ViY2hhdF9fZGVmYXVsdEF2YXRhcicsXG4gICAgICAgIHsgJ3dlYmNoYXRfX2RlZmF1bHRBdmF0YXItLWZyb21Vc2VyJzogZnJvbVVzZXIgfSxcbiAgICAgICAgcm9vdENsYXNzTmFtZSxcbiAgICAgICAgYXZhdGFyU3R5bGVTZXQgKyAnJyxcbiAgICAgICAgKGNsYXNzTmFtZSB8fCAnJykgKyAnJ1xuICAgICAgKX1cbiAgICA+XG4gICAgICA8SW5pdGlhbHNBdmF0YXIgZnJvbVVzZXI9e2Zyb21Vc2VyfSAvPlxuICAgICAgPEltYWdlQXZhdGFyIGZyb21Vc2VyPXtmcm9tVXNlcn0gLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbkRlZmF1bHRBdmF0YXIuZGVmYXVsdFByb3BzID0ge1xuICAnYXJpYS1oaWRkZW4nOiB0cnVlLFxuICBjbGFzc05hbWU6ICcnXG59O1xuXG5EZWZhdWx0QXZhdGFyLnByb3BUeXBlcyA9IHtcbiAgJ2FyaWEtaGlkZGVuJzogUHJvcFR5cGVzLmJvb2wsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZnJvbVVzZXI6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUNvcmVBdmF0YXJNaWRkbGV3YXJlKCk6IEF2YXRhck1pZGRsZXdhcmVbXSB7XG4gIHJldHVybiBbXG4gICAgKCkgPT5cbiAgICAgICgpID0+XG4gICAgICAoeyBmcm9tVXNlciwgc3R5bGVPcHRpb25zIH0pID0+IHtcbiAgICAgICAgY29uc3QgeyBib3RBdmF0YXJJbWFnZSwgYm90QXZhdGFySW5pdGlhbHMsIHVzZXJBdmF0YXJJbWFnZSwgdXNlckF2YXRhckluaXRpYWxzIH0gPSBzdHlsZU9wdGlvbnM7XG5cbiAgICAgICAgaWYgKGZyb21Vc2VyID8gdXNlckF2YXRhckltYWdlIHx8IHVzZXJBdmF0YXJJbml0aWFscyA6IGJvdEF2YXRhckltYWdlIHx8IGJvdEF2YXRhckluaXRpYWxzKSB7XG4gICAgICAgICAgcmV0dXJuICgpID0+IDxEZWZhdWx0QXZhdGFyIGZyb21Vc2VyPXtmcm9tVXNlcn0gLz47XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gIF07XG59XG5cbmV4cG9ydCB7IERlZmF1bHRBdmF0YXIgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFVBQVUsR0FBRztFQUNqQkMsUUFBUSxFQUFFLFFBRE87RUFFakJDLFFBQVEsRUFBRSxVQUZPO0VBSWpCLE9BQU87SUFDTEMsSUFBSSxFQUFFLENBREQ7SUFFTEQsUUFBUSxFQUFFLFVBRkw7SUFHTEUsR0FBRyxFQUFFO0VBSEE7QUFKVSxDQUFuQjs7QUFpQkEsSUFBTUMsYUFBcUMsR0FBRyxTQUF4Q0EsYUFBd0MsT0FBd0Q7RUFBQSxJQUF0Q0MsVUFBc0MsUUFBckQsYUFBcUQ7RUFBQSxJQUExQkMsU0FBMEIsUUFBMUJBLFNBQTBCO0VBQUEsSUFBZkMsUUFBZSxRQUFmQSxRQUFlOztFQUNwRyxtQkFBcUMsSUFBQUMscUJBQUEsR0FBckM7RUFBQTtFQUFBLElBQWlCQyxjQUFqQixvQkFBU0MsTUFBVDs7RUFDQSxJQUFNQyxhQUFhLEdBQUcsSUFBQUMsZ0NBQUEsSUFBMEJiLFVBQTFCLElBQXdDLEVBQTlEO0VBRUEsb0JBQ0U7SUFDRSxlQUFhTSxVQURmO0lBRUUsU0FBUyxFQUFFLElBQUFRLG1CQUFBLEVBQ1Qsd0JBRFMsRUFFVDtNQUFFLG9DQUFvQ047SUFBdEMsQ0FGUyxFQUdUSSxhQUhTLEVBSVRGLGNBQWMsR0FBRyxFQUpSLEVBS1QsQ0FBQ0gsU0FBUyxJQUFJLEVBQWQsSUFBb0IsRUFMWDtFQUZiLGdCQVVFLDZCQUFDLHVCQUFEO0lBQWdCLFFBQVEsRUFBRUM7RUFBMUIsRUFWRixlQVdFLDZCQUFDLG9CQUFEO0lBQWEsUUFBUSxFQUFFQTtFQUF2QixFQVhGLENBREY7QUFlRCxDQW5CRDs7O0FBcUJBSCxhQUFhLENBQUNVLFlBQWQsR0FBNkI7RUFDM0IsZUFBZSxJQURZO0VBRTNCUixTQUFTLEVBQUU7QUFGZ0IsQ0FBN0I7QUFLQUYsYUFBYSxDQUFDVyxTQUFkLEdBQTBCO0VBQ3hCLGVBQWVDLGtCQUFBLENBQVVDLElBREQ7RUFFeEJYLFNBQVMsRUFBRVUsa0JBQUEsQ0FBVUUsTUFGRztFQUd4QlgsUUFBUSxFQUFFUyxrQkFBQSxDQUFVQyxJQUFWLENBQWVFO0FBSEQsQ0FBMUI7O0FBTWUsU0FBU0MsMEJBQVQsR0FBMEQ7RUFDdkUsT0FBTyxDQUNMO0lBQUEsT0FDRTtNQUFBLE9BQ0EsaUJBQWdDO1FBQUEsSUFBN0JiLFFBQTZCLFNBQTdCQSxRQUE2QjtRQUFBLElBQW5CYyxZQUFtQixTQUFuQkEsWUFBbUI7UUFDOUIsSUFBUUMsY0FBUixHQUFtRkQsWUFBbkYsQ0FBUUMsY0FBUjtRQUFBLElBQXdCQyxpQkFBeEIsR0FBbUZGLFlBQW5GLENBQXdCRSxpQkFBeEI7UUFBQSxJQUEyQ0MsZUFBM0MsR0FBbUZILFlBQW5GLENBQTJDRyxlQUEzQztRQUFBLElBQTREQyxrQkFBNUQsR0FBbUZKLFlBQW5GLENBQTRESSxrQkFBNUQ7O1FBRUEsSUFBSWxCLFFBQVEsR0FBR2lCLGVBQWUsSUFBSUMsa0JBQXRCLEdBQTJDSCxjQUFjLElBQUlDLGlCQUF6RSxFQUE0RjtVQUMxRixPQUFPO1lBQUEsb0JBQU0sNkJBQUMsYUFBRDtjQUFlLFFBQVEsRUFBRWhCO1lBQXpCLEVBQU47VUFBQSxDQUFQO1FBQ0Q7O1FBRUQsT0FBTyxLQUFQO01BQ0QsQ0FURDtJQUFBLENBREY7RUFBQSxDQURLLENBQVA7QUFhRCJ9