"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useStyleSet3 = _interopRequireDefault(require("../../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDirection = _botframeworkWebchatApi.hooks.useDirection,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,
    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;

var ScrollToEndButton = function ScrollToEndButton(_ref) {
  var onClick = _ref.onClick;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      scrollToEndButtonStyleSet = _useStyleSet2[0].scrollToEndButton;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      scrollToEndButtonBehavior = _useStyleOptions2[0].scrollToEndButtonBehavior;

  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var localize = useLocalizer();
  var text = localize(scrollToEndButtonBehavior === 'any' ? 'TRANSCRIPT_MORE_MESSAGES' : 'TRANSCRIPT_NEW_MESSAGES');
  return /*#__PURE__*/_react.default.createElement("button", {
    "aria-label": text,
    className: (0, _classnames.default)('webchat__scroll-to-end-button', scrollToEndButtonStyleSet + '', direction === 'rtl' ? 'webchat__scroll-to-end-button--rtl' : ''),
    onClick: onClick,
    tabIndex: 0,
    type: "button"
  }, text);
};

ScrollToEndButton.defaultProps = {
  onClick: undefined
};
ScrollToEndButton.displayName = 'ScrollToEndButton';
ScrollToEndButton.propTypes = {
  onClick: _propTypes.default.func
};
var _default = ScrollToEndButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VEaXJlY3Rpb24iLCJob29rcyIsInVzZUxvY2FsaXplciIsInVzZVN0eWxlT3B0aW9ucyIsIlNjcm9sbFRvRW5kQnV0dG9uIiwib25DbGljayIsInVzZVN0eWxlU2V0Iiwic2Nyb2xsVG9FbmRCdXR0b25TdHlsZVNldCIsInNjcm9sbFRvRW5kQnV0dG9uIiwic2Nyb2xsVG9FbmRCdXR0b25CZWhhdmlvciIsImRpcmVjdGlvbiIsImxvY2FsaXplIiwidGV4dCIsImNsYXNzTmFtZXMiLCJkZWZhdWx0UHJvcHMiLCJ1bmRlZmluZWQiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImZ1bmMiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NaWRkbGV3YXJlL1Njcm9sbFRvRW5kQnV0dG9uL1Njcm9sbFRvRW5kQnV0dG9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhvb2tzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi8uLi9ob29rcy91c2VTdHlsZVNldCc7XG5cbmNvbnN0IHsgdXNlRGlyZWN0aW9uLCB1c2VMb2NhbGl6ZXIsIHVzZVN0eWxlT3B0aW9ucyB9ID0gaG9va3M7XG5cbmNvbnN0IFNjcm9sbFRvRW5kQnV0dG9uID0gKHsgb25DbGljayB9KSA9PiB7XG4gIGNvbnN0IFt7IHNjcm9sbFRvRW5kQnV0dG9uOiBzY3JvbGxUb0VuZEJ1dHRvblN0eWxlU2V0IH1dID0gdXNlU3R5bGVTZXQoKTtcbiAgY29uc3QgW3sgc2Nyb2xsVG9FbmRCdXR0b25CZWhhdmlvciB9XSA9IHVzZVN0eWxlT3B0aW9ucygpO1xuICBjb25zdCBbZGlyZWN0aW9uXSA9IHVzZURpcmVjdGlvbigpO1xuICBjb25zdCBsb2NhbGl6ZSA9IHVzZUxvY2FsaXplcigpO1xuXG4gIGNvbnN0IHRleHQgPSBsb2NhbGl6ZShzY3JvbGxUb0VuZEJ1dHRvbkJlaGF2aW9yID09PSAnYW55JyA/ICdUUkFOU0NSSVBUX01PUkVfTUVTU0FHRVMnIDogJ1RSQU5TQ1JJUFRfTkVXX01FU1NBR0VTJyk7XG5cbiAgcmV0dXJuIChcbiAgICA8YnV0dG9uXG4gICAgICBhcmlhLWxhYmVsPXt0ZXh0fVxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAnd2ViY2hhdF9fc2Nyb2xsLXRvLWVuZC1idXR0b24nLFxuICAgICAgICBzY3JvbGxUb0VuZEJ1dHRvblN0eWxlU2V0ICsgJycsXG4gICAgICAgIGRpcmVjdGlvbiA9PT0gJ3J0bCcgPyAnd2ViY2hhdF9fc2Nyb2xsLXRvLWVuZC1idXR0b24tLXJ0bCcgOiAnJ1xuICAgICAgKX1cbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICB0YWJJbmRleD17MH1cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgID5cbiAgICAgIHt0ZXh0fVxuICAgIDwvYnV0dG9uPlxuICApO1xufTtcblxuU2Nyb2xsVG9FbmRCdXR0b24uZGVmYXVsdFByb3BzID0ge1xuICBvbkNsaWNrOiB1bmRlZmluZWRcbn07XG5cblNjcm9sbFRvRW5kQnV0dG9uLmRpc3BsYXlOYW1lID0gJ1Njcm9sbFRvRW5kQnV0dG9uJztcblxuU2Nyb2xsVG9FbmRCdXR0b24ucHJvcFR5cGVzID0ge1xuICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuY1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2Nyb2xsVG9FbmRCdXR0b247XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQVFBLFlBQVIsR0FBd0RDLDZCQUF4RCxDQUFRRCxZQUFSO0FBQUEsSUFBc0JFLFlBQXRCLEdBQXdERCw2QkFBeEQsQ0FBc0JDLFlBQXRCO0FBQUEsSUFBb0NDLGVBQXBDLEdBQXdERiw2QkFBeEQsQ0FBb0NFLGVBQXBDOztBQUVBLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsT0FBaUI7RUFBQSxJQUFkQyxPQUFjLFFBQWRBLE9BQWM7O0VBQ3pDLG1CQUEyRCxJQUFBQyxxQkFBQSxHQUEzRDtFQUFBO0VBQUEsSUFBNEJDLHlCQUE1QixvQkFBU0MsaUJBQVQ7O0VBQ0EsdUJBQXdDTCxlQUFlLEVBQXZEO0VBQUE7RUFBQSxJQUFTTSx5QkFBVCx3QkFBU0EseUJBQVQ7O0VBQ0Esb0JBQW9CVCxZQUFZLEVBQWhDO0VBQUE7RUFBQSxJQUFPVSxTQUFQOztFQUNBLElBQU1DLFFBQVEsR0FBR1QsWUFBWSxFQUE3QjtFQUVBLElBQU1VLElBQUksR0FBR0QsUUFBUSxDQUFDRix5QkFBeUIsS0FBSyxLQUE5QixHQUFzQywwQkFBdEMsR0FBbUUseUJBQXBFLENBQXJCO0VBRUEsb0JBQ0U7SUFDRSxjQUFZRyxJQURkO0lBRUUsU0FBUyxFQUFFLElBQUFDLG1CQUFBLEVBQ1QsK0JBRFMsRUFFVE4seUJBQXlCLEdBQUcsRUFGbkIsRUFHVEcsU0FBUyxLQUFLLEtBQWQsR0FBc0Isb0NBQXRCLEdBQTZELEVBSHBELENBRmI7SUFPRSxPQUFPLEVBQUVMLE9BUFg7SUFRRSxRQUFRLEVBQUUsQ0FSWjtJQVNFLElBQUksRUFBQztFQVRQLEdBV0dPLElBWEgsQ0FERjtBQWVELENBdkJEOztBQXlCQVIsaUJBQWlCLENBQUNVLFlBQWxCLEdBQWlDO0VBQy9CVCxPQUFPLEVBQUVVO0FBRHNCLENBQWpDO0FBSUFYLGlCQUFpQixDQUFDWSxXQUFsQixHQUFnQyxtQkFBaEM7QUFFQVosaUJBQWlCLENBQUNhLFNBQWxCLEdBQThCO0VBQzVCWixPQUFPLEVBQUVhLGtCQUFBLENBQVVDO0FBRFMsQ0FBOUI7ZUFJZWYsaUIifQ==