"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _InlineMarkdown = _interopRequireDefault(require("../../../Utils/InlineMarkdown"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;
var MARKDOWN_REFERENCES = ['RETRY'];

var SendFailedRetry = function SendFailedRetry(_ref) {
  var onRetryClick = _ref.onRetryClick;
  var handleReference = (0, _react.useCallback)(function (_ref2) {
    var data = _ref2.data;
    return data === 'RETRY' && onRetryClick();
  }, [onRetryClick]);
  var localize = useLocalizer();
  var sendFailedText = localize('ACTIVITY_STATUS_SEND_FAILED_RETRY');
  return /*#__PURE__*/_react.default.createElement(_InlineMarkdown.default, {
    onReference: handleReference,
    references: MARKDOWN_REFERENCES
  }, sendFailedText);
};

SendFailedRetry.propTypes = {
  onRetryClick: _propTypes.default.func.isRequired
};
var _default = SendFailedRetry;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VMb2NhbGl6ZXIiLCJob29rcyIsIk1BUktET1dOX1JFRkVSRU5DRVMiLCJTZW5kRmFpbGVkUmV0cnkiLCJvblJldHJ5Q2xpY2siLCJoYW5kbGVSZWZlcmVuY2UiLCJ1c2VDYWxsYmFjayIsImRhdGEiLCJsb2NhbGl6ZSIsInNlbmRGYWlsZWRUZXh0IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiZnVuYyIsImlzUmVxdWlyZWQiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9NaWRkbGV3YXJlL0FjdGl2aXR5U3RhdHVzL1NlbmRTdGF0dXMvU2VuZEZhaWxlZFJldHJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhvb2tzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBJbmxpbmVNYXJrZG93biBmcm9tICcuLi8uLi8uLi9VdGlscy9JbmxpbmVNYXJrZG93bic7XG5cbmNvbnN0IHsgdXNlTG9jYWxpemVyIH0gPSBob29rcztcblxuY29uc3QgTUFSS0RPV05fUkVGRVJFTkNFUyA9IFsnUkVUUlknXTtcblxuY29uc3QgU2VuZEZhaWxlZFJldHJ5ID0gKHsgb25SZXRyeUNsaWNrIH0pID0+IHtcbiAgY29uc3QgaGFuZGxlUmVmZXJlbmNlID0gdXNlQ2FsbGJhY2soKHsgZGF0YSB9KSA9PiBkYXRhID09PSAnUkVUUlknICYmIG9uUmV0cnlDbGljaygpLCBbb25SZXRyeUNsaWNrXSk7XG4gIGNvbnN0IGxvY2FsaXplID0gdXNlTG9jYWxpemVyKCk7XG5cbiAgY29uc3Qgc2VuZEZhaWxlZFRleHQgPSBsb2NhbGl6ZSgnQUNUSVZJVFlfU1RBVFVTX1NFTkRfRkFJTEVEX1JFVFJZJyk7XG5cbiAgcmV0dXJuIChcbiAgICA8SW5saW5lTWFya2Rvd24gb25SZWZlcmVuY2U9e2hhbmRsZVJlZmVyZW5jZX0gcmVmZXJlbmNlcz17TUFSS0RPV05fUkVGRVJFTkNFU30+XG4gICAgICB7c2VuZEZhaWxlZFRleHR9XG4gICAgPC9JbmxpbmVNYXJrZG93bj5cbiAgKTtcbn07XG5cblNlbmRGYWlsZWRSZXRyeS5wcm9wVHlwZXMgPSB7XG4gIG9uUmV0cnlDbGljazogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgU2VuZEZhaWxlZFJldHJ5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7QUFFQSxJQUFRQSxZQUFSLEdBQXlCQyw2QkFBekIsQ0FBUUQsWUFBUjtBQUVBLElBQU1FLG1CQUFtQixHQUFHLENBQUMsT0FBRCxDQUE1Qjs7QUFFQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLE9BQXNCO0VBQUEsSUFBbkJDLFlBQW1CLFFBQW5CQSxZQUFtQjtFQUM1QyxJQUFNQyxlQUFlLEdBQUcsSUFBQUMsa0JBQUEsRUFBWTtJQUFBLElBQUdDLElBQUgsU0FBR0EsSUFBSDtJQUFBLE9BQWNBLElBQUksS0FBSyxPQUFULElBQW9CSCxZQUFZLEVBQTlDO0VBQUEsQ0FBWixFQUE4RCxDQUFDQSxZQUFELENBQTlELENBQXhCO0VBQ0EsSUFBTUksUUFBUSxHQUFHUixZQUFZLEVBQTdCO0VBRUEsSUFBTVMsY0FBYyxHQUFHRCxRQUFRLENBQUMsbUNBQUQsQ0FBL0I7RUFFQSxvQkFDRSw2QkFBQyx1QkFBRDtJQUFnQixXQUFXLEVBQUVILGVBQTdCO0lBQThDLFVBQVUsRUFBRUg7RUFBMUQsR0FDR08sY0FESCxDQURGO0FBS0QsQ0FYRDs7QUFhQU4sZUFBZSxDQUFDTyxTQUFoQixHQUE0QjtFQUMxQk4sWUFBWSxFQUFFTyxrQkFBQSxDQUFVQyxJQUFWLENBQWVDO0FBREgsQ0FBNUI7ZUFJZVYsZSJ9