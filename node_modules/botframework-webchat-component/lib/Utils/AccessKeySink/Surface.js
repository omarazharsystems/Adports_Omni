"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _firstTabbableDescendant = require("../firstTabbableDescendant");

var _Context = _interopRequireDefault(require("./internal/Context"));

var _useNavigatorPlatform3 = _interopRequireDefault(require("../../hooks/internal/useNavigatorPlatform"));

var _excluded = ["children"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Surface = function Surface(_ref) {
  var children = _ref.children,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  var _useNavigatorPlatform = (0, _useNavigatorPlatform3.default)(),
      _useNavigatorPlatform2 = _slicedToArray(_useNavigatorPlatform, 1),
      apple = _useNavigatorPlatform2[0].apple;

  var contextRef = (0, _react.useRef)({
    focii: []
  });
  var handleKeyUp = (0, _react.useCallback)(function (event) {
    var altKey = event.altKey,
        ctrlKey = event.ctrlKey,
        key = event.key,
        shiftKey = event.shiftKey; // On Apple, most modern browsers use CTRL + OPTION as modifiers.
    // Otherwise, we use ALT + SHIFT as modifierse.

    if (altKey && (apple ? ctrlKey : shiftKey)) {
      var focii = contextRef.current.focii.filter(function (entry) {
        return entry.keys.includes(key);
      });
      var currentFocus = focii.findIndex(function (_ref2) {
        var current = _ref2.ref.current;
        return current === document.activeElement || current.contains(document.activeElement);
      });
      var nextFocus = focii[(currentFocus + 1) % focii.length];

      if (nextFocus) {
        event.preventDefault();
        event.stopPropagation();
        var tabbable = (0, _firstTabbableDescendant.orSelf)(nextFocus.ref.current);
        tabbable && tabbable.focus();
      }
    }
  }, [apple]);
  return /*#__PURE__*/_react.default.createElement(_Context.default.Provider, {
    value: contextRef.current
  }, /*#__PURE__*/_react.default.createElement("div", _extends({
    onKeyUp: handleKeyUp
  }, otherProps), children));
};

Surface.defaultProps = {
  children: undefined
};
Surface.propTypes = {
  children: _propTypes.default.any
};
var _default = Surface;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdXJmYWNlIiwiY2hpbGRyZW4iLCJvdGhlclByb3BzIiwidXNlTmF2aWdhdG9yUGxhdGZvcm0iLCJhcHBsZSIsImNvbnRleHRSZWYiLCJ1c2VSZWYiLCJmb2NpaSIsImhhbmRsZUtleVVwIiwidXNlQ2FsbGJhY2siLCJldmVudCIsImFsdEtleSIsImN0cmxLZXkiLCJrZXkiLCJzaGlmdEtleSIsImN1cnJlbnQiLCJmaWx0ZXIiLCJlbnRyeSIsImtleXMiLCJpbmNsdWRlcyIsImN1cnJlbnRGb2N1cyIsImZpbmRJbmRleCIsInJlZiIsImRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsImNvbnRhaW5zIiwibmV4dEZvY3VzIiwibGVuZ3RoIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJ0YWJiYWJsZSIsImZpcnN0VGFiYmFibGVEZXNjZW5kYW50T3JTZWxmIiwiZm9jdXMiLCJkZWZhdWx0UHJvcHMiLCJ1bmRlZmluZWQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhbnkiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9VdGlscy9BY2Nlc3NLZXlTaW5rL1N1cmZhY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBvclNlbGYgYXMgZmlyc3RUYWJiYWJsZURlc2NlbmRhbnRPclNlbGYgfSBmcm9tICcuLi9maXJzdFRhYmJhYmxlRGVzY2VuZGFudCc7XG5pbXBvcnQgQWNjZXNzS2V5U2lua0NvbnRleHQgZnJvbSAnLi9pbnRlcm5hbC9Db250ZXh0JztcbmltcG9ydCB1c2VOYXZpZ2F0b3JQbGF0Zm9ybSBmcm9tICcuLi8uLi9ob29rcy9pbnRlcm5hbC91c2VOYXZpZ2F0b3JQbGF0Zm9ybSc7XG5cbmNvbnN0IFN1cmZhY2UgPSAoeyBjaGlsZHJlbiwgLi4ub3RoZXJQcm9wcyB9KSA9PiB7XG4gIGNvbnN0IFt7IGFwcGxlIH1dID0gdXNlTmF2aWdhdG9yUGxhdGZvcm0oKTtcbiAgY29uc3QgY29udGV4dFJlZiA9IHVzZVJlZih7IGZvY2lpOiBbXSB9KTtcblxuICBjb25zdCBoYW5kbGVLZXlVcCA9IHVzZUNhbGxiYWNrKFxuICAgIGV2ZW50ID0+IHtcbiAgICAgIGNvbnN0IHsgYWx0S2V5LCBjdHJsS2V5LCBrZXksIHNoaWZ0S2V5IH0gPSBldmVudDtcblxuICAgICAgLy8gT24gQXBwbGUsIG1vc3QgbW9kZXJuIGJyb3dzZXJzIHVzZSBDVFJMICsgT1BUSU9OIGFzIG1vZGlmaWVycy5cbiAgICAgIC8vIE90aGVyd2lzZSwgd2UgdXNlIEFMVCArIFNISUZUIGFzIG1vZGlmaWVyc2UuXG4gICAgICBpZiAoYWx0S2V5ICYmIChhcHBsZSA/IGN0cmxLZXkgOiBzaGlmdEtleSkpIHtcbiAgICAgICAgY29uc3QgZm9jaWkgPSBjb250ZXh0UmVmLmN1cnJlbnQuZm9jaWkuZmlsdGVyKGVudHJ5ID0+IGVudHJ5LmtleXMuaW5jbHVkZXMoa2V5KSk7XG5cbiAgICAgICAgY29uc3QgY3VycmVudEZvY3VzID0gZm9jaWkuZmluZEluZGV4KFxuICAgICAgICAgICh7IHJlZjogeyBjdXJyZW50IH0gfSkgPT4gY3VycmVudCA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCB8fCBjdXJyZW50LmNvbnRhaW5zKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IG5leHRGb2N1cyA9IGZvY2lpWyhjdXJyZW50Rm9jdXMgKyAxKSAlIGZvY2lpLmxlbmd0aF07XG5cbiAgICAgICAgaWYgKG5leHRGb2N1cykge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgICAgICBjb25zdCB0YWJiYWJsZSA9IGZpcnN0VGFiYmFibGVEZXNjZW5kYW50T3JTZWxmKG5leHRGb2N1cy5yZWYuY3VycmVudCk7XG5cbiAgICAgICAgICB0YWJiYWJsZSAmJiB0YWJiYWJsZS5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBbYXBwbGVdXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8QWNjZXNzS2V5U2lua0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2NvbnRleHRSZWYuY3VycmVudH0+XG4gICAgICA8ZGl2IG9uS2V5VXA9e2hhbmRsZUtleVVwfSB7Li4ub3RoZXJQcm9wc30+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgIDwvQWNjZXNzS2V5U2lua0NvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5TdXJmYWNlLmRlZmF1bHRQcm9wcyA9IHtcbiAgY2hpbGRyZW46IHVuZGVmaW5lZFxufTtcblxuU3VyZmFjZS5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdXJmYWNlO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFVLE9BQWlDO0VBQUEsSUFBOUJDLFFBQThCLFFBQTlCQSxRQUE4QjtFQUFBLElBQWpCQyxVQUFpQjs7RUFDL0MsNEJBQW9CLElBQUFDLDhCQUFBLEdBQXBCO0VBQUE7RUFBQSxJQUFTQyxLQUFULDZCQUFTQSxLQUFUOztFQUNBLElBQU1DLFVBQVUsR0FBRyxJQUFBQyxhQUFBLEVBQU87SUFBRUMsS0FBSyxFQUFFO0VBQVQsQ0FBUCxDQUFuQjtFQUVBLElBQU1DLFdBQVcsR0FBRyxJQUFBQyxrQkFBQSxFQUNsQixVQUFBQyxLQUFLLEVBQUk7SUFDUCxJQUFRQyxNQUFSLEdBQTJDRCxLQUEzQyxDQUFRQyxNQUFSO0lBQUEsSUFBZ0JDLE9BQWhCLEdBQTJDRixLQUEzQyxDQUFnQkUsT0FBaEI7SUFBQSxJQUF5QkMsR0FBekIsR0FBMkNILEtBQTNDLENBQXlCRyxHQUF6QjtJQUFBLElBQThCQyxRQUE5QixHQUEyQ0osS0FBM0MsQ0FBOEJJLFFBQTlCLENBRE8sQ0FHUDtJQUNBOztJQUNBLElBQUlILE1BQU0sS0FBS1AsS0FBSyxHQUFHUSxPQUFILEdBQWFFLFFBQXZCLENBQVYsRUFBNEM7TUFDMUMsSUFBTVAsS0FBSyxHQUFHRixVQUFVLENBQUNVLE9BQVgsQ0FBbUJSLEtBQW5CLENBQXlCUyxNQUF6QixDQUFnQyxVQUFBQyxLQUFLO1FBQUEsT0FBSUEsS0FBSyxDQUFDQyxJQUFOLENBQVdDLFFBQVgsQ0FBb0JOLEdBQXBCLENBQUo7TUFBQSxDQUFyQyxDQUFkO01BRUEsSUFBTU8sWUFBWSxHQUFHYixLQUFLLENBQUNjLFNBQU4sQ0FDbkI7UUFBQSxJQUFVTixPQUFWLFNBQUdPLEdBQUgsQ0FBVVAsT0FBVjtRQUFBLE9BQTBCQSxPQUFPLEtBQUtRLFFBQVEsQ0FBQ0MsYUFBckIsSUFBc0NULE9BQU8sQ0FBQ1UsUUFBUixDQUFpQkYsUUFBUSxDQUFDQyxhQUExQixDQUFoRTtNQUFBLENBRG1CLENBQXJCO01BR0EsSUFBTUUsU0FBUyxHQUFHbkIsS0FBSyxDQUFDLENBQUNhLFlBQVksR0FBRyxDQUFoQixJQUFxQmIsS0FBSyxDQUFDb0IsTUFBNUIsQ0FBdkI7O01BRUEsSUFBSUQsU0FBSixFQUFlO1FBQ2JoQixLQUFLLENBQUNrQixjQUFOO1FBQ0FsQixLQUFLLENBQUNtQixlQUFOO1FBRUEsSUFBTUMsUUFBUSxHQUFHLElBQUFDLCtCQUFBLEVBQThCTCxTQUFTLENBQUNKLEdBQVYsQ0FBY1AsT0FBNUMsQ0FBakI7UUFFQWUsUUFBUSxJQUFJQSxRQUFRLENBQUNFLEtBQVQsRUFBWjtNQUNEO0lBQ0Y7RUFDRixDQXZCaUIsRUF3QmxCLENBQUM1QixLQUFELENBeEJrQixDQUFwQjtFQTJCQSxvQkFDRSw2QkFBQyxnQkFBRCxDQUFzQixRQUF0QjtJQUErQixLQUFLLEVBQUVDLFVBQVUsQ0FBQ1U7RUFBakQsZ0JBQ0U7SUFBSyxPQUFPLEVBQUVQO0VBQWQsR0FBK0JOLFVBQS9CLEdBQ0dELFFBREgsQ0FERixDQURGO0FBT0QsQ0F0Q0Q7O0FBd0NBRCxPQUFPLENBQUNpQyxZQUFSLEdBQXVCO0VBQ3JCaEMsUUFBUSxFQUFFaUM7QUFEVyxDQUF2QjtBQUlBbEMsT0FBTyxDQUFDbUMsU0FBUixHQUFvQjtFQUNsQmxDLFFBQVEsRUFBRW1DLGtCQUFBLENBQVVDO0FBREYsQ0FBcEI7ZUFJZXJDLE8ifQ==