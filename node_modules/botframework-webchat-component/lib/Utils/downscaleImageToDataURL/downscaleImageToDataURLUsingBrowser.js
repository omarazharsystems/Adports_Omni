"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = downscaleImageToDataURLUsingBrowser;

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function keepAspectRatio(width, height, maxWidth, maxHeight) {
  if (width < maxWidth && height < maxHeight) {
    // Photo is smaller than both maximum dimensions, take it as-is
    return {
      height: height,
      width: width
    };
  }

  var aspectRatio = width / height;

  if (aspectRatio > maxWidth / maxHeight) {
    // Photo is wider than maximum dimension, downscale it based on maxWidth.
    return {
      height: maxWidth / aspectRatio,
      width: maxWidth
    };
  } // Photo is taller than maximum dimension, downscale it based on maxHeight.


  return {
    height: maxHeight,
    width: maxHeight * aspectRatio
  };
}

function createCanvas(width, height) {
  var canvas = document.createElement('canvas');
  canvas.height = height;
  canvas.width = width;
  return canvas;
}

function loadImageFromBlob(blob) {
  var blobURL = URL.createObjectURL(blob);
  return new Promise(function (resolve, reject) {
    var image = document.createElement('img');
    image.addEventListener('error', function (_ref) {
      var error = _ref.error;
      return reject(error);
    });
    image.addEventListener('load', function () {
      return resolve(image);
    });
    image.setAttribute('src', blobURL);
  }).finally(function () {
    URL.revokeObjectURL(blobURL);
  });
}

function downscaleImageToDataURLUsingBrowser(_x, _x2, _x3, _x4, _x5) {
  return _downscaleImageToDataURLUsingBrowser.apply(this, arguments);
}

function _downscaleImageToDataURLUsingBrowser() {
  _downscaleImageToDataURLUsingBrowser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(blob, maxWidth, maxHeight, type, quality) {
    var image, _keepAspectRatio, height, width, canvas, context;

    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return loadImageFromBlob(blob);

          case 2:
            image = _context.sent;
            _keepAspectRatio = keepAspectRatio(image.width, image.height, maxWidth, maxHeight), height = _keepAspectRatio.height, width = _keepAspectRatio.width;
            canvas = createCanvas(width, height);
            context = canvas.getContext('2d');
            context.drawImage(image, 0, 0, width, height);
            return _context.abrupt("return", canvas.toDataURL(type, quality));

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _downscaleImageToDataURLUsingBrowser.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJrZWVwQXNwZWN0UmF0aW8iLCJ3aWR0aCIsImhlaWdodCIsIm1heFdpZHRoIiwibWF4SGVpZ2h0IiwiYXNwZWN0UmF0aW8iLCJjcmVhdGVDYW52YXMiLCJjYW52YXMiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJsb2FkSW1hZ2VGcm9tQmxvYiIsImJsb2IiLCJibG9iVVJMIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpbWFnZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJlcnJvciIsInNldEF0dHJpYnV0ZSIsImZpbmFsbHkiLCJyZXZva2VPYmplY3RVUkwiLCJkb3duc2NhbGVJbWFnZVRvRGF0YVVSTFVzaW5nQnJvd3NlciIsInR5cGUiLCJxdWFsaXR5IiwiY29udGV4dCIsImdldENvbnRleHQiLCJkcmF3SW1hZ2UiLCJ0b0RhdGFVUkwiXSwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9VdGlscy9kb3duc2NhbGVJbWFnZVRvRGF0YVVSTC9kb3duc2NhbGVJbWFnZVRvRGF0YVVSTFVzaW5nQnJvd3Nlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBrZWVwQXNwZWN0UmF0aW8od2lkdGgsIGhlaWdodCwgbWF4V2lkdGgsIG1heEhlaWdodCkge1xuICBpZiAod2lkdGggPCBtYXhXaWR0aCAmJiBoZWlnaHQgPCBtYXhIZWlnaHQpIHtcbiAgICAvLyBQaG90byBpcyBzbWFsbGVyIHRoYW4gYm90aCBtYXhpbXVtIGRpbWVuc2lvbnMsIHRha2UgaXQgYXMtaXNcbiAgICByZXR1cm4ge1xuICAgICAgaGVpZ2h0LFxuICAgICAgd2lkdGhcbiAgICB9O1xuICB9XG5cbiAgY29uc3QgYXNwZWN0UmF0aW8gPSB3aWR0aCAvIGhlaWdodDtcblxuICBpZiAoYXNwZWN0UmF0aW8gPiBtYXhXaWR0aCAvIG1heEhlaWdodCkge1xuICAgIC8vIFBob3RvIGlzIHdpZGVyIHRoYW4gbWF4aW11bSBkaW1lbnNpb24sIGRvd25zY2FsZSBpdCBiYXNlZCBvbiBtYXhXaWR0aC5cbiAgICByZXR1cm4ge1xuICAgICAgaGVpZ2h0OiBtYXhXaWR0aCAvIGFzcGVjdFJhdGlvLFxuICAgICAgd2lkdGg6IG1heFdpZHRoXG4gICAgfTtcbiAgfVxuXG4gIC8vIFBob3RvIGlzIHRhbGxlciB0aGFuIG1heGltdW0gZGltZW5zaW9uLCBkb3duc2NhbGUgaXQgYmFzZWQgb24gbWF4SGVpZ2h0LlxuICByZXR1cm4ge1xuICAgIGhlaWdodDogbWF4SGVpZ2h0LFxuICAgIHdpZHRoOiBtYXhIZWlnaHQgKiBhc3BlY3RSYXRpb1xuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVDYW52YXMod2lkdGgsIGhlaWdodCkge1xuICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcblxuICBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICBjYW52YXMud2lkdGggPSB3aWR0aDtcblxuICByZXR1cm4gY2FudmFzO1xufVxuXG5mdW5jdGlvbiBsb2FkSW1hZ2VGcm9tQmxvYihibG9iKSB7XG4gIGNvbnN0IGJsb2JVUkwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcblxuICAgIGltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgKHsgZXJyb3IgfSkgPT4gcmVqZWN0KGVycm9yKSk7XG4gICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHJlc29sdmUoaW1hZ2UpKTtcbiAgICBpbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGJsb2JVUkwpO1xuICB9KS5maW5hbGx5KCgpID0+IHtcbiAgICBVUkwucmV2b2tlT2JqZWN0VVJMKGJsb2JVUkwpO1xuICB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gZG93bnNjYWxlSW1hZ2VUb0RhdGFVUkxVc2luZ0Jyb3dzZXIoYmxvYiwgbWF4V2lkdGgsIG1heEhlaWdodCwgdHlwZSwgcXVhbGl0eSkge1xuICBjb25zdCBpbWFnZSA9IGF3YWl0IGxvYWRJbWFnZUZyb21CbG9iKGJsb2IpO1xuICBjb25zdCB7IGhlaWdodCwgd2lkdGggfSA9IGtlZXBBc3BlY3RSYXRpbyhpbWFnZS53aWR0aCwgaW1hZ2UuaGVpZ2h0LCBtYXhXaWR0aCwgbWF4SGVpZ2h0KTtcbiAgY29uc3QgY2FudmFzID0gY3JlYXRlQ2FudmFzKHdpZHRoLCBoZWlnaHQpO1xuICBjb25zdCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG5cbiAgY29udGV4dC5kcmF3SW1hZ2UoaW1hZ2UsIDAsIDAsIHdpZHRoLCBoZWlnaHQpO1xuXG4gIHJldHVybiBjYW52YXMudG9EYXRhVVJMKHR5cGUsIHF1YWxpdHkpO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7K0NBQ0Esb0o7Ozs7OztBQURBLFNBQVNBLGVBQVQsQ0FBeUJDLEtBQXpCLEVBQWdDQyxNQUFoQyxFQUF3Q0MsUUFBeEMsRUFBa0RDLFNBQWxELEVBQTZEO0VBQzNELElBQUlILEtBQUssR0FBR0UsUUFBUixJQUFvQkQsTUFBTSxHQUFHRSxTQUFqQyxFQUE0QztJQUMxQztJQUNBLE9BQU87TUFDTEYsTUFBTSxFQUFOQSxNQURLO01BRUxELEtBQUssRUFBTEE7SUFGSyxDQUFQO0VBSUQ7O0VBRUQsSUFBTUksV0FBVyxHQUFHSixLQUFLLEdBQUdDLE1BQTVCOztFQUVBLElBQUlHLFdBQVcsR0FBR0YsUUFBUSxHQUFHQyxTQUE3QixFQUF3QztJQUN0QztJQUNBLE9BQU87TUFDTEYsTUFBTSxFQUFFQyxRQUFRLEdBQUdFLFdBRGQ7TUFFTEosS0FBSyxFQUFFRTtJQUZGLENBQVA7RUFJRCxDQWpCMEQsQ0FtQjNEOzs7RUFDQSxPQUFPO0lBQ0xELE1BQU0sRUFBRUUsU0FESDtJQUVMSCxLQUFLLEVBQUVHLFNBQVMsR0FBR0M7RUFGZCxDQUFQO0FBSUQ7O0FBRUQsU0FBU0MsWUFBVCxDQUFzQkwsS0FBdEIsRUFBNkJDLE1BQTdCLEVBQXFDO0VBQ25DLElBQU1LLE1BQU0sR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLFFBQXZCLENBQWY7RUFFQUYsTUFBTSxDQUFDTCxNQUFQLEdBQWdCQSxNQUFoQjtFQUNBSyxNQUFNLENBQUNOLEtBQVAsR0FBZUEsS0FBZjtFQUVBLE9BQU9NLE1BQVA7QUFDRDs7QUFFRCxTQUFTRyxpQkFBVCxDQUEyQkMsSUFBM0IsRUFBaUM7RUFDL0IsSUFBTUMsT0FBTyxHQUFHQyxHQUFHLENBQUNDLGVBQUosQ0FBb0JILElBQXBCLENBQWhCO0VBRUEsT0FBTyxJQUFJSSxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0lBQ3RDLElBQU1DLEtBQUssR0FBR1YsUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQXZCLENBQWQ7SUFFQVMsS0FBSyxDQUFDQyxnQkFBTixDQUF1QixPQUF2QixFQUFnQztNQUFBLElBQUdDLEtBQUgsUUFBR0EsS0FBSDtNQUFBLE9BQWVILE1BQU0sQ0FBQ0csS0FBRCxDQUFyQjtJQUFBLENBQWhDO0lBQ0FGLEtBQUssQ0FBQ0MsZ0JBQU4sQ0FBdUIsTUFBdkIsRUFBK0I7TUFBQSxPQUFNSCxPQUFPLENBQUNFLEtBQUQsQ0FBYjtJQUFBLENBQS9CO0lBQ0FBLEtBQUssQ0FBQ0csWUFBTixDQUFtQixLQUFuQixFQUEwQlQsT0FBMUI7RUFDRCxDQU5NLEVBTUpVLE9BTkksQ0FNSSxZQUFNO0lBQ2ZULEdBQUcsQ0FBQ1UsZUFBSixDQUFvQlgsT0FBcEI7RUFDRCxDQVJNLENBQVA7QUFTRDs7U0FFNkJZLG1DOzs7OztvR0FBZixpQkFBbURiLElBQW5ELEVBQXlEUixRQUF6RCxFQUFtRUMsU0FBbkUsRUFBOEVxQixJQUE5RSxFQUFvRkMsT0FBcEY7SUFBQTs7SUFBQTtNQUFBO1FBQUE7VUFBQTtZQUFBO1lBQUEsT0FDT2hCLGlCQUFpQixDQUFDQyxJQUFELENBRHhCOztVQUFBO1lBQ1BPLEtBRE87WUFBQSxtQkFFYWxCLGVBQWUsQ0FBQ2tCLEtBQUssQ0FBQ2pCLEtBQVAsRUFBY2lCLEtBQUssQ0FBQ2hCLE1BQXBCLEVBQTRCQyxRQUE1QixFQUFzQ0MsU0FBdEMsQ0FGNUIsRUFFTEYsTUFGSyxvQkFFTEEsTUFGSyxFQUVHRCxLQUZILG9CQUVHQSxLQUZIO1lBR1BNLE1BSE8sR0FHRUQsWUFBWSxDQUFDTCxLQUFELEVBQVFDLE1BQVIsQ0FIZDtZQUlQeUIsT0FKTyxHQUlHcEIsTUFBTSxDQUFDcUIsVUFBUCxDQUFrQixJQUFsQixDQUpIO1lBTWJELE9BQU8sQ0FBQ0UsU0FBUixDQUFrQlgsS0FBbEIsRUFBeUIsQ0FBekIsRUFBNEIsQ0FBNUIsRUFBK0JqQixLQUEvQixFQUFzQ0MsTUFBdEM7WUFOYSxpQ0FRTkssTUFBTSxDQUFDdUIsU0FBUCxDQUFpQkwsSUFBakIsRUFBdUJDLE9BQXZCLENBUk07O1VBQUE7VUFBQTtZQUFBO1FBQUE7TUFBQTtJQUFBO0VBQUEsQyJ9