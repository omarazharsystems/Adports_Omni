"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = scrollIntoViewWithBlockNearest;

var _computeScrollIntoView = _interopRequireDefault(require("compute-scroll-into-view"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * Calls `targetElement.scrollIntoView({ block: 'nearest' })`.
 *
 * If browser do not support options for `scrollIntoView`, fallback to polyfill.
 */
function scrollIntoViewWithBlockNearest(targetElement) {
  // Checks if `scrollIntoView` support options or not.
  // - https://github.com/Modernizr/Modernizr/issues/1568#issuecomment-419457972
  // - https://stackoverflow.com/questions/46919627/is-it-possible-to-test-for-scrollintoview-browser-compatibility
  if ('scrollBehavior' in document.documentElement.style) {
    return targetElement.scrollIntoView({
      block: 'nearest'
    });
  } // We should only move transcript scrollable, and not other scrollable, such as document.body which is from the hosting page.


  var _computeScrollIntoVie = (0, _computeScrollIntoView.default)(targetElement, {
    block: 'nearest'
  }),
      _computeScrollIntoVie2 = _slicedToArray(_computeScrollIntoVie, 1),
      action = _computeScrollIntoVie2[0];

  action.el.scrollTop = action.top;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzY3JvbGxJbnRvVmlld1dpdGhCbG9ja05lYXJlc3QiLCJ0YXJnZXRFbGVtZW50IiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJzdHlsZSIsInNjcm9sbEludG9WaWV3IiwiYmxvY2siLCJjb21wdXRlU2Nyb2xsSW50b1ZpZXciLCJhY3Rpb24iLCJlbCIsInNjcm9sbFRvcCIsInRvcCJdLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL1V0aWxzL3Njcm9sbEludG9WaWV3V2l0aEJsb2NrTmVhcmVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29tcHV0ZVNjcm9sbEludG9WaWV3IGZyb20gJ2NvbXB1dGUtc2Nyb2xsLWludG8tdmlldyc7XG5cbi8qKlxuICogQ2FsbHMgYHRhcmdldEVsZW1lbnQuc2Nyb2xsSW50b1ZpZXcoeyBibG9jazogJ25lYXJlc3QnIH0pYC5cbiAqXG4gKiBJZiBicm93c2VyIGRvIG5vdCBzdXBwb3J0IG9wdGlvbnMgZm9yIGBzY3JvbGxJbnRvVmlld2AsIGZhbGxiYWNrIHRvIHBvbHlmaWxsLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzY3JvbGxJbnRvVmlld1dpdGhCbG9ja05lYXJlc3QodGFyZ2V0RWxlbWVudDogSFRNTEVsZW1lbnQpOiB2b2lkIHtcbiAgLy8gQ2hlY2tzIGlmIGBzY3JvbGxJbnRvVmlld2Agc3VwcG9ydCBvcHRpb25zIG9yIG5vdC5cbiAgLy8gLSBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9pc3N1ZXMvMTU2OCNpc3N1ZWNvbW1lbnQtNDE5NDU3OTcyXG4gIC8vIC0gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDY5MTk2MjcvaXMtaXQtcG9zc2libGUtdG8tdGVzdC1mb3Itc2Nyb2xsaW50b3ZpZXctYnJvd3Nlci1jb21wYXRpYmlsaXR5XG4gIGlmICgnc2Nyb2xsQmVoYXZpb3InIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZSkge1xuICAgIHJldHVybiB0YXJnZXRFbGVtZW50LnNjcm9sbEludG9WaWV3KHsgYmxvY2s6ICduZWFyZXN0JyB9KTtcbiAgfVxuXG4gIC8vIFdlIHNob3VsZCBvbmx5IG1vdmUgdHJhbnNjcmlwdCBzY3JvbGxhYmxlLCBhbmQgbm90IG90aGVyIHNjcm9sbGFibGUsIHN1Y2ggYXMgZG9jdW1lbnQuYm9keSB3aGljaCBpcyBmcm9tIHRoZSBob3N0aW5nIHBhZ2UuXG4gIGNvbnN0IFthY3Rpb25dID0gY29tcHV0ZVNjcm9sbEludG9WaWV3KHRhcmdldEVsZW1lbnQsIHsgYmxvY2s6ICduZWFyZXN0JyB9KTtcblxuICBhY3Rpb24uZWwuc2Nyb2xsVG9wID0gYWN0aW9uLnRvcDtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlLFNBQVNBLDhCQUFULENBQXdDQyxhQUF4QyxFQUEwRTtFQUN2RjtFQUNBO0VBQ0E7RUFDQSxJQUFJLG9CQUFvQkMsUUFBUSxDQUFDQyxlQUFULENBQXlCQyxLQUFqRCxFQUF3RDtJQUN0RCxPQUFPSCxhQUFhLENBQUNJLGNBQWQsQ0FBNkI7TUFBRUMsS0FBSyxFQUFFO0lBQVQsQ0FBN0IsQ0FBUDtFQUNELENBTnNGLENBUXZGOzs7RUFDQSw0QkFBaUIsSUFBQUMsOEJBQUEsRUFBc0JOLGFBQXRCLEVBQXFDO0lBQUVLLEtBQUssRUFBRTtFQUFULENBQXJDLENBQWpCO0VBQUE7RUFBQSxJQUFPRSxNQUFQOztFQUVBQSxNQUFNLENBQUNDLEVBQVAsQ0FBVUMsU0FBVixHQUFzQkYsTUFBTSxDQUFDRyxHQUE3QjtBQUNEIn0=