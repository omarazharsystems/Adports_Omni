"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createSagas;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _clearSuggestedActionsOnPostActivitySaga = _interopRequireDefault(require("./sagas/clearSuggestedActionsOnPostActivitySaga"));

var _connectionStatusToNotificationSaga = _interopRequireDefault(require("./sagas/connectionStatusToNotificationSaga"));

var _connectionStatusUpdateSaga = _interopRequireDefault(require("./sagas/connectionStatusUpdateSaga"));

var _connectSaga = _interopRequireDefault(require("./sagas/connectSaga"));

var _detectSlowConnectionSaga = _interopRequireDefault(require("./sagas/detectSlowConnectionSaga"));

var _emitTypingIndicatorToPostActivitySaga = _interopRequireDefault(require("./sagas/emitTypingIndicatorToPostActivitySaga"));

var _markAllAsSpokenOnStopSpeakActivitySaga = _interopRequireDefault(require("./sagas/markAllAsSpokenOnStopSpeakActivitySaga"));

var _observeActivitySaga = _interopRequireDefault(require("./sagas/observeActivitySaga"));

var _postActivitySaga = _interopRequireDefault(require("./sagas/postActivitySaga"));

var _queueIncomingActivitySaga = _interopRequireDefault(require("./sagas/queueIncomingActivitySaga"));

var _sendEventToPostActivitySaga = _interopRequireDefault(require("./sagas/sendEventToPostActivitySaga"));

var _sendFilesToPostActivitySaga = _interopRequireDefault(require("./sagas/sendFilesToPostActivitySaga"));

var _sendMessageBackToPostActivitySaga = _interopRequireDefault(require("./sagas/sendMessageBackToPostActivitySaga"));

var _sendMessageToPostActivitySaga = _interopRequireDefault(require("./sagas/sendMessageToPostActivitySaga"));

var _sendPostBackToPostActivitySaga = _interopRequireDefault(require("./sagas/sendPostBackToPostActivitySaga"));

var _sendTypingIndicatorOnSetSendBoxSaga = _interopRequireDefault(require("./sagas/sendTypingIndicatorOnSetSendBoxSaga"));

var _speakActivityAndStartDictateOnIncomingActivityFromOthersSaga = _interopRequireDefault(require("./sagas/speakActivityAndStartDictateOnIncomingActivityFromOthersSaga"));

var _startDictateOnSpeakCompleteSaga = _interopRequireDefault(require("./sagas/startDictateOnSpeakCompleteSaga"));

var _startSpeakActivityOnPostActivitySaga = _interopRequireDefault(require("./sagas/startSpeakActivityOnPostActivitySaga"));

var _stopDictateOnCardActionSaga = _interopRequireDefault(require("./sagas/stopDictateOnCardActionSaga"));

var _stopSpeakingActivityOnInputSaga = _interopRequireDefault(require("./sagas/stopSpeakingActivityOnInputSaga"));

var _submitSendBoxSaga = _interopRequireDefault(require("./sagas/submitSendBoxSaga"));

function createSagas(_ref) {
  var ponyfill = _ref.ponyfill;
  return /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _effects.fork)(_clearSuggestedActionsOnPostActivitySaga["default"]);

          case 2:
            _context.next = 4;
            return (0, _effects.fork)(_connectionStatusToNotificationSaga["default"]);

          case 4:
            _context.next = 6;
            return (0, _effects.fork)(_connectionStatusUpdateSaga["default"]);

          case 6:
            _context.next = 8;
            return (0, _effects.fork)(_connectSaga["default"]);

          case 8:
            _context.next = 10;
            return (0, _effects.fork)(_detectSlowConnectionSaga["default"], ponyfill);

          case 10:
            _context.next = 12;
            return (0, _effects.fork)(_emitTypingIndicatorToPostActivitySaga["default"]);

          case 12:
            _context.next = 14;
            return (0, _effects.fork)(_markAllAsSpokenOnStopSpeakActivitySaga["default"]);

          case 14:
            _context.next = 16;
            return (0, _effects.fork)(_observeActivitySaga["default"]);

          case 16:
            _context.next = 18;
            return (0, _effects.fork)(_postActivitySaga["default"], ponyfill);

          case 18:
            _context.next = 20;
            return (0, _effects.fork)(_queueIncomingActivitySaga["default"], ponyfill);

          case 20:
            _context.next = 22;
            return (0, _effects.fork)(_sendEventToPostActivitySaga["default"]);

          case 22:
            _context.next = 24;
            return (0, _effects.fork)(_sendFilesToPostActivitySaga["default"]);

          case 24:
            _context.next = 26;
            return (0, _effects.fork)(_sendMessageBackToPostActivitySaga["default"]);

          case 26:
            _context.next = 28;
            return (0, _effects.fork)(_sendMessageToPostActivitySaga["default"]);

          case 28:
            _context.next = 30;
            return (0, _effects.fork)(_sendPostBackToPostActivitySaga["default"]);

          case 30:
            _context.next = 32;
            return (0, _effects.fork)(_sendTypingIndicatorOnSetSendBoxSaga["default"], ponyfill);

          case 32:
            _context.next = 34;
            return (0, _effects.fork)(_speakActivityAndStartDictateOnIncomingActivityFromOthersSaga["default"]);

          case 34:
            _context.next = 36;
            return (0, _effects.fork)(_startDictateOnSpeakCompleteSaga["default"]);

          case 36:
            _context.next = 38;
            return (0, _effects.fork)(_startSpeakActivityOnPostActivitySaga["default"]);

          case 38:
            _context.next = 40;
            return (0, _effects.fork)(_stopDictateOnCardActionSaga["default"]);

          case 40:
            _context.next = 42;
            return (0, _effects.fork)(_stopSpeakingActivityOnInputSaga["default"]);

          case 42:
            _context.next = 44;
            return (0, _effects.fork)(_submitSendBoxSaga["default"]);

          case 44:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVTYWdhcyIsInBvbnlmaWxsIiwiZm9yayIsImNsZWFyU3VnZ2VzdGVkQWN0aW9uc09uUG9zdEFjdGl2aXR5U2FnYSIsImNvbm5lY3Rpb25TdGF0dXNUb05vdGlmaWNhdGlvblNhZ2EiLCJjb25uZWN0aW9uU3RhdHVzVXBkYXRlU2FnYSIsImNvbm5lY3RTYWdhIiwiZGV0ZWN0U2xvd0Nvbm5lY3Rpb25TYWdhIiwiZW1pdFR5cGluZ0luZGljYXRvclRvUG9zdEFjdGl2aXR5U2FnYSIsIm1hcmtBbGxBc1Nwb2tlbk9uU3RvcFNwZWFrQWN0aXZpdHlTYWdhIiwib2JzZXJ2ZUFjdGl2aXR5U2FnYSIsInBvc3RBY3Rpdml0eVNhZ2EiLCJxdWV1ZUluY29taW5nQWN0aXZpdHlTYWdhIiwic2VuZEV2ZW50VG9Qb3N0QWN0aXZpdHlTYWdhIiwic2VuZEZpbGVzVG9Qb3N0QWN0aXZpdHlTYWdhIiwic2VuZE1lc3NhZ2VCYWNrVG9Qb3N0QWN0aXZpdHlTYWdhIiwic2VuZE1lc3NhZ2VUb1Bvc3RBY3Rpdml0eVNhZ2EiLCJzZW5kUG9zdEJhY2tUb1Bvc3RBY3Rpdml0eVNhZ2EiLCJzZW5kVHlwaW5nSW5kaWNhdG9yT25TZXRTZW5kQm94U2FnYSIsInNwZWFrQWN0aXZpdHlBbmRTdGFydERpY3RhdGVPbkluY29taW5nQWN0aXZpdHlGcm9tT3RoZXJzU2FnYSIsInN0YXJ0RGljdGF0ZU9uU3BlYWtDb21wbGV0ZVNhZ2EiLCJzdGFydFNwZWFrQWN0aXZpdHlPblBvc3RBY3Rpdml0eVNhZ2EiLCJzdG9wRGljdGF0ZU9uQ2FyZEFjdGlvblNhZ2EiLCJzdG9wU3BlYWtpbmdBY3Rpdml0eU9uSW5wdXRTYWdhIiwic3VibWl0U2VuZEJveFNhZ2EiXSwic291cmNlUm9vdCI6ImNvcmU6Ly8vIiwic291cmNlcyI6WyIuLi9zcmMvY3JlYXRlU2FnYXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yayB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5cbmltcG9ydCBjbGVhclN1Z2dlc3RlZEFjdGlvbnNPblBvc3RBY3Rpdml0eVNhZ2EgZnJvbSAnLi9zYWdhcy9jbGVhclN1Z2dlc3RlZEFjdGlvbnNPblBvc3RBY3Rpdml0eVNhZ2EnO1xuaW1wb3J0IGNvbm5lY3Rpb25TdGF0dXNUb05vdGlmaWNhdGlvblNhZ2EgZnJvbSAnLi9zYWdhcy9jb25uZWN0aW9uU3RhdHVzVG9Ob3RpZmljYXRpb25TYWdhJztcbmltcG9ydCBjb25uZWN0aW9uU3RhdHVzVXBkYXRlU2FnYSBmcm9tICcuL3NhZ2FzL2Nvbm5lY3Rpb25TdGF0dXNVcGRhdGVTYWdhJztcbmltcG9ydCBjb25uZWN0U2FnYSBmcm9tICcuL3NhZ2FzL2Nvbm5lY3RTYWdhJztcbmltcG9ydCBkZXRlY3RTbG93Q29ubmVjdGlvblNhZ2EgZnJvbSAnLi9zYWdhcy9kZXRlY3RTbG93Q29ubmVjdGlvblNhZ2EnO1xuaW1wb3J0IGVtaXRUeXBpbmdJbmRpY2F0b3JUb1Bvc3RBY3Rpdml0eVNhZ2EgZnJvbSAnLi9zYWdhcy9lbWl0VHlwaW5nSW5kaWNhdG9yVG9Qb3N0QWN0aXZpdHlTYWdhJztcbmltcG9ydCBtYXJrQWxsQXNTcG9rZW5PblN0b3BTcGVha0FjdGl2aXR5U2FnYSBmcm9tICcuL3NhZ2FzL21hcmtBbGxBc1Nwb2tlbk9uU3RvcFNwZWFrQWN0aXZpdHlTYWdhJztcbmltcG9ydCBvYnNlcnZlQWN0aXZpdHlTYWdhIGZyb20gJy4vc2FnYXMvb2JzZXJ2ZUFjdGl2aXR5U2FnYSc7XG5pbXBvcnQgcG9zdEFjdGl2aXR5U2FnYSBmcm9tICcuL3NhZ2FzL3Bvc3RBY3Rpdml0eVNhZ2EnO1xuaW1wb3J0IHF1ZXVlSW5jb21pbmdBY3Rpdml0eVNhZ2EgZnJvbSAnLi9zYWdhcy9xdWV1ZUluY29taW5nQWN0aXZpdHlTYWdhJztcbmltcG9ydCBzZW5kRXZlbnRUb1Bvc3RBY3Rpdml0eVNhZ2EgZnJvbSAnLi9zYWdhcy9zZW5kRXZlbnRUb1Bvc3RBY3Rpdml0eVNhZ2EnO1xuaW1wb3J0IHNlbmRGaWxlc1RvUG9zdEFjdGl2aXR5U2FnYSBmcm9tICcuL3NhZ2FzL3NlbmRGaWxlc1RvUG9zdEFjdGl2aXR5U2FnYSc7XG5pbXBvcnQgc2VuZE1lc3NhZ2VCYWNrVG9Qb3N0QWN0aXZpdHlTYWdhIGZyb20gJy4vc2FnYXMvc2VuZE1lc3NhZ2VCYWNrVG9Qb3N0QWN0aXZpdHlTYWdhJztcbmltcG9ydCBzZW5kTWVzc2FnZVRvUG9zdEFjdGl2aXR5U2FnYSBmcm9tICcuL3NhZ2FzL3NlbmRNZXNzYWdlVG9Qb3N0QWN0aXZpdHlTYWdhJztcbmltcG9ydCBzZW5kUG9zdEJhY2tUb1Bvc3RBY3Rpdml0eVNhZ2EgZnJvbSAnLi9zYWdhcy9zZW5kUG9zdEJhY2tUb1Bvc3RBY3Rpdml0eVNhZ2EnO1xuaW1wb3J0IHNlbmRUeXBpbmdJbmRpY2F0b3JPblNldFNlbmRCb3hTYWdhIGZyb20gJy4vc2FnYXMvc2VuZFR5cGluZ0luZGljYXRvck9uU2V0U2VuZEJveFNhZ2EnO1xuaW1wb3J0IHNwZWFrQWN0aXZpdHlBbmRTdGFydERpY3RhdGVPbkluY29taW5nQWN0aXZpdHlGcm9tT3RoZXJzU2FnYSBmcm9tICcuL3NhZ2FzL3NwZWFrQWN0aXZpdHlBbmRTdGFydERpY3RhdGVPbkluY29taW5nQWN0aXZpdHlGcm9tT3RoZXJzU2FnYSc7XG5pbXBvcnQgc3RhcnREaWN0YXRlT25TcGVha0NvbXBsZXRlU2FnYSBmcm9tICcuL3NhZ2FzL3N0YXJ0RGljdGF0ZU9uU3BlYWtDb21wbGV0ZVNhZ2EnO1xuaW1wb3J0IHN0YXJ0U3BlYWtBY3Rpdml0eU9uUG9zdEFjdGl2aXR5U2FnYSBmcm9tICcuL3NhZ2FzL3N0YXJ0U3BlYWtBY3Rpdml0eU9uUG9zdEFjdGl2aXR5U2FnYSc7XG5pbXBvcnQgc3RvcERpY3RhdGVPbkNhcmRBY3Rpb25TYWdhIGZyb20gJy4vc2FnYXMvc3RvcERpY3RhdGVPbkNhcmRBY3Rpb25TYWdhJztcbmltcG9ydCBzdG9wU3BlYWtpbmdBY3Rpdml0eU9uSW5wdXRTYWdhIGZyb20gJy4vc2FnYXMvc3RvcFNwZWFraW5nQWN0aXZpdHlPbklucHV0U2FnYSc7XG5pbXBvcnQgc3VibWl0U2VuZEJveFNhZ2EgZnJvbSAnLi9zYWdhcy9zdWJtaXRTZW5kQm94U2FnYSc7XG5cbmltcG9ydCB0eXBlIHsgR2xvYmFsU2NvcGVQb255ZmlsbCB9IGZyb20gJy4vdHlwZXMvR2xvYmFsU2NvcGVQb255ZmlsbCc7XG5pbXBvcnQgdHlwZSB7IFNhZ2EgfSBmcm9tICdyZWR1eC1zYWdhJztcblxudHlwZSBDcmVhdGVTYWdhc09wdGlvbnMgPSB7XG4gIHBvbnlmaWxsOiBHbG9iYWxTY29wZVBvbnlmaWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlU2FnYXMoeyBwb255ZmlsbCB9OiBDcmVhdGVTYWdhc09wdGlvbnMpOiBTYWdhIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKiAoKSB7XG4gICAgLy8gVE9ETzogW1AyXSBTaW5jZSBmb3JrKCkgc2lsZW50bHkgY2F0Y2hlcyBhbGwgZXhjZXB0aW9ucywgd2UgbmVlZCB0byBmaW5kIGEgd2F5IHRvIGNvbnNvbGUuZXJyb3IgdGhlbSBvdXQuXG5cbiAgICB5aWVsZCBmb3JrKGNsZWFyU3VnZ2VzdGVkQWN0aW9uc09uUG9zdEFjdGl2aXR5U2FnYSk7XG4gICAgeWllbGQgZm9yayhjb25uZWN0aW9uU3RhdHVzVG9Ob3RpZmljYXRpb25TYWdhKTtcbiAgICB5aWVsZCBmb3JrKGNvbm5lY3Rpb25TdGF0dXNVcGRhdGVTYWdhKTtcbiAgICB5aWVsZCBmb3JrKGNvbm5lY3RTYWdhKTtcbiAgICB5aWVsZCBmb3JrKGRldGVjdFNsb3dDb25uZWN0aW9uU2FnYSwgcG9ueWZpbGwpO1xuICAgIHlpZWxkIGZvcmsoZW1pdFR5cGluZ0luZGljYXRvclRvUG9zdEFjdGl2aXR5U2FnYSk7XG4gICAgeWllbGQgZm9yayhtYXJrQWxsQXNTcG9rZW5PblN0b3BTcGVha0FjdGl2aXR5U2FnYSk7XG4gICAgeWllbGQgZm9yayhvYnNlcnZlQWN0aXZpdHlTYWdhKTtcbiAgICB5aWVsZCBmb3JrKHBvc3RBY3Rpdml0eVNhZ2EsIHBvbnlmaWxsKTtcbiAgICB5aWVsZCBmb3JrKHF1ZXVlSW5jb21pbmdBY3Rpdml0eVNhZ2EsIHBvbnlmaWxsKTtcbiAgICB5aWVsZCBmb3JrKHNlbmRFdmVudFRvUG9zdEFjdGl2aXR5U2FnYSk7XG4gICAgeWllbGQgZm9yayhzZW5kRmlsZXNUb1Bvc3RBY3Rpdml0eVNhZ2EpO1xuICAgIHlpZWxkIGZvcmsoc2VuZE1lc3NhZ2VCYWNrVG9Qb3N0QWN0aXZpdHlTYWdhKTtcbiAgICB5aWVsZCBmb3JrKHNlbmRNZXNzYWdlVG9Qb3N0QWN0aXZpdHlTYWdhKTtcbiAgICB5aWVsZCBmb3JrKHNlbmRQb3N0QmFja1RvUG9zdEFjdGl2aXR5U2FnYSk7XG4gICAgeWllbGQgZm9yayhzZW5kVHlwaW5nSW5kaWNhdG9yT25TZXRTZW5kQm94U2FnYSwgcG9ueWZpbGwpO1xuICAgIHlpZWxkIGZvcmsoc3BlYWtBY3Rpdml0eUFuZFN0YXJ0RGljdGF0ZU9uSW5jb21pbmdBY3Rpdml0eUZyb21PdGhlcnNTYWdhKTtcbiAgICB5aWVsZCBmb3JrKHN0YXJ0RGljdGF0ZU9uU3BlYWtDb21wbGV0ZVNhZ2EpO1xuICAgIHlpZWxkIGZvcmsoc3RhcnRTcGVha0FjdGl2aXR5T25Qb3N0QWN0aXZpdHlTYWdhKTtcbiAgICB5aWVsZCBmb3JrKHN0b3BEaWN0YXRlT25DYXJkQWN0aW9uU2FnYSk7XG4gICAgeWllbGQgZm9yayhzdG9wU3BlYWtpbmdBY3Rpdml0eU9uSW5wdXRTYWdhKTtcbiAgICB5aWVsZCBmb3JrKHN1Ym1pdFNlbmRCb3hTYWdhKTtcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFTZSxTQUFTQSxXQUFULE9BQTZEO0VBQUEsSUFBdENDLFFBQXNDLFFBQXRDQSxRQUFzQztFQUMxRSxpREFBTztJQUFBO01BQUE7UUFBQTtVQUFBO1lBQUE7WUFHTCxPQUFNLElBQUFDLGFBQUEsRUFBS0MsbURBQUwsQ0FBTjs7VUFISztZQUFBO1lBSUwsT0FBTSxJQUFBRCxhQUFBLEVBQUtFLDhDQUFMLENBQU47O1VBSks7WUFBQTtZQUtMLE9BQU0sSUFBQUYsYUFBQSxFQUFLRyxzQ0FBTCxDQUFOOztVQUxLO1lBQUE7WUFNTCxPQUFNLElBQUFILGFBQUEsRUFBS0ksdUJBQUwsQ0FBTjs7VUFOSztZQUFBO1lBT0wsT0FBTSxJQUFBSixhQUFBLEVBQUtLLG9DQUFMLEVBQStCTixRQUEvQixDQUFOOztVQVBLO1lBQUE7WUFRTCxPQUFNLElBQUFDLGFBQUEsRUFBS00saURBQUwsQ0FBTjs7VUFSSztZQUFBO1lBU0wsT0FBTSxJQUFBTixhQUFBLEVBQUtPLGtEQUFMLENBQU47O1VBVEs7WUFBQTtZQVVMLE9BQU0sSUFBQVAsYUFBQSxFQUFLUSwrQkFBTCxDQUFOOztVQVZLO1lBQUE7WUFXTCxPQUFNLElBQUFSLGFBQUEsRUFBS1MsNEJBQUwsRUFBdUJWLFFBQXZCLENBQU47O1VBWEs7WUFBQTtZQVlMLE9BQU0sSUFBQUMsYUFBQSxFQUFLVSxxQ0FBTCxFQUFnQ1gsUUFBaEMsQ0FBTjs7VUFaSztZQUFBO1lBYUwsT0FBTSxJQUFBQyxhQUFBLEVBQUtXLHVDQUFMLENBQU47O1VBYks7WUFBQTtZQWNMLE9BQU0sSUFBQVgsYUFBQSxFQUFLWSx1Q0FBTCxDQUFOOztVQWRLO1lBQUE7WUFlTCxPQUFNLElBQUFaLGFBQUEsRUFBS2EsNkNBQUwsQ0FBTjs7VUFmSztZQUFBO1lBZ0JMLE9BQU0sSUFBQWIsYUFBQSxFQUFLYyx5Q0FBTCxDQUFOOztVQWhCSztZQUFBO1lBaUJMLE9BQU0sSUFBQWQsYUFBQSxFQUFLZSwwQ0FBTCxDQUFOOztVQWpCSztZQUFBO1lBa0JMLE9BQU0sSUFBQWYsYUFBQSxFQUFLZ0IsK0NBQUwsRUFBMENqQixRQUExQyxDQUFOOztVQWxCSztZQUFBO1lBbUJMLE9BQU0sSUFBQUMsYUFBQSxFQUFLaUIsd0VBQUwsQ0FBTjs7VUFuQks7WUFBQTtZQW9CTCxPQUFNLElBQUFqQixhQUFBLEVBQUtrQiwyQ0FBTCxDQUFOOztVQXBCSztZQUFBO1lBcUJMLE9BQU0sSUFBQWxCLGFBQUEsRUFBS21CLGdEQUFMLENBQU47O1VBckJLO1lBQUE7WUFzQkwsT0FBTSxJQUFBbkIsYUFBQSxFQUFLb0IsdUNBQUwsQ0FBTjs7VUF0Qks7WUFBQTtZQXVCTCxPQUFNLElBQUFwQixhQUFBLEVBQUtxQiwyQ0FBTCxDQUFOOztVQXZCSztZQUFBO1lBd0JMLE9BQU0sSUFBQXJCLGFBQUEsRUFBS3NCLDZCQUFMLENBQU47O1VBeEJLO1VBQUE7WUFBQTtRQUFBO01BQUE7SUFBQTtFQUFBLENBQVA7QUEwQkQifQ==