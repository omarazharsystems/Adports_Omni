import { Store } from 'redux';
import type { GlobalScopePonyfill } from './types/GlobalScopePonyfill';
type CreateStoreOptions = {
    /**
     * True, to enable Redux development tools, otherwise, false.
     *
     * Because Web Chat use sagas for business logics, some store state are keep at JavaScript heaps.
     * Time-travelling and saving/restoring store state are not supported.
     */
    devTools?: boolean;
    /**
     * Ponyfill to overrides specific global scope members.
     *
     * This option is for development use only. Not all features in Web Chat are ponyfilled.
     *
     * To fake timers, `setTimeout` and related functions can be passed to overrides the original global scope members.
     *
     * Please see [#4662](https://github.com/microsoft/BotFramework-WebChat/pull/4662) for details.
     */
    ponyfill?: Partial<GlobalScopePonyfill>;
};
/**
 * Creates a Redux store internally used by Web Chat.
 *
 * This store is critical for Web Chat business logics to operate, please use with cautions.
 */
export declare function withOptions(options: CreateStoreOptions, initialState?: any, ...middlewares: any[]): Store;
/**
 * Creates a Redux store internally used by Web Chat.
 *
 * This store is critical for Web Chat business logics to operate, please use with cautions.
 */
export default function createStore(initialState?: any, ...middlewares: any[]): Store;
/**
 * Creates a Redux store internally used by Web Chat, with Redux development tools.
 *
 * This store is critical for Web Chat business logics to operate, please use with cautions.
 *
 * @deprecated Use `withOptions` instead and pass `{ devTools: true }`
 */
export declare function withDevTools(initialState?: any, ...middlewares: any[]): Store;
export {};
//# sourceMappingURL=createStore.d.ts.map