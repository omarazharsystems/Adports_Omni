"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = observeOnceEffect;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

function observeOnceEffect(observable) {
  return (0, _effects.call)( /*#__PURE__*/_regenerator["default"].mark(function observeOnce() {
    var subscription;
    return _regenerator["default"].wrap(function observeOnce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return (0, _effects.call)(function () {
              return new Promise(function (resolve, reject) {
                subscription = observable.subscribe({
                  complete: resolve,
                  error: reject,
                  next: resolve
                });
              });
            });

          case 3:
            return _context.abrupt("return", _context.sent);

          case 4:
            _context.prev = 4;
            subscription && subscription.unsubscribe();
            return _context.finish(4);

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, observeOnce, null, [[0,, 4, 7]]);
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvYnNlcnZlT25jZUVmZmVjdCIsIm9ic2VydmFibGUiLCJjYWxsIiwib2JzZXJ2ZU9uY2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInN1YnNjcmlwdGlvbiIsInN1YnNjcmliZSIsImNvbXBsZXRlIiwiZXJyb3IiLCJuZXh0IiwidW5zdWJzY3JpYmUiXSwic291cmNlUm9vdCI6ImNvcmU6Ly8vIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2FnYXMvZWZmZWN0cy9vYnNlcnZlT25jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYWxsIH0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcblxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgT2JzZXJ2ZXIsIFN1YnNjcmlwdGlvbiB9IGZyb20gJy4uLy4uL3R5cGVzL2V4dGVybmFsL09ic2VydmFibGUnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvYnNlcnZlT25jZUVmZmVjdDxUPihvYnNlcnZhYmxlOiBPYnNlcnZhYmxlPFQ+KSB7XG4gIHJldHVybiBjYWxsKGZ1bmN0aW9uKiBvYnNlcnZlT25jZSgpIHtcbiAgICBsZXQgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHlpZWxkIGNhbGwoXG4gICAgICAgICgpID0+XG4gICAgICAgICAgbmV3IFByb21pc2U8VD4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uID0gb2JzZXJ2YWJsZS5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgICBjb21wbGV0ZTogcmVzb2x2ZSxcbiAgICAgICAgICAgICAgZXJyb3I6IHJlamVjdCxcbiAgICAgICAgICAgICAgbmV4dDogcmVzb2x2ZVxuICAgICAgICAgICAgfSBhcyBPYnNlcnZlcjxUPik7XG4gICAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHN1YnNjcmlwdGlvbiAmJiBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUllLFNBQVNBLGlCQUFULENBQThCQyxVQUE5QixFQUF5RDtFQUN0RSxPQUFPLElBQUFDLGFBQUEsNkNBQUssU0FBVUMsV0FBVjtJQUFBO0lBQUE7TUFBQTtRQUFBO1VBQUE7WUFBQTtZQUFBO1lBSUQsT0FBTSxJQUFBRCxhQUFBLEVBQ1g7Y0FBQSxPQUNFLElBQUlFLE9BQUosQ0FBZSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7Z0JBQ2xDQyxZQUFZLEdBQUdOLFVBQVUsQ0FBQ08sU0FBWCxDQUFxQjtrQkFDbENDLFFBQVEsRUFBRUosT0FEd0I7a0JBRWxDSyxLQUFLLEVBQUVKLE1BRjJCO2tCQUdsQ0ssSUFBSSxFQUFFTjtnQkFINEIsQ0FBckIsQ0FBZjtjQUtELENBTkQsQ0FERjtZQUFBLENBRFcsQ0FBTjs7VUFKQztZQUFBOztVQUFBO1lBQUE7WUFlUkUsWUFBWSxJQUFJQSxZQUFZLENBQUNLLFdBQWIsRUFBaEI7WUFmUTs7VUFBQTtVQUFBO1lBQUE7UUFBQTtNQUFBO0lBQUEsR0FBVVQsV0FBVjtFQUFBLENBQUwsRUFBUDtBQWtCRCJ9