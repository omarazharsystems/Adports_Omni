"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = whileConnectedEffect;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _connect = require("../../actions/connect");

var _disconnect = require("../../actions/disconnect");

var _reconnect = require("../../actions/reconnect");

function whileConnectedEffect(fn) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return (0, _effects.call)( /*#__PURE__*/_regenerator["default"].mark(function whileConnected() {
    var _yield$take, _yield$take$meta, userID, username, directLine, task;

    return _regenerator["default"].wrap(function whileConnected$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _effects.take)([_connect.CONNECT_FULFILLING, _reconnect.RECONNECT_FULFILLING]);

          case 2:
            _yield$take = _context.sent;
            _yield$take$meta = _yield$take.meta;
            userID = _yield$take$meta.userID;
            username = _yield$take$meta.username;
            directLine = _yield$take.payload.directLine;
            _context.next = 9;
            return _effects.fork.apply(void 0, [fn, {
              directLine: directLine,
              userID: userID,
              username: username
            }].concat(args));

          case 9:
            task = _context.sent;
            _context.next = 12;
            return (0, _effects.take)([_disconnect.DISCONNECT_PENDING, _reconnect.RECONNECT_PENDING]);

          case 12:
            _context.next = 14;
            return (0, _effects.cancel)(task);

          case 14:
            _context.next = 0;
            break;

          case 16:
          case "end":
            return _context.stop();
        }
      }
    }, whileConnected);
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ3aGlsZUNvbm5lY3RlZEVmZmVjdCIsImZuIiwiYXJncyIsImNhbGwiLCJ3aGlsZUNvbm5lY3RlZCIsInRha2UiLCJDT05ORUNUX0ZVTEZJTExJTkciLCJSRUNPTk5FQ1RfRlVMRklMTElORyIsIm1ldGEiLCJ1c2VySUQiLCJ1c2VybmFtZSIsImRpcmVjdExpbmUiLCJwYXlsb2FkIiwiZm9yayIsInRhc2siLCJESVNDT05ORUNUX1BFTkRJTkciLCJSRUNPTk5FQ1RfUEVORElORyIsImNhbmNlbCJdLCJzb3VyY2VSb290IjoiY29yZTovLy8iLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zYWdhcy9lZmZlY3RzL3doaWxlQ29ubmVjdGVkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNhbGwsIGNhbmNlbCwgZm9yaywgdGFrZSB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5cbmltcG9ydCB7IENPTk5FQ1RfRlVMRklMTElORyB9IGZyb20gJy4uLy4uL2FjdGlvbnMvY29ubmVjdCc7XG5pbXBvcnQgeyBESVNDT05ORUNUX1BFTkRJTkcgfSBmcm9tICcuLi8uLi9hY3Rpb25zL2Rpc2Nvbm5lY3QnO1xuaW1wb3J0IHsgUkVDT05ORUNUX1BFTkRJTkcsIFJFQ09OTkVDVF9GVUxGSUxMSU5HIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9yZWNvbm5lY3QnO1xuXG5pbXBvcnQgdHlwZSB7IERpcmVjdExpbmVKU0JvdENvbm5lY3Rpb24gfSBmcm9tICcuLi8uLi90eXBlcy9leHRlcm5hbC9EaXJlY3RMaW5lSlNCb3RDb25uZWN0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2hpbGVDb25uZWN0ZWRFZmZlY3Q8UCBleHRlbmRzIGFueVtdPihcbiAgZm46IChcbiAgICB7XG4gICAgICBkaXJlY3RMaW5lLFxuICAgICAgdXNlcklELFxuICAgICAgdXNlcm5hbWVcbiAgICB9OiB7XG4gICAgICBkaXJlY3RMaW5lOiBEaXJlY3RMaW5lSlNCb3RDb25uZWN0aW9uO1xuICAgICAgdXNlcklEOiBzdHJpbmc7XG4gICAgICB1c2VybmFtZTogc3RyaW5nO1xuICAgIH0sXG4gICAgLi4uYXJnczogUFxuICApID0+IHZvaWQsXG4gIC4uLmFyZ3M6IFBcbikge1xuICByZXR1cm4gY2FsbChmdW5jdGlvbiogd2hpbGVDb25uZWN0ZWQoKSB7XG4gICAgZm9yICg7Oykge1xuICAgICAgY29uc3Qge1xuICAgICAgICBtZXRhOiB7IHVzZXJJRCwgdXNlcm5hbWUgfSxcbiAgICAgICAgcGF5bG9hZDogeyBkaXJlY3RMaW5lIH1cbiAgICAgIH06IHtcbiAgICAgICAgbWV0YToge1xuICAgICAgICAgIHVzZXJJRDogc3RyaW5nO1xuICAgICAgICAgIHVzZXJuYW1lOiBzdHJpbmc7XG4gICAgICAgIH07XG4gICAgICAgIHBheWxvYWQ6IHsgZGlyZWN0TGluZTogRGlyZWN0TGluZUpTQm90Q29ubmVjdGlvbiB9O1xuICAgICAgfSA9IHlpZWxkIHRha2UoW0NPTk5FQ1RfRlVMRklMTElORywgUkVDT05ORUNUX0ZVTEZJTExJTkddKTtcblxuICAgICAgY29uc3QgdGFzayA9IHlpZWxkIGZvcmsoZm4sIHsgZGlyZWN0TGluZSwgdXNlcklELCB1c2VybmFtZSB9LCAuLi5hcmdzKTtcblxuICAgICAgLy8gV2hlbiB3ZSByZWNlaXZlIERJU0NPTk5FQ1RfUEVORElORyBvciBSRUNPTk5FQ1RfUEVORElORywgdGhlIERpcmVjdCBMaW5lIGNvbm5lY3Rpb24gaXMgY3VycmVudGx5IGJ1c3kgYW5kIHNob3VsZCBub3QgYmUgdXNlZC5cblxuICAgICAgeWllbGQgdGFrZShbRElTQ09OTkVDVF9QRU5ESU5HLCBSRUNPTk5FQ1RfUEVORElOR10pO1xuICAgICAgeWllbGQgY2FuY2VsKHRhc2spO1xuICAgIH1cbiAgfSk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBSWUsU0FBU0Esb0JBQVQsQ0FDYkMsRUFEYSxFQWNiO0VBQUEsa0NBREdDLElBQ0g7SUFER0EsSUFDSDtFQUFBOztFQUNBLE9BQU8sSUFBQUMsYUFBQSw2Q0FBSyxTQUFVQyxjQUFWO0lBQUE7O0lBQUE7TUFBQTtRQUFBO1VBQUE7WUFBQTtZQVdKLE9BQU0sSUFBQUMsYUFBQSxFQUFLLENBQUNDLDJCQUFELEVBQXFCQywrQkFBckIsQ0FBTCxDQUFOOztVQVhJO1lBQUE7WUFBQSwrQkFHTkMsSUFITTtZQUdFQyxNQUhGLG9CQUdFQSxNQUhGO1lBR1VDLFFBSFYsb0JBR1VBLFFBSFY7WUFJS0MsVUFKTCxlQUlOQyxPQUpNLENBSUtELFVBSkw7WUFBQTtZQWFLLE9BQU1FLGFBQUEsZ0JBQUtaLEVBQUwsRUFBUztjQUFFVSxVQUFVLEVBQVZBLFVBQUY7Y0FBY0YsTUFBTSxFQUFOQSxNQUFkO2NBQXNCQyxRQUFRLEVBQVJBO1lBQXRCLENBQVQsU0FBOENSLElBQTlDLEVBQU47O1VBYkw7WUFhRlksSUFiRTtZQUFBO1lBaUJSLE9BQU0sSUFBQVQsYUFBQSxFQUFLLENBQUNVLDhCQUFELEVBQXFCQyw0QkFBckIsQ0FBTCxDQUFOOztVQWpCUTtZQUFBO1lBa0JSLE9BQU0sSUFBQUMsZUFBQSxFQUFPSCxJQUFQLENBQU47O1VBbEJRO1lBQUE7WUFBQTs7VUFBQTtVQUFBO1lBQUE7UUFBQTtNQUFBO0lBQUEsR0FBVVYsY0FBVjtFQUFBLENBQUwsRUFBUDtBQXFCRCJ9