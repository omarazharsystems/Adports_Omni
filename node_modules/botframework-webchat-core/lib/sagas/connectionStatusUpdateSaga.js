"use strict";

var _regeneratorRuntime2 = require("@babel/runtime/regenerator");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = connectionStatusUpdateSaga;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _connectionStatusUpdate = _interopRequireDefault(require("../actions/connectionStatusUpdate"));

var _observeEach = _interopRequireDefault(require("./effects/observeEach"));

var _setReferenceGrammarID = _interopRequireDefault(require("../actions/setReferenceGrammarID"));

var _whileConnected = _interopRequireDefault(require("./effects/whileConnected"));

var _marked = /*#__PURE__*/_regeneratorRuntime2.mark(observeConnectionStatus),
    _marked2 = /*#__PURE__*/_regeneratorRuntime2.mark(connectionStatusUpdateSaga);

function observeConnectionStatus(_ref) {
  var directLine;
  return _regenerator["default"].wrap(function observeConnectionStatus$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          directLine = _ref.directLine;
          _context2.next = 3;
          return (0, _observeEach["default"])(directLine.connectionStatus$, /*#__PURE__*/_regenerator["default"].mark(function updateConnectionStatus(connectionStatus) {
            return _regenerator["default"].wrap(function updateConnectionStatus$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return (0, _effects.put)((0, _connectionStatusUpdate["default"])(connectionStatus));

                  case 2:
                    _context.next = 4;
                    return (0, _effects.put)((0, _setReferenceGrammarID["default"])(directLine.referenceGrammarId));

                  case 4:
                  case "end":
                    return _context.stop();
                }
              }
            }, updateConnectionStatus);
          }));

        case 3:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked);
}

function connectionStatusUpdateSaga() {
  return _regenerator["default"].wrap(function connectionStatusUpdateSaga$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return (0, _whileConnected["default"])(observeConnectionStatus);

        case 2:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked2);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvYnNlcnZlQ29ubmVjdGlvblN0YXR1cyIsImNvbm5lY3Rpb25TdGF0dXNVcGRhdGVTYWdhIiwiZGlyZWN0TGluZSIsIm9ic2VydmVFYWNoIiwiY29ubmVjdGlvblN0YXR1cyQiLCJ1cGRhdGVDb25uZWN0aW9uU3RhdHVzIiwiY29ubmVjdGlvblN0YXR1cyIsInB1dCIsImNvbm5lY3Rpb25TdGF0dXNVcGRhdGUiLCJzZXRSZWZlcmVuY2VHcmFtbWFySUQiLCJyZWZlcmVuY2VHcmFtbWFySWQiLCJ3aGlsZUNvbm5lY3RlZCJdLCJzb3VyY2VSb290IjoiY29yZTovLy8iLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zYWdhcy9jb25uZWN0aW9uU3RhdHVzVXBkYXRlU2FnYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwdXQgfSBmcm9tICdyZWR1eC1zYWdhL2VmZmVjdHMnO1xuXG5pbXBvcnQgY29ubmVjdGlvblN0YXR1c1VwZGF0ZSBmcm9tICcuLi9hY3Rpb25zL2Nvbm5lY3Rpb25TdGF0dXNVcGRhdGUnO1xuaW1wb3J0IG9ic2VydmVFYWNoIGZyb20gJy4vZWZmZWN0cy9vYnNlcnZlRWFjaCc7XG5pbXBvcnQgc2V0UmVmZXJlbmNlR3JhbW1hcklEIGZyb20gJy4uL2FjdGlvbnMvc2V0UmVmZXJlbmNlR3JhbW1hcklEJztcbmltcG9ydCB3aGlsZUNvbm5lY3RlZCBmcm9tICcuL2VmZmVjdHMvd2hpbGVDb25uZWN0ZWQnO1xuXG5mdW5jdGlvbiogb2JzZXJ2ZUNvbm5lY3Rpb25TdGF0dXMoeyBkaXJlY3RMaW5lIH0pIHtcbiAgeWllbGQgb2JzZXJ2ZUVhY2goZGlyZWN0TGluZS5jb25uZWN0aW9uU3RhdHVzJCwgZnVuY3Rpb24qIHVwZGF0ZUNvbm5lY3Rpb25TdGF0dXMoY29ubmVjdGlvblN0YXR1cykge1xuICAgIHlpZWxkIHB1dChjb25uZWN0aW9uU3RhdHVzVXBkYXRlKGNvbm5lY3Rpb25TdGF0dXMpKTtcbiAgICB5aWVsZCBwdXQoc2V0UmVmZXJlbmNlR3JhbW1hcklEKGRpcmVjdExpbmUucmVmZXJlbmNlR3JhbW1hcklkKSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogY29ubmVjdGlvblN0YXR1c1VwZGF0ZVNhZ2EoKSB7XG4gIHlpZWxkIHdoaWxlQ29ubmVjdGVkKG9ic2VydmVDb25uZWN0aW9uU3RhdHVzKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztxREFFVUEsdUI7c0RBT2VDLDBCOztBQVB6QixTQUFVRCx1QkFBVjtFQUFBO0VBQUE7SUFBQTtNQUFBO1FBQUE7VUFBb0NFLFVBQXBDLFFBQW9DQSxVQUFwQztVQUFBO1VBQ0UsT0FBTSxJQUFBQyx1QkFBQSxFQUFZRCxVQUFVLENBQUNFLGlCQUF2Qiw0Q0FBMEMsU0FBVUMsc0JBQVYsQ0FBaUNDLGdCQUFqQztZQUFBO2NBQUE7Z0JBQUE7a0JBQUE7b0JBQUE7b0JBQzlDLE9BQU0sSUFBQUMsWUFBQSxFQUFJLElBQUFDLGtDQUFBLEVBQXVCRixnQkFBdkIsQ0FBSixDQUFOOztrQkFEOEM7b0JBQUE7b0JBRTlDLE9BQU0sSUFBQUMsWUFBQSxFQUFJLElBQUFFLGlDQUFBLEVBQXNCUCxVQUFVLENBQUNRLGtCQUFqQyxDQUFKLENBQU47O2tCQUY4QztrQkFBQTtvQkFBQTtnQkFBQTtjQUFBO1lBQUEsR0FBVUwsc0JBQVY7VUFBQSxDQUExQyxFQUFOOztRQURGO1FBQUE7VUFBQTtNQUFBO0lBQUE7RUFBQTtBQUFBOztBQU9lLFNBQVVKLDBCQUFWO0VBQUE7SUFBQTtNQUFBO1FBQUE7VUFBQTtVQUNiLE9BQU0sSUFBQVUsMEJBQUEsRUFBZVgsdUJBQWYsQ0FBTjs7UUFEYTtRQUFBO1VBQUE7TUFBQTtJQUFBO0VBQUE7QUFBQSJ9