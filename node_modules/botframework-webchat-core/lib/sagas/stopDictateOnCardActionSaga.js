"use strict";

var _regeneratorRuntime2 = require("@babel/runtime/regenerator");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = stopDictateOnCardActionSaga;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _postActivity = require("../actions/postActivity");

var _stopDictate = _interopRequireDefault(require("../actions/stopDictate"));

var _whileConnected = _interopRequireDefault(require("./effects/whileConnected"));

var _marked = /*#__PURE__*/_regeneratorRuntime2.mark(stopDictateOnCardAction),
    _marked2 = /*#__PURE__*/_regeneratorRuntime2.mark(stopDictateOnCardActionSaga);

function stopDictateOnCardAction() {
  return _regenerator["default"].wrap(function stopDictateOnCardAction$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, _effects.takeEvery)( // Currently, there are no actions that are related to card input
          // For now, we are using POST_ACTIVITY of a "message" activity
          // In the future, if we have an action for card input, we should use that instead
          function (_ref) {
            var payload = _ref.payload,
                type = _ref.type;
            return type === _postActivity.POST_ACTIVITY_PENDING && payload.activity.type === 'message';
          }, /*#__PURE__*/_regenerator["default"].mark(function putStopDictate() {
            return _regenerator["default"].wrap(function putStopDictate$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return (0, _effects.put)((0, _stopDictate["default"])());

                  case 2:
                  case "end":
                    return _context.stop();
                }
              }
            }, putStopDictate);
          }));

        case 2:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked);
}

function stopDictateOnCardActionSaga() {
  return _regenerator["default"].wrap(function stopDictateOnCardActionSaga$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return (0, _whileConnected["default"])(stopDictateOnCardAction);

        case 2:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked2);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdG9wRGljdGF0ZU9uQ2FyZEFjdGlvbiIsInN0b3BEaWN0YXRlT25DYXJkQWN0aW9uU2FnYSIsInRha2VFdmVyeSIsInBheWxvYWQiLCJ0eXBlIiwiUE9TVF9BQ1RJVklUWV9QRU5ESU5HIiwiYWN0aXZpdHkiLCJwdXRTdG9wRGljdGF0ZSIsInB1dCIsInN0b3BEaWN0YXRlIiwid2hpbGVDb25uZWN0ZWQiXSwic291cmNlUm9vdCI6ImNvcmU6Ly8vIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2FnYXMvc3RvcERpY3RhdGVPbkNhcmRBY3Rpb25TYWdhLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHB1dCwgdGFrZUV2ZXJ5IH0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcblxuaW1wb3J0IHsgUE9TVF9BQ1RJVklUWV9QRU5ESU5HIH0gZnJvbSAnLi4vYWN0aW9ucy9wb3N0QWN0aXZpdHknO1xuaW1wb3J0IHN0b3BEaWN0YXRlIGZyb20gJy4uL2FjdGlvbnMvc3RvcERpY3RhdGUnO1xuaW1wb3J0IHdoaWxlQ29ubmVjdGVkIGZyb20gJy4vZWZmZWN0cy93aGlsZUNvbm5lY3RlZCc7XG5cbmZ1bmN0aW9uKiBzdG9wRGljdGF0ZU9uQ2FyZEFjdGlvbigpIHtcbiAgLy8gVE9ETzogW1AyXSBXZSBzaG91bGQgc3RvcCBzcGVlY2ggaW5wdXQgd2hlbiB0aGUgdXNlciBjbGljayBvbiBhbnl0aGluZyBvbiBhIGNhcmQsIGluY2x1ZGluZyBvcGVuIFVSTCB3aGljaCBkb2Vzbid0IGdlbmVyYXRlIHBvc3RBY3Rpdml0eVxuICAvLyAgICAgICBUaGlzIGZ1bmN0aW9uYWxpdHkgd2FzIG5vdCBpbXBsZW1lbnRlZCBpbiB2M1xuXG4gIHlpZWxkIHRha2VFdmVyeShcbiAgICAvLyBDdXJyZW50bHksIHRoZXJlIGFyZSBubyBhY3Rpb25zIHRoYXQgYXJlIHJlbGF0ZWQgdG8gY2FyZCBpbnB1dFxuICAgIC8vIEZvciBub3csIHdlIGFyZSB1c2luZyBQT1NUX0FDVElWSVRZIG9mIGEgXCJtZXNzYWdlXCIgYWN0aXZpdHlcbiAgICAvLyBJbiB0aGUgZnV0dXJlLCBpZiB3ZSBoYXZlIGFuIGFjdGlvbiBmb3IgY2FyZCBpbnB1dCwgd2Ugc2hvdWxkIHVzZSB0aGF0IGluc3RlYWRcbiAgICAoeyBwYXlsb2FkLCB0eXBlIH0pID0+IHR5cGUgPT09IFBPU1RfQUNUSVZJVFlfUEVORElORyAmJiBwYXlsb2FkLmFjdGl2aXR5LnR5cGUgPT09ICdtZXNzYWdlJyxcbiAgICBmdW5jdGlvbiogcHV0U3RvcERpY3RhdGUoKSB7XG4gICAgICB5aWVsZCBwdXQoc3RvcERpY3RhdGUoKSk7XG4gICAgfVxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogc3RvcERpY3RhdGVPbkNhcmRBY3Rpb25TYWdhKCkge1xuICB5aWVsZCB3aGlsZUNvbm5lY3RlZChzdG9wRGljdGF0ZU9uQ2FyZEFjdGlvbik7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7cURBRVVBLHVCO3NEQWVlQywyQjs7QUFmekIsU0FBVUQsdUJBQVY7RUFBQTtJQUFBO01BQUE7UUFBQTtVQUFBO1VBSUUsT0FBTSxJQUFBRSxrQkFBQSxHQUNKO1VBQ0E7VUFDQTtVQUNBO1lBQUEsSUFBR0MsT0FBSCxRQUFHQSxPQUFIO1lBQUEsSUFBWUMsSUFBWixRQUFZQSxJQUFaO1lBQUEsT0FBdUJBLElBQUksS0FBS0MsbUNBQVQsSUFBa0NGLE9BQU8sQ0FBQ0csUUFBUixDQUFpQkYsSUFBakIsS0FBMEIsU0FBbkY7VUFBQSxDQUpJLDRDQUtKLFNBQVVHLGNBQVY7WUFBQTtjQUFBO2dCQUFBO2tCQUFBO29CQUFBO29CQUNFLE9BQU0sSUFBQUMsWUFBQSxFQUFJLElBQUFDLHVCQUFBLEdBQUosQ0FBTjs7a0JBREY7a0JBQUE7b0JBQUE7Z0JBQUE7Y0FBQTtZQUFBLEdBQVVGLGNBQVY7VUFBQSxDQUxJLEVBQU47O1FBSkY7UUFBQTtVQUFBO01BQUE7SUFBQTtFQUFBO0FBQUE7O0FBZWUsU0FBVU4sMkJBQVY7RUFBQTtJQUFBO01BQUE7UUFBQTtVQUFBO1VBQ2IsT0FBTSxJQUFBUywwQkFBQSxFQUFlVix1QkFBZixDQUFOOztRQURhO1FBQUE7VUFBQTtNQUFBO0lBQUE7RUFBQTtBQUFBIn0=