"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = connectivityStatus;

var _connect = require("../actions/connect");

var _reconnect = require("../actions/reconnect");

var _disconnect = require("../actions/disconnect");

var _sagaError = require("../actions/sagaError");

var DEFAULT_STATE = 'uninitialized';

function connectivityStatus() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;

  var _ref = arguments.length > 1 ? arguments[1] : undefined,
      type = _ref.type,
      meta = _ref.meta;

  if (state !== 'sagaerror') {
    switch (type) {
      case _connect.CONNECT_PENDING:
      case _reconnect.RECONNECT_PENDING:
        if (state !== 'uninitialized') {
          state = 'reconnecting';
        }

        break;

      case _connect.CONNECT_FULFILLED:
        state = 'connected';
        break;

      case _reconnect.RECONNECT_FULFILLED:
        state = 'reconnected';
        break;

      case _connect.CONNECT_REJECTED:
        state = 'error';
        break;

      case _connect.CONNECT_STILL_PENDING:
        state = 'connectingslow';
        break;

      case _disconnect.DISCONNECT_FULFILLED:
        state = meta && meta.error ? 'error' : 'notconnected';
        break;

      case _sagaError.SAGA_ERROR:
        state = 'sagaerror';
        break;

      default:
        break;
    }
  }

  return state;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJERUZBVUxUX1NUQVRFIiwiY29ubmVjdGl2aXR5U3RhdHVzIiwic3RhdGUiLCJ0eXBlIiwibWV0YSIsIkNPTk5FQ1RfUEVORElORyIsIlJFQ09OTkVDVF9QRU5ESU5HIiwiQ09OTkVDVF9GVUxGSUxMRUQiLCJSRUNPTk5FQ1RfRlVMRklMTEVEIiwiQ09OTkVDVF9SRUpFQ1RFRCIsIkNPTk5FQ1RfU1RJTExfUEVORElORyIsIkRJU0NPTk5FQ1RfRlVMRklMTEVEIiwiZXJyb3IiLCJTQUdBX0VSUk9SIl0sInNvdXJjZVJvb3QiOiJjb3JlOi8vLyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JlZHVjZXJzL2Nvbm5lY3Rpdml0eVN0YXR1cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT05ORUNUX0ZVTEZJTExFRCwgQ09OTkVDVF9QRU5ESU5HLCBDT05ORUNUX1JFSkVDVEVELCBDT05ORUNUX1NUSUxMX1BFTkRJTkcgfSBmcm9tICcuLi9hY3Rpb25zL2Nvbm5lY3QnO1xuXG5pbXBvcnQgeyBSRUNPTk5FQ1RfUEVORElORywgUkVDT05ORUNUX0ZVTEZJTExFRCB9IGZyb20gJy4uL2FjdGlvbnMvcmVjb25uZWN0JztcblxuaW1wb3J0IHsgRElTQ09OTkVDVF9GVUxGSUxMRUQgfSBmcm9tICcuLi9hY3Rpb25zL2Rpc2Nvbm5lY3QnO1xuaW1wb3J0IHsgU0FHQV9FUlJPUiB9IGZyb20gJy4uL2FjdGlvbnMvc2FnYUVycm9yJztcblxuY29uc3QgREVGQVVMVF9TVEFURSA9ICd1bmluaXRpYWxpemVkJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29ubmVjdGl2aXR5U3RhdHVzKHN0YXRlID0gREVGQVVMVF9TVEFURSwgeyB0eXBlLCBtZXRhIH0pIHtcbiAgaWYgKHN0YXRlICE9PSAnc2FnYWVycm9yJykge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSBDT05ORUNUX1BFTkRJTkc6XG4gICAgICBjYXNlIFJFQ09OTkVDVF9QRU5ESU5HOlxuICAgICAgICBpZiAoc3RhdGUgIT09ICd1bmluaXRpYWxpemVkJykge1xuICAgICAgICAgIHN0YXRlID0gJ3JlY29ubmVjdGluZyc7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBDT05ORUNUX0ZVTEZJTExFRDpcbiAgICAgICAgc3RhdGUgPSAnY29ubmVjdGVkJztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgUkVDT05ORUNUX0ZVTEZJTExFRDpcbiAgICAgICAgc3RhdGUgPSAncmVjb25uZWN0ZWQnO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBDT05ORUNUX1JFSkVDVEVEOlxuICAgICAgICBzdGF0ZSA9ICdlcnJvcic7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIENPTk5FQ1RfU1RJTExfUEVORElORzpcbiAgICAgICAgc3RhdGUgPSAnY29ubmVjdGluZ3Nsb3cnO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBESVNDT05ORUNUX0ZVTEZJTExFRDpcbiAgICAgICAgc3RhdGUgPSBtZXRhICYmIG1ldGEuZXJyb3IgPyAnZXJyb3InIDogJ25vdGNvbm5lY3RlZCc7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFNBR0FfRVJST1I6XG4gICAgICAgIHN0YXRlID0gJ3NhZ2FlcnJvcic7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3RhdGU7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFFQTs7QUFDQTs7QUFFQSxJQUFNQSxhQUFhLEdBQUcsZUFBdEI7O0FBRWUsU0FBU0Msa0JBQVQsR0FBbUU7RUFBQSxJQUF2Q0MsS0FBdUMsdUVBQS9CRixhQUErQjs7RUFBQTtFQUFBLElBQWRHLElBQWMsUUFBZEEsSUFBYztFQUFBLElBQVJDLElBQVEsUUFBUkEsSUFBUTs7RUFDaEYsSUFBSUYsS0FBSyxLQUFLLFdBQWQsRUFBMkI7SUFDekIsUUFBUUMsSUFBUjtNQUNFLEtBQUtFLHdCQUFMO01BQ0EsS0FBS0MsNEJBQUw7UUFDRSxJQUFJSixLQUFLLEtBQUssZUFBZCxFQUErQjtVQUM3QkEsS0FBSyxHQUFHLGNBQVI7UUFDRDs7UUFFRDs7TUFFRixLQUFLSywwQkFBTDtRQUNFTCxLQUFLLEdBQUcsV0FBUjtRQUNBOztNQUVGLEtBQUtNLDhCQUFMO1FBQ0VOLEtBQUssR0FBRyxhQUFSO1FBQ0E7O01BRUYsS0FBS08seUJBQUw7UUFDRVAsS0FBSyxHQUFHLE9BQVI7UUFDQTs7TUFFRixLQUFLUSw4QkFBTDtRQUNFUixLQUFLLEdBQUcsZ0JBQVI7UUFDQTs7TUFFRixLQUFLUyxnQ0FBTDtRQUNFVCxLQUFLLEdBQUdFLElBQUksSUFBSUEsSUFBSSxDQUFDUSxLQUFiLEdBQXFCLE9BQXJCLEdBQStCLGNBQXZDO1FBQ0E7O01BRUYsS0FBS0MscUJBQUw7UUFDRVgsS0FBSyxHQUFHLFdBQVI7UUFDQTs7TUFFRjtRQUNFO0lBbENKO0VBb0NEOztFQUVELE9BQU9BLEtBQVA7QUFDRCJ9