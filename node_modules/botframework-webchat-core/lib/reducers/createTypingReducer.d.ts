import type { GlobalScopePonyfill } from '../types/GlobalScopePonyfill';
import type { IncomingActivityAction } from '../actions/incomingActivity';
import type { PostActivityPendingAction } from '../actions/postActivity';
import type { Reducer } from 'redux';
type TypingState = Record<string, {
    at: number;
    last: number;
    name: string;
    role: 'bot' | 'channel' | 'user';
}>;
type TypingAction = IncomingActivityAction | PostActivityPendingAction;
export default function createLastTypingReducer({ Date }: GlobalScopePonyfill): Reducer<TypingState, TypingAction>;
export {};
//# sourceMappingURL=createTypingReducer.d.ts.map