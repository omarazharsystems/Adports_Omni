"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createReducer;

var _redux = require("redux");

var _createActivitiesReducer = _interopRequireDefault(require("./reducers/createActivitiesReducer"));

var _createInternalReducer = _interopRequireDefault(require("./reducers/createInternalReducer"));

var _createNotificationsReducer = _interopRequireDefault(require("./reducers/createNotificationsReducer"));

var _createTypingReducer = _interopRequireDefault(require("./reducers/createTypingReducer"));

var _connectivityStatus = _interopRequireDefault(require("./reducers/connectivityStatus"));

var _dictateInterims = _interopRequireDefault(require("./reducers/dictateInterims"));

var _dictateState = _interopRequireDefault(require("./reducers/dictateState"));

var _language = _interopRequireDefault(require("./reducers/language"));

var _readyState = _interopRequireDefault(require("./reducers/readyState"));

var _referenceGrammarID = _interopRequireDefault(require("./reducers/referenceGrammarID"));

var _sendBoxValue = _interopRequireDefault(require("./reducers/sendBoxValue"));

var _sendTimeout = _interopRequireDefault(require("./reducers/sendTimeout"));

var _sendTypingIndicator = _interopRequireDefault(require("./reducers/sendTypingIndicator"));

var _shouldSpeakIncomingActivity = _interopRequireDefault(require("./reducers/shouldSpeakIncomingActivity"));

var _suggestedActions = _interopRequireDefault(require("./reducers/suggestedActions"));

function createReducer(ponyfill) {
  return (0, _redux.combineReducers)({
    activities: (0, _createActivitiesReducer["default"])(ponyfill),
    connectivityStatus: _connectivityStatus["default"],
    dictateInterims: _dictateInterims["default"],
    dictateState: _dictateState["default"],
    internal: (0, _createInternalReducer["default"])(ponyfill),
    language: _language["default"],
    notifications: (0, _createNotificationsReducer["default"])(ponyfill),
    readyState: _readyState["default"],
    referenceGrammarID: _referenceGrammarID["default"],
    sendBoxValue: _sendBoxValue["default"],
    sendTimeout: _sendTimeout["default"],
    sendTypingIndicator: _sendTypingIndicator["default"],
    shouldSpeakIncomingActivity: _shouldSpeakIncomingActivity["default"],
    suggestedActions: _suggestedActions["default"],
    typing: (0, _createTypingReducer["default"])(ponyfill)
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVSZWR1Y2VyIiwicG9ueWZpbGwiLCJjb21iaW5lUmVkdWNlcnMiLCJhY3Rpdml0aWVzIiwiY3JlYXRlQWN0aXZpdGllc1JlZHVjZXIiLCJjb25uZWN0aXZpdHlTdGF0dXMiLCJkaWN0YXRlSW50ZXJpbXMiLCJkaWN0YXRlU3RhdGUiLCJpbnRlcm5hbCIsImNyZWF0ZUludGVybmFsUmVkdWNlciIsImxhbmd1YWdlIiwibm90aWZpY2F0aW9ucyIsImNyZWF0ZU5vdGlmaWNhdGlvbnNSZWR1Y2VyIiwicmVhZHlTdGF0ZSIsInJlZmVyZW5jZUdyYW1tYXJJRCIsInNlbmRCb3hWYWx1ZSIsInNlbmRUaW1lb3V0Iiwic2VuZFR5cGluZ0luZGljYXRvciIsInNob3VsZFNwZWFrSW5jb21pbmdBY3Rpdml0eSIsInN1Z2dlc3RlZEFjdGlvbnMiLCJ0eXBpbmciLCJjcmVhdGVUeXBpbmdSZWR1Y2VyIl0sInNvdXJjZVJvb3QiOiJjb3JlOi8vLyIsInNvdXJjZXMiOlsiLi4vc3JjL2NyZWF0ZVJlZHVjZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZVJlZHVjZXJzIH0gZnJvbSAncmVkdXgnO1xuXG5pbXBvcnQgY3JlYXRlQWN0aXZpdGllc1JlZHVjZXIgZnJvbSAnLi9yZWR1Y2Vycy9jcmVhdGVBY3Rpdml0aWVzUmVkdWNlcic7XG5pbXBvcnQgY3JlYXRlSW50ZXJuYWxSZWR1Y2VyIGZyb20gJy4vcmVkdWNlcnMvY3JlYXRlSW50ZXJuYWxSZWR1Y2VyJztcbmltcG9ydCBjcmVhdGVOb3RpZmljYXRpb25zUmVkdWNlciBmcm9tICcuL3JlZHVjZXJzL2NyZWF0ZU5vdGlmaWNhdGlvbnNSZWR1Y2VyJztcbmltcG9ydCBjcmVhdGVUeXBpbmdSZWR1Y2VyIGZyb20gJy4vcmVkdWNlcnMvY3JlYXRlVHlwaW5nUmVkdWNlcic7XG5pbXBvcnQgY29ubmVjdGl2aXR5U3RhdHVzIGZyb20gJy4vcmVkdWNlcnMvY29ubmVjdGl2aXR5U3RhdHVzJztcbmltcG9ydCBkaWN0YXRlSW50ZXJpbXMgZnJvbSAnLi9yZWR1Y2Vycy9kaWN0YXRlSW50ZXJpbXMnO1xuaW1wb3J0IGRpY3RhdGVTdGF0ZSBmcm9tICcuL3JlZHVjZXJzL2RpY3RhdGVTdGF0ZSc7XG5pbXBvcnQgbGFuZ3VhZ2UgZnJvbSAnLi9yZWR1Y2Vycy9sYW5ndWFnZSc7XG5pbXBvcnQgcmVhZHlTdGF0ZSBmcm9tICcuL3JlZHVjZXJzL3JlYWR5U3RhdGUnO1xuaW1wb3J0IHJlZmVyZW5jZUdyYW1tYXJJRCBmcm9tICcuL3JlZHVjZXJzL3JlZmVyZW5jZUdyYW1tYXJJRCc7XG5pbXBvcnQgc2VuZEJveFZhbHVlIGZyb20gJy4vcmVkdWNlcnMvc2VuZEJveFZhbHVlJztcbmltcG9ydCBzZW5kVGltZW91dCBmcm9tICcuL3JlZHVjZXJzL3NlbmRUaW1lb3V0JztcbmltcG9ydCBzZW5kVHlwaW5nSW5kaWNhdG9yIGZyb20gJy4vcmVkdWNlcnMvc2VuZFR5cGluZ0luZGljYXRvcic7XG5pbXBvcnQgc2hvdWxkU3BlYWtJbmNvbWluZ0FjdGl2aXR5IGZyb20gJy4vcmVkdWNlcnMvc2hvdWxkU3BlYWtJbmNvbWluZ0FjdGl2aXR5JztcbmltcG9ydCBzdWdnZXN0ZWRBY3Rpb25zIGZyb20gJy4vcmVkdWNlcnMvc3VnZ2VzdGVkQWN0aW9ucyc7XG5cbmltcG9ydCB0eXBlIHsgR2xvYmFsU2NvcGVQb255ZmlsbCB9IGZyb20gJy4vdHlwZXMvR2xvYmFsU2NvcGVQb255ZmlsbCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVJlZHVjZXIocG9ueWZpbGw6IEdsb2JhbFNjb3BlUG9ueWZpbGwpIHtcbiAgcmV0dXJuIGNvbWJpbmVSZWR1Y2Vycyh7XG4gICAgYWN0aXZpdGllczogY3JlYXRlQWN0aXZpdGllc1JlZHVjZXIocG9ueWZpbGwpLFxuICAgIGNvbm5lY3Rpdml0eVN0YXR1cyxcbiAgICBkaWN0YXRlSW50ZXJpbXMsXG4gICAgZGljdGF0ZVN0YXRlLFxuICAgIGludGVybmFsOiBjcmVhdGVJbnRlcm5hbFJlZHVjZXIocG9ueWZpbGwpLFxuICAgIGxhbmd1YWdlLFxuICAgIG5vdGlmaWNhdGlvbnM6IGNyZWF0ZU5vdGlmaWNhdGlvbnNSZWR1Y2VyKHBvbnlmaWxsKSxcbiAgICByZWFkeVN0YXRlLFxuICAgIHJlZmVyZW5jZUdyYW1tYXJJRCxcbiAgICBzZW5kQm94VmFsdWUsXG4gICAgc2VuZFRpbWVvdXQsXG4gICAgc2VuZFR5cGluZ0luZGljYXRvcixcbiAgICBzaG91bGRTcGVha0luY29taW5nQWN0aXZpdHksXG4gICAgc3VnZ2VzdGVkQWN0aW9ucyxcbiAgICB0eXBpbmc6IGNyZWF0ZVR5cGluZ1JlZHVjZXIocG9ueWZpbGwpXG4gIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFJZSxTQUFTQSxhQUFULENBQXVCQyxRQUF2QixFQUFzRDtFQUNuRSxPQUFPLElBQUFDLHNCQUFBLEVBQWdCO0lBQ3JCQyxVQUFVLEVBQUUsSUFBQUMsbUNBQUEsRUFBd0JILFFBQXhCLENBRFM7SUFFckJJLGtCQUFrQixFQUFsQkEsOEJBRnFCO0lBR3JCQyxlQUFlLEVBQWZBLDJCQUhxQjtJQUlyQkMsWUFBWSxFQUFaQSx3QkFKcUI7SUFLckJDLFFBQVEsRUFBRSxJQUFBQyxpQ0FBQSxFQUFzQlIsUUFBdEIsQ0FMVztJQU1yQlMsUUFBUSxFQUFSQSxvQkFOcUI7SUFPckJDLGFBQWEsRUFBRSxJQUFBQyxzQ0FBQSxFQUEyQlgsUUFBM0IsQ0FQTTtJQVFyQlksVUFBVSxFQUFWQSxzQkFScUI7SUFTckJDLGtCQUFrQixFQUFsQkEsOEJBVHFCO0lBVXJCQyxZQUFZLEVBQVpBLHdCQVZxQjtJQVdyQkMsV0FBVyxFQUFYQSx1QkFYcUI7SUFZckJDLG1CQUFtQixFQUFuQkEsK0JBWnFCO0lBYXJCQywyQkFBMkIsRUFBM0JBLHVDQWJxQjtJQWNyQkMsZ0JBQWdCLEVBQWhCQSw0QkFkcUI7SUFlckJDLE1BQU0sRUFBRSxJQUFBQywrQkFBQSxFQUFvQnBCLFFBQXBCO0VBZmEsQ0FBaEIsQ0FBUDtBQWlCRCJ9