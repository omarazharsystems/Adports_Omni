import _objectSpread from "@babel/runtime-corejs3/helpers/objectSpread2";
import _slicedToArray from "@babel/runtime-corejs3/helpers/slicedToArray";
import _parseFloat from "@babel/runtime-corejs3/core-js-stable/parse-float";
/* eslint no-magic-numbers: ["error", { "ignore": [1, 100] }] */

import React from 'react';
import * as browser from './browser';
import useDir from './hooks/useDir';
import useScrollBarPercentage from './hooks/useScrollBarPercentage';
import useScrollBarWidth from './hooks/useScrollBarWidth';
var ScrollBar = function ScrollBar() {
  var _useDir = useDir(),
    _useDir2 = _slicedToArray(_useDir, 1),
    dir = _useDir2[0];
  var _useScrollBarPercenta = useScrollBarPercentage(),
    _useScrollBarPercenta2 = _slicedToArray(_useScrollBarPercenta, 1),
    scrollBarPercentage = _useScrollBarPercenta2[0];
  var _useScrollBarWidth = useScrollBarWidth(),
    _useScrollBarWidth2 = _slicedToArray(_useScrollBarWidth, 1),
    scrollBarWidth = _useScrollBarWidth2[0];
  return /*#__PURE__*/React.createElement("div", {
    className: "react-film__scroll-bar react-film__main__slider react-film__main__slider--bottom"
  }, /*#__PURE__*/React.createElement("div", {
    className: "react-film__scroll-bar__handle",
    style: _objectSpread(_objectSpread({}, dir === 'rtl' ? browser.edgeUWP || browser.internetExplorer ? {
      marginRight: "".concat((1 - _parseFloat(scrollBarWidth) / 100) * _parseFloat(scrollBarPercentage), "%")
    } : {
      marginRight: "".concat((_parseFloat(scrollBarWidth) / 100 - 1) * _parseFloat(scrollBarPercentage), "%")
    } : {
      marginLeft: "".concat((1 - _parseFloat(scrollBarWidth) / 100) * _parseFloat(scrollBarPercentage), "%")
    }), {}, {
      width: scrollBarWidth
    })
  }));
};
export default ScrollBar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsImJyb3dzZXIiLCJ1c2VEaXIiLCJ1c2VTY3JvbGxCYXJQZXJjZW50YWdlIiwidXNlU2Nyb2xsQmFyV2lkdGgiLCJTY3JvbGxCYXIiLCJkaXIiLCJzY3JvbGxCYXJQZXJjZW50YWdlIiwic2Nyb2xsQmFyV2lkdGgiLCJlZGdlVVdQIiwiaW50ZXJuZXRFeHBsb3JlciIsIm1hcmdpblJpZ2h0IiwibWFyZ2luTGVmdCIsIndpZHRoIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL1Njcm9sbEJhci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogW1wiZXJyb3JcIiwgeyBcImlnbm9yZVwiOiBbMSwgMTAwXSB9XSAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgKiBhcyBicm93c2VyIGZyb20gJy4vYnJvd3Nlcic7XG5pbXBvcnQgdXNlRGlyIGZyb20gJy4vaG9va3MvdXNlRGlyJztcbmltcG9ydCB1c2VTY3JvbGxCYXJQZXJjZW50YWdlIGZyb20gJy4vaG9va3MvdXNlU2Nyb2xsQmFyUGVyY2VudGFnZSc7XG5pbXBvcnQgdXNlU2Nyb2xsQmFyV2lkdGggZnJvbSAnLi9ob29rcy91c2VTY3JvbGxCYXJXaWR0aCc7XG5cbmNvbnN0IFNjcm9sbEJhciA9ICgpID0+IHtcbiAgY29uc3QgW2Rpcl0gPSB1c2VEaXIoKTtcbiAgY29uc3QgW3Njcm9sbEJhclBlcmNlbnRhZ2VdID0gdXNlU2Nyb2xsQmFyUGVyY2VudGFnZSgpO1xuICBjb25zdCBbc2Nyb2xsQmFyV2lkdGhdID0gdXNlU2Nyb2xsQmFyV2lkdGgoKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicmVhY3QtZmlsbV9fc2Nyb2xsLWJhciByZWFjdC1maWxtX19tYWluX19zbGlkZXIgcmVhY3QtZmlsbV9fbWFpbl9fc2xpZGVyLS1ib3R0b21cIj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPVwicmVhY3QtZmlsbV9fc2Nyb2xsLWJhcl9faGFuZGxlXCJcbiAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAuLi4oZGlyID09PSAncnRsJ1xuICAgICAgICAgICAgPyBicm93c2VyLmVkZ2VVV1AgfHwgYnJvd3Nlci5pbnRlcm5ldEV4cGxvcmVyXG4gICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgbWFyZ2luUmlnaHQ6IGAkeygxIC0gcGFyc2VGbG9hdChzY3JvbGxCYXJXaWR0aCkgLyAxMDApICogcGFyc2VGbG9hdChzY3JvbGxCYXJQZXJjZW50YWdlKX0lYFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICBtYXJnaW5SaWdodDogYCR7KHBhcnNlRmxvYXQoc2Nyb2xsQmFyV2lkdGgpIC8gMTAwIC0gMSkgKiBwYXJzZUZsb2F0KHNjcm9sbEJhclBlcmNlbnRhZ2UpfSVgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgbWFyZ2luTGVmdDogYCR7KDEgLSBwYXJzZUZsb2F0KHNjcm9sbEJhcldpZHRoKSAvIDEwMCkgKiBwYXJzZUZsb2F0KHNjcm9sbEJhclBlcmNlbnRhZ2UpfSVgXG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgIHdpZHRoOiBzY3JvbGxCYXJXaWR0aFxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNjcm9sbEJhcjtcbiJdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLE9BQU87QUFFekIsT0FBTyxLQUFLQyxPQUFPLE1BQU0sV0FBVztBQUNwQyxPQUFPQyxNQUFNLE1BQU0sZ0JBQWdCO0FBQ25DLE9BQU9DLHNCQUFzQixNQUFNLGdDQUFnQztBQUNuRSxPQUFPQyxpQkFBaUIsTUFBTSwyQkFBMkI7QUFFekQsSUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVMsR0FBUztFQUN0QixjQUFjSCxNQUFNLEVBQUU7SUFBQTtJQUFmSSxHQUFHO0VBQ1YsNEJBQThCSCxzQkFBc0IsRUFBRTtJQUFBO0lBQS9DSSxtQkFBbUI7RUFDMUIseUJBQXlCSCxpQkFBaUIsRUFBRTtJQUFBO0lBQXJDSSxjQUFjO0VBRXJCLG9CQUNFO0lBQUssU0FBUyxFQUFDO0VBQWtGLGdCQUMvRjtJQUNFLFNBQVMsRUFBQyxnQ0FBZ0M7SUFDMUMsS0FBSyxrQ0FDQ0YsR0FBRyxLQUFLLEtBQUssR0FDYkwsT0FBTyxDQUFDUSxPQUFPLElBQUlSLE9BQU8sQ0FBQ1MsZ0JBQWdCLEdBQ3pDO01BQ0VDLFdBQVcsWUFBSyxDQUFDLENBQUMsR0FBRyxZQUFXSCxjQUFjLENBQUMsR0FBRyxHQUFHLElBQUksWUFBV0QsbUJBQW1CLENBQUM7SUFDMUYsQ0FBQyxHQUNEO01BQ0VJLFdBQVcsWUFBSyxDQUFDLFlBQVdILGNBQWMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLElBQUksWUFBV0QsbUJBQW1CLENBQUM7SUFDMUYsQ0FBQyxHQUNIO01BQ0VLLFVBQVUsWUFBSyxDQUFDLENBQUMsR0FBRyxZQUFXSixjQUFjLENBQUMsR0FBRyxHQUFHLElBQUksWUFBV0QsbUJBQW1CLENBQUM7SUFDekYsQ0FBQztNQUNMTSxLQUFLLEVBQUVMO0lBQWM7RUFDckIsRUFDRixDQUNFO0FBRVYsQ0FBQztBQUVELGVBQWVILFNBQVMifQ==