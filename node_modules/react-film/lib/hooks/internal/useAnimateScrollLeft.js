"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");
var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;
_Object$defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useAnimateScrollLeft;
var _sign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/math/sign"));
var _now = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/date/now"));
var _react = require("react");
function step(from, to, stepper, index) {
  var next = from;
  for (var i = 0; i < index; i++) {
    next = stepper(next, to);
  }
  return next;
}
function squareStepper(current, to) {
  var sign = (0, _sign.default)(to - current);
  var step = Math.sqrt(Math.abs(to - current));
  var next = current + step * sign;
  if (sign > 0) {
    return Math.min(to, next);
  }
  return Math.max(to, next);
}
function useAnimateScrollLeft(element, to, onEnd) {
  (0, _react.useEffect)(function () {
    if (element) {
      var start = (0, _now.default)();
      var animator;
      var animate = function animate(from) {
        animator = requestAnimationFrame(function () {
          // eslint-disable-next-line no-magic-numbers
          var nextValue = step(from, to, squareStepper, ((0, _now.default)() - start) / 5);

          // eslint-disable-next-line no-magic-numbers
          if (Math.abs(to - nextValue) < 0.5) {
            nextValue = to;
          }
          element.scrollLeft = nextValue;
          if (to === nextValue) {
            onEnd && onEnd(true);
          } else {
            animate(from);
          }
        });
      };
      animate(element.scrollLeft);
      return function () {
        return cancelAnimationFrame(animator);
      };
    }
  }, [element, to, onEnd]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdGVwIiwiZnJvbSIsInRvIiwic3RlcHBlciIsImluZGV4IiwibmV4dCIsImkiLCJzcXVhcmVTdGVwcGVyIiwiY3VycmVudCIsInNpZ24iLCJNYXRoIiwic3FydCIsImFicyIsIm1pbiIsIm1heCIsInVzZUFuaW1hdGVTY3JvbGxMZWZ0IiwiZWxlbWVudCIsIm9uRW5kIiwidXNlRWZmZWN0Iiwic3RhcnQiLCJhbmltYXRvciIsImFuaW1hdGUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJuZXh0VmFsdWUiLCJzY3JvbGxMZWZ0IiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvaG9va3MvaW50ZXJuYWwvdXNlQW5pbWF0ZVNjcm9sbExlZnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBzdGVwKGZyb20sIHRvLCBzdGVwcGVyLCBpbmRleCkge1xuICBsZXQgbmV4dCA9IGZyb207XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbmRleDsgaSsrKSB7XG4gICAgbmV4dCA9IHN0ZXBwZXIobmV4dCwgdG8pO1xuICB9XG5cbiAgcmV0dXJuIG5leHQ7XG59XG5cbmZ1bmN0aW9uIHNxdWFyZVN0ZXBwZXIoY3VycmVudCwgdG8pIHtcbiAgY29uc3Qgc2lnbiA9IE1hdGguc2lnbih0byAtIGN1cnJlbnQpO1xuICBjb25zdCBzdGVwID0gTWF0aC5zcXJ0KE1hdGguYWJzKHRvIC0gY3VycmVudCkpO1xuICBjb25zdCBuZXh0ID0gY3VycmVudCArIHN0ZXAgKiBzaWduO1xuXG4gIGlmIChzaWduID4gMCkge1xuICAgIHJldHVybiBNYXRoLm1pbih0bywgbmV4dCk7XG4gIH1cblxuICByZXR1cm4gTWF0aC5tYXgodG8sIG5leHQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VBbmltYXRlU2Nyb2xsTGVmdChlbGVtZW50LCB0bywgb25FbmQpIHtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoZWxlbWVudCkge1xuICAgICAgY29uc3Qgc3RhcnQgPSBEYXRlLm5vdygpO1xuXG4gICAgICBsZXQgYW5pbWF0b3I7XG5cbiAgICAgIGNvbnN0IGFuaW1hdGUgPSBmcm9tID0+IHtcbiAgICAgICAgYW5pbWF0b3IgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1tYWdpYy1udW1iZXJzXG4gICAgICAgICAgbGV0IG5leHRWYWx1ZSA9IHN0ZXAoZnJvbSwgdG8sIHNxdWFyZVN0ZXBwZXIsIChEYXRlLm5vdygpIC0gc3RhcnQpIC8gNSk7XG5cbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbWFnaWMtbnVtYmVyc1xuICAgICAgICAgIGlmIChNYXRoLmFicyh0byAtIG5leHRWYWx1ZSkgPCAwLjUpIHtcbiAgICAgICAgICAgIG5leHRWYWx1ZSA9IHRvO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGVsZW1lbnQuc2Nyb2xsTGVmdCA9IG5leHRWYWx1ZTtcblxuICAgICAgICAgIGlmICh0byA9PT0gbmV4dFZhbHVlKSB7XG4gICAgICAgICAgICBvbkVuZCAmJiBvbkVuZCh0cnVlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYW5pbWF0ZShmcm9tKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgYW5pbWF0ZShlbGVtZW50LnNjcm9sbExlZnQpO1xuXG4gICAgICByZXR1cm4gKCkgPT4gY2FuY2VsQW5pbWF0aW9uRnJhbWUoYW5pbWF0b3IpO1xuICAgIH1cbiAgfSwgW2VsZW1lbnQsIHRvLCBvbkVuZF0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFFQSxTQUFTQSxJQUFJLENBQUNDLElBQUksRUFBRUMsRUFBRSxFQUFFQyxPQUFPLEVBQUVDLEtBQUssRUFBRTtFQUN0QyxJQUFJQyxJQUFJLEdBQUdKLElBQUk7RUFFZixLQUFLLElBQUlLLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0YsS0FBSyxFQUFFRSxDQUFDLEVBQUUsRUFBRTtJQUM5QkQsSUFBSSxHQUFHRixPQUFPLENBQUNFLElBQUksRUFBRUgsRUFBRSxDQUFDO0VBQzFCO0VBRUEsT0FBT0csSUFBSTtBQUNiO0FBRUEsU0FBU0UsYUFBYSxDQUFDQyxPQUFPLEVBQUVOLEVBQUUsRUFBRTtFQUNsQyxJQUFNTyxJQUFJLEdBQUcsbUJBQVVQLEVBQUUsR0FBR00sT0FBTyxDQUFDO0VBQ3BDLElBQU1SLElBQUksR0FBR1UsSUFBSSxDQUFDQyxJQUFJLENBQUNELElBQUksQ0FBQ0UsR0FBRyxDQUFDVixFQUFFLEdBQUdNLE9BQU8sQ0FBQyxDQUFDO0VBQzlDLElBQU1ILElBQUksR0FBR0csT0FBTyxHQUFHUixJQUFJLEdBQUdTLElBQUk7RUFFbEMsSUFBSUEsSUFBSSxHQUFHLENBQUMsRUFBRTtJQUNaLE9BQU9DLElBQUksQ0FBQ0csR0FBRyxDQUFDWCxFQUFFLEVBQUVHLElBQUksQ0FBQztFQUMzQjtFQUVBLE9BQU9LLElBQUksQ0FBQ0ksR0FBRyxDQUFDWixFQUFFLEVBQUVHLElBQUksQ0FBQztBQUMzQjtBQUVlLFNBQVNVLG9CQUFvQixDQUFDQyxPQUFPLEVBQUVkLEVBQUUsRUFBRWUsS0FBSyxFQUFFO0VBQy9ELElBQUFDLGdCQUFTLEVBQUMsWUFBTTtJQUNkLElBQUlGLE9BQU8sRUFBRTtNQUNYLElBQU1HLEtBQUssR0FBRyxtQkFBVTtNQUV4QixJQUFJQyxRQUFRO01BRVosSUFBTUMsT0FBTyxHQUFHLFNBQVZBLE9BQU8sQ0FBR3BCLElBQUksRUFBSTtRQUN0Qm1CLFFBQVEsR0FBR0UscUJBQXFCLENBQUMsWUFBTTtVQUNyQztVQUNBLElBQUlDLFNBQVMsR0FBR3ZCLElBQUksQ0FBQ0MsSUFBSSxFQUFFQyxFQUFFLEVBQUVLLGFBQWEsRUFBRSxDQUFDLG1CQUFVLEdBQUdZLEtBQUssSUFBSSxDQUFDLENBQUM7O1VBRXZFO1VBQ0EsSUFBSVQsSUFBSSxDQUFDRSxHQUFHLENBQUNWLEVBQUUsR0FBR3FCLFNBQVMsQ0FBQyxHQUFHLEdBQUcsRUFBRTtZQUNsQ0EsU0FBUyxHQUFHckIsRUFBRTtVQUNoQjtVQUVBYyxPQUFPLENBQUNRLFVBQVUsR0FBR0QsU0FBUztVQUU5QixJQUFJckIsRUFBRSxLQUFLcUIsU0FBUyxFQUFFO1lBQ3BCTixLQUFLLElBQUlBLEtBQUssQ0FBQyxJQUFJLENBQUM7VUFDdEIsQ0FBQyxNQUFNO1lBQ0xJLE9BQU8sQ0FBQ3BCLElBQUksQ0FBQztVQUNmO1FBQ0YsQ0FBQyxDQUFDO01BQ0osQ0FBQztNQUVEb0IsT0FBTyxDQUFDTCxPQUFPLENBQUNRLFVBQVUsQ0FBQztNQUUzQixPQUFPO1FBQUEsT0FBTUMsb0JBQW9CLENBQUNMLFFBQVEsQ0FBQztNQUFBO0lBQzdDO0VBQ0YsQ0FBQyxFQUFFLENBQUNKLE9BQU8sRUFBRWQsRUFBRSxFQUFFZSxLQUFLLENBQUMsQ0FBQztBQUMxQiJ9