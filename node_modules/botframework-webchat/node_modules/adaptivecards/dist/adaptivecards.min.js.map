{"version":3,"file":"adaptivecards.min.js","mappings":"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","sources":["webpack://AdaptiveCards/webpack/universalModuleDefinition","webpack://AdaptiveCards/./src/activity-request.ts","webpack://AdaptiveCards/./src/adaptive-applet.ts","webpack://AdaptiveCards/./src/adaptivecards.ts","webpack://AdaptiveCards/./src/card-elements.ts","webpack://AdaptiveCards/./src/card-object.ts","webpack://AdaptiveCards/./src/channel-adapter.ts","webpack://AdaptiveCards/./src/controls/collection.ts","webpack://AdaptiveCards/./src/controls/constants.ts","webpack://AdaptiveCards/./src/controls/index.ts","webpack://AdaptiveCards/./src/controls/menu-item.ts","webpack://AdaptiveCards/./src/controls/popup-control.ts","webpack://AdaptiveCards/./src/controls/popup-menu.ts","webpack://AdaptiveCards/./src/enums.ts","webpack://AdaptiveCards/./src/host-capabilities.ts","webpack://AdaptiveCards/./src/host-config.ts","webpack://AdaptiveCards/./src/registry.ts","webpack://AdaptiveCards/./src/serialization.ts","webpack://AdaptiveCards/./src/shared.ts","webpack://AdaptiveCards/./src/strings.ts","webpack://AdaptiveCards/./src/table.ts","webpack://AdaptiveCards/./src/text-formatters.ts","webpack://AdaptiveCards/./src/utils.ts","webpack://AdaptiveCards/webpack/bootstrap","webpack://AdaptiveCards/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AdaptiveCards\"] = factory();\n\telse\n\t\troot[\"AdaptiveCards\"] = factory();\n})(this, function() {\nreturn ","// Copyright (C) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport {\r\n    Authentication,\r\n    AuthCardButton,\r\n    ExecuteAction,\r\n    TokenExchangeResource\r\n} from \"./card-elements\";\r\n\r\nexport enum ActivityRequestTrigger {\r\n    Automatic = \"automatic\",\r\n    Manual = \"manual\"\r\n}\r\n\r\nexport interface IActivityRequest {\r\n    readonly action: ExecuteAction;\r\n    readonly trigger: ActivityRequestTrigger;\r\n    readonly attemptNumber: number;\r\n    readonly consecutiveRefreshes: number;\r\n\r\n    authCode?: string;\r\n    authToken?: string;\r\n\r\n    retryAsync(): void;\r\n}\r\n\r\nexport class ActivityRequestError {\r\n    constructor(readonly code?: string, readonly message?: string) {}\r\n}\r\n\r\nexport abstract class ActivityResponse {\r\n    constructor(readonly request: IActivityRequest) {}\r\n}\r\n\r\nexport class SuccessResponse extends ActivityResponse {\r\n    constructor(readonly request: IActivityRequest, readonly rawContent?: string) {\r\n        super(request);\r\n    }\r\n}\r\n\r\nexport class ErrorResponse extends ActivityResponse {\r\n    constructor(readonly request: IActivityRequest, readonly error: ActivityRequestError) {\r\n        super(request);\r\n    }\r\n}\r\n\r\nexport class LoginRequestResponse extends ActivityResponse {\r\n    private _auth: Authentication;\r\n    readonly signinButton?: AuthCardButton;\r\n\r\n    constructor(readonly request: IActivityRequest, auth: Authentication) {\r\n        super(request);\r\n        this._auth = auth;\r\n\r\n        for (const button of this._auth.buttons) {\r\n            if (button.type === \"signin\" && button.value !== undefined) {\r\n                try {\r\n                    new URL(button.value);\r\n\r\n                    this.signinButton = button;\r\n\r\n                    break;\r\n                } catch (e) {\r\n                    // Ignore parsing error\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get tokenExchangeResource(): TokenExchangeResource | undefined {\r\n        return this._auth.tokenExchangeResource;\r\n    }\r\n}\r\n","// Copyright (C) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport { GlobalSettings } from \"./shared\";\r\nimport { ChannelAdapter } from \"./channel-adapter\";\r\nimport {\r\n    ActivityResponse,\r\n    IActivityRequest,\r\n    ActivityRequestTrigger,\r\n    SuccessResponse,\r\n    ErrorResponse,\r\n    LoginRequestResponse\r\n} from \"./activity-request\";\r\nimport { Strings } from \"./strings\";\r\nimport {\r\n    SubmitAction,\r\n    ExecuteAction,\r\n    SerializationContext,\r\n    AdaptiveCard,\r\n    Action,\r\n    Input,\r\n    TokenExchangeResource,\r\n    AuthCardButton\r\n} from \"./card-elements\";\r\nimport { Versions } from \"./serialization\";\r\nimport { HostConfig } from \"./host-config\";\r\n\r\nfunction logEvent(level: Enums.LogLevel, message?: any, ...optionalParams: any[]) {\r\n    if (GlobalSettings.applets.logEnabled) {\r\n        if (GlobalSettings.applets.onLogEvent) {\r\n            GlobalSettings.applets.onLogEvent(level, message, optionalParams);\r\n        } else {\r\n            /* eslint-disable no-console */\r\n            switch (level) {\r\n                case Enums.LogLevel.Warning:\r\n                    console.warn(message, optionalParams);\r\n                    break;\r\n                case Enums.LogLevel.Error:\r\n                    console.error(message, optionalParams);\r\n                    break;\r\n                default:\r\n                    console.log(message, optionalParams);\r\n                    break;\r\n            }\r\n            /* eslint-enable no-console */\r\n        }\r\n    }\r\n}\r\n\r\nclass ActivityRequest implements IActivityRequest {\r\n    constructor(\r\n        readonly action: ExecuteAction,\r\n        readonly trigger: ActivityRequestTrigger,\r\n        readonly consecutiveRefreshes: number\r\n    ) {}\r\n\r\n    authCode?: string;\r\n    authToken?: string;\r\n    attemptNumber: number = 0;\r\n\r\n    onSend: (sender: ActivityRequest) => void;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/require-await\r\n    async retryAsync(): Promise<void> {\r\n        if (this.onSend) {\r\n            this.onSend(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveApplet {\r\n    private static readonly _submitMagicCodeActionId = \"submitMagicCode\";\r\n    private static readonly _cancelMagicCodeAuthActionId = \"cancelMagicCodeAuth\";\r\n\r\n    private _card?: AdaptiveCard;\r\n    private _cardPayload: any;\r\n    private _allowAutomaticCardUpdate: boolean = false;\r\n    private _refreshButtonHostElement: HTMLElement;\r\n    private _cardHostElement: HTMLElement;\r\n    private _progressOverlay?: HTMLElement;\r\n\r\n    private displayCard(card: AdaptiveCard) {\r\n        if (card.renderedElement) {\r\n            Utils.clearElementChildren(this._cardHostElement);\r\n\r\n            this._refreshButtonHostElement.style.display = \"none\";\r\n\r\n            this._cardHostElement.appendChild(card.renderedElement);\r\n        } else {\r\n            throw new Error(\"displayCard: undefined card.\");\r\n        }\r\n    }\r\n\r\n    private showManualRefreshButton(refreshAction: ExecuteAction) {\r\n        const displayBuiltInManualRefreshButton = this.onShowManualRefreshButton\r\n            ? this.onShowManualRefreshButton(this)\r\n            : true;\r\n\r\n        if (displayBuiltInManualRefreshButton) {\r\n            this._refreshButtonHostElement.style.display = \"none\";\r\n\r\n            let renderedRefreshButton: HTMLElement | undefined = undefined;\r\n\r\n            if (this.onRenderManualRefreshButton) {\r\n                renderedRefreshButton = this.onRenderManualRefreshButton(this);\r\n            } else {\r\n                let message = Strings.runtime.refreshThisCard();\r\n\r\n                if (GlobalSettings.applets.refresh.mode === Enums.RefreshMode.Automatic) {\r\n                    let autoRefreshPausedMessage = Strings.runtime.automaticRefreshPaused();\r\n\r\n                    if (autoRefreshPausedMessage[autoRefreshPausedMessage.length - 1] !== \" \") {\r\n                        autoRefreshPausedMessage += \" \";\r\n                    }\r\n\r\n                    message = Strings.runtime.clckToRestartAutomaticRefresh();\r\n                }\r\n\r\n                const cardPayload = {\r\n                    type: \"AdaptiveCard\",\r\n                    version: \"1.2\",\r\n                    body: [\r\n                        {\r\n                            type: \"RichTextBlock\",\r\n                            horizontalAlignment: \"right\",\r\n                            inlines: [\r\n                                {\r\n                                    type: \"TextRun\",\r\n                                    text: message,\r\n                                    selectAction: {\r\n                                        type: \"Action.Submit\",\r\n                                        id: \"refreshCard\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                };\r\n\r\n                const card = new AdaptiveCard();\r\n                card.parse(cardPayload, new SerializationContext(Versions.v1_2));\r\n                card.onExecuteAction = (action: Action) => {\r\n                    if (action.id === \"refreshCard\") {\r\n                        Utils.clearElementChildren(this._refreshButtonHostElement);\r\n\r\n                        this.internalExecuteAction(\r\n                            refreshAction,\r\n                            ActivityRequestTrigger.Automatic,\r\n                            0\r\n                        );\r\n                    }\r\n                };\r\n\r\n                renderedRefreshButton = card.render();\r\n            }\r\n\r\n            if (renderedRefreshButton) {\r\n                Utils.clearElementChildren(this._refreshButtonHostElement);\r\n\r\n                this._refreshButtonHostElement.appendChild(renderedRefreshButton);\r\n\r\n                this._refreshButtonHostElement.style.removeProperty(\"display\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private createActivityRequest(\r\n        action: ExecuteAction,\r\n        trigger: ActivityRequestTrigger,\r\n        consecutiveRefreshes: number\r\n    ): ActivityRequest | undefined {\r\n        if (this.card) {\r\n            const request = new ActivityRequest(action, trigger, consecutiveRefreshes);\r\n            request.onSend = (sender: ActivityRequest) => {\r\n                sender.attemptNumber++;\r\n\r\n                void this.internalSendActivityRequestAsync(request);\r\n            };\r\n\r\n            const cancel = this.onPrepareActivityRequest\r\n                ? !this.onPrepareActivityRequest(this, request, action)\r\n                : false;\r\n\r\n            return cancel ? undefined : request;\r\n        } else {\r\n            throw new Error(\"createActivityRequest: no card has been set.\");\r\n        }\r\n    }\r\n\r\n    private createMagicCodeInputCard(attemptNumber: number): AdaptiveCard {\r\n        const payload = {\r\n            type: \"AdaptiveCard\",\r\n            version: \"1.0\",\r\n            body: [\r\n                {\r\n                    type: \"TextBlock\",\r\n                    color: \"attention\",\r\n                    text: attemptNumber === 1 ? undefined : \"That didn't work... let's try again.\",\r\n                    wrap: true,\r\n                    horizontalAlignment: \"center\"\r\n                },\r\n                {\r\n                    type: \"TextBlock\",\r\n                    text: 'Please login in the popup. You will obtain a magic code. Paste that code below and select \"Submit\"',\r\n                    wrap: true,\r\n                    horizontalAlignment: \"center\"\r\n                },\r\n                {\r\n                    type: \"Input.Text\",\r\n                    id: \"magicCode\",\r\n                    placeholder: \"Enter magic code\"\r\n                },\r\n                {\r\n                    type: \"ActionSet\",\r\n                    horizontalAlignment: \"center\",\r\n                    actions: [\r\n                        {\r\n                            type: \"Action.Submit\",\r\n                            id: AdaptiveApplet._submitMagicCodeActionId,\r\n                            title: \"Submit\"\r\n                        },\r\n                        {\r\n                            type: \"Action.Submit\",\r\n                            id: AdaptiveApplet._cancelMagicCodeAuthActionId,\r\n                            title: \"Cancel\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n\r\n        const card = new AdaptiveCard();\r\n        card.parse(payload);\r\n\r\n        return card;\r\n    }\r\n\r\n    private cancelAutomaticRefresh() {\r\n        if (this._allowAutomaticCardUpdate) {\r\n            logEvent(\r\n                Enums.LogLevel.Warning,\r\n                \"Automatic card refresh has been cancelled as a result of the user interacting with the card.\"\r\n            );\r\n        }\r\n\r\n        this._allowAutomaticCardUpdate = false;\r\n    }\r\n\r\n    private createSerializationContext(): SerializationContext {\r\n        return this.onCreateSerializationContext\r\n            ? this.onCreateSerializationContext(this)\r\n            : new SerializationContext();\r\n    }\r\n\r\n    private internalSetCard(payload: any, consecutiveRefreshes: number) {\r\n        if (typeof payload === \"object\" && payload[\"type\"] === \"AdaptiveCard\") {\r\n            this._cardPayload = payload;\r\n        }\r\n\r\n        if (this._cardPayload) {\r\n            try {\r\n                const card = new AdaptiveCard();\r\n\r\n                if (this.hostConfig) {\r\n                    card.hostConfig = this.hostConfig;\r\n                }\r\n\r\n                const serializationContext = this.createSerializationContext();\r\n\r\n                card.parse(this._cardPayload, serializationContext);\r\n\r\n                const doChangeCard = this.onCardChanging\r\n                    ? this.onCardChanging(this, this._cardPayload)\r\n                    : true;\r\n\r\n                if (doChangeCard) {\r\n                    this._card = card;\r\n\r\n                    if (\r\n                        this._card.authentication &&\r\n                        this._card.authentication.tokenExchangeResource &&\r\n                        this.onPrefetchSSOToken\r\n                    ) {\r\n                        this.onPrefetchSSOToken(\r\n                            this,\r\n                            this._card.authentication.tokenExchangeResource\r\n                        );\r\n                    }\r\n\r\n                    this._card.onExecuteAction = (action: Action) => {\r\n                        // If the user takes an action, cancel any pending automatic refresh\r\n                        this.cancelAutomaticRefresh();\r\n\r\n                        this.internalExecuteAction(action, ActivityRequestTrigger.Manual, 0);\r\n                    };\r\n                    this._card.onInputValueChanged = (_input: Input) => {\r\n                        // If the user modifies an input, cancel any pending automatic refresh\r\n                        this.cancelAutomaticRefresh();\r\n                    };\r\n\r\n                    this._card.render();\r\n\r\n                    if (this._card.renderedElement) {\r\n                        this.displayCard(this._card);\r\n\r\n                        if (this.onCardChanged) {\r\n                            this.onCardChanged(this);\r\n                        }\r\n\r\n                        if (this._card.refresh) {\r\n                            if (\r\n                                GlobalSettings.applets.refresh.mode ===\r\n                                    Enums.RefreshMode.Automatic &&\r\n                                consecutiveRefreshes <\r\n                                    GlobalSettings.applets.refresh\r\n                                        .maximumConsecutiveAutomaticRefreshes\r\n                            ) {\r\n                                if (\r\n                                    GlobalSettings.applets.refresh.timeBetweenAutomaticRefreshes <=\r\n                                    0\r\n                                ) {\r\n                                    logEvent(\r\n                                        Enums.LogLevel.Info,\r\n                                        \"Triggering automatic card refresh number \" +\r\n                                            (consecutiveRefreshes + 1)\r\n                                    );\r\n\r\n                                    this.internalExecuteAction(\r\n                                        this._card.refresh.action,\r\n                                        ActivityRequestTrigger.Automatic,\r\n                                        consecutiveRefreshes + 1\r\n                                    );\r\n                                } else {\r\n                                    logEvent(\r\n                                        Enums.LogLevel.Info,\r\n                                        \"Scheduling automatic card refresh number \" +\r\n                                            (consecutiveRefreshes + 1) +\r\n                                            \" in \" +\r\n                                            GlobalSettings.applets.refresh\r\n                                                .timeBetweenAutomaticRefreshes +\r\n                                            \"ms\"\r\n                                    );\r\n\r\n                                    const action = this._card.refresh.action;\r\n\r\n                                    this._allowAutomaticCardUpdate = true;\r\n\r\n                                    window.setTimeout(() => {\r\n                                        if (this._allowAutomaticCardUpdate) {\r\n                                            this.internalExecuteAction(\r\n                                                action,\r\n                                                ActivityRequestTrigger.Automatic,\r\n                                                consecutiveRefreshes + 1\r\n                                            );\r\n                                        }\r\n                                    }, GlobalSettings.applets.refresh.timeBetweenAutomaticRefreshes);\r\n                                }\r\n                            } else if (\r\n                                GlobalSettings.applets.refresh.mode !== Enums.RefreshMode.Disabled\r\n                            ) {\r\n                                if (consecutiveRefreshes > 0) {\r\n                                    logEvent(\r\n                                        Enums.LogLevel.Warning,\r\n                                        \"Stopping automatic refreshes after \" +\r\n                                            consecutiveRefreshes +\r\n                                            \" consecutive refreshes.\"\r\n                                    );\r\n                                } else {\r\n                                    logEvent(\r\n                                        Enums.LogLevel.Warning,\r\n                                        \"The card has a refresh section, but automatic refreshes are disabled.\"\r\n                                    );\r\n                                }\r\n\r\n                                if (\r\n                                    GlobalSettings.applets.refresh\r\n                                        .allowManualRefreshesAfterAutomaticRefreshes ||\r\n                                    GlobalSettings.applets.refresh.mode === Enums.RefreshMode.Manual\r\n                                ) {\r\n                                    logEvent(Enums.LogLevel.Info, \"Showing manual refresh button.\");\r\n\r\n                                    this.showManualRefreshButton(this._card.refresh.action);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                // Ignore all errors\r\n                logEvent(Enums.LogLevel.Error, \"setCard: \" + error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private internalExecuteAction(\r\n        action: Action,\r\n        trigger: ActivityRequestTrigger,\r\n        consecutiveRefreshes: number\r\n    ) {\r\n        if (action instanceof ExecuteAction) {\r\n            if (this.channelAdapter) {\r\n                const request = this.createActivityRequest(action, trigger, consecutiveRefreshes);\r\n\r\n                if (request) {\r\n                    void request.retryAsync();\r\n                }\r\n            } else {\r\n                throw new Error(\"internalExecuteAction: No channel adapter set.\");\r\n            }\r\n        }\r\n\r\n        if (this.onAction) {\r\n            this.onAction(this, action);\r\n        }\r\n    }\r\n\r\n    private createProgressOverlay(request: ActivityRequest): HTMLElement | undefined {\r\n        if (!this._progressOverlay) {\r\n            if (this.onCreateProgressOverlay) {\r\n                this._progressOverlay = this.onCreateProgressOverlay(this, request);\r\n            } else {\r\n                this._progressOverlay = document.createElement(\"div\");\r\n                this._progressOverlay.className = \"aaf-progress-overlay\";\r\n\r\n                const spinner = document.createElement(\"div\");\r\n                spinner.className = \"aaf-spinner\";\r\n                spinner.style.width = \"28px\";\r\n                spinner.style.height = \"28px\";\r\n\r\n                this._progressOverlay.appendChild(spinner);\r\n            }\r\n        }\r\n\r\n        return this._progressOverlay;\r\n    }\r\n\r\n    private removeProgressOverlay(request: IActivityRequest) {\r\n        if (this.onRemoveProgressOverlay) {\r\n            this.onRemoveProgressOverlay(this, request);\r\n        }\r\n\r\n        if (this._progressOverlay !== undefined) {\r\n            this.renderedElement.removeChild(this._progressOverlay);\r\n\r\n            this._progressOverlay = undefined;\r\n        }\r\n    }\r\n\r\n    private activityRequestSucceeded(\r\n        response: SuccessResponse,\r\n        parsedContent: string | AdaptiveCard | undefined\r\n    ) {\r\n        if (this.onActivityRequestSucceeded) {\r\n            this.onActivityRequestSucceeded(this, response, parsedContent);\r\n        }\r\n    }\r\n\r\n    private activityRequestFailed(response: ErrorResponse): number {\r\n        return this.onActivityRequestFailed\r\n            ? this.onActivityRequestFailed(this, response)\r\n            : GlobalSettings.applets.defaultTimeBetweenRetryAttempts;\r\n    }\r\n\r\n    private showAuthCodeInputDialog(request: ActivityRequest) {\r\n        const showBuiltInAuthCodeInputCard = this.onShowAuthCodeInputDialog\r\n            ? this.onShowAuthCodeInputDialog(this, request)\r\n            : true;\r\n\r\n        if (showBuiltInAuthCodeInputCard) {\r\n            const authCodeInputCard = this.createMagicCodeInputCard(request.attemptNumber);\r\n            authCodeInputCard.render();\r\n            authCodeInputCard.onExecuteAction = (submitMagicCodeAction: Action) => {\r\n                if (this.card && submitMagicCodeAction instanceof SubmitAction) {\r\n                    switch (submitMagicCodeAction.id) {\r\n                        case AdaptiveApplet._submitMagicCodeActionId:\r\n                            let authCode: string | undefined = undefined;\r\n\r\n                            if (\r\n                                submitMagicCodeAction.data &&\r\n                                typeof (<any>submitMagicCodeAction.data)[\"magicCode\"] === \"string\"\r\n                            ) {\r\n                                authCode = (<any>submitMagicCodeAction.data)[\"magicCode\"];\r\n                            }\r\n\r\n                            if (authCode) {\r\n                                this.displayCard(this.card);\r\n\r\n                                request.authCode = authCode;\r\n                                void request.retryAsync();\r\n                            } else {\r\n                                alert(\"Please enter the magic code you received.\");\r\n                            }\r\n\r\n                            break;\r\n                        case AdaptiveApplet._cancelMagicCodeAuthActionId:\r\n                            logEvent(Enums.LogLevel.Warning, \"Authentication cancelled by user.\");\r\n\r\n                            this.displayCard(this.card);\r\n\r\n                            break;\r\n                        default:\r\n                            logEvent(\r\n                                Enums.LogLevel.Error,\r\n                                \"Unexpected action taken from magic code input card (id = \" +\r\n                                    submitMagicCodeAction.id +\r\n                                    \")\"\r\n                            );\r\n\r\n                            alert(Strings.magicCodeInputCard.somethingWentWrong());\r\n\r\n                            break;\r\n                    }\r\n                }\r\n            };\r\n\r\n            this.displayCard(authCodeInputCard);\r\n        }\r\n    }\r\n\r\n    private async internalSendActivityRequestAsync(request: ActivityRequest) {\r\n        if (!this.channelAdapter) {\r\n            throw new Error(\"internalSendActivityRequestAsync: channelAdapter is not set.\");\r\n        }\r\n\r\n        const overlay = this.createProgressOverlay(request);\r\n\r\n        if (overlay !== undefined) {\r\n            this.renderedElement.appendChild(overlay);\r\n        }\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n            let response: ActivityResponse | undefined = undefined;\r\n\r\n            if (request.attemptNumber === 1) {\r\n                logEvent(\r\n                    Enums.LogLevel.Info,\r\n                    \"Sending activity request to channel (attempt \" + request.attemptNumber + \")\"\r\n                );\r\n            } else {\r\n                logEvent(\r\n                    Enums.LogLevel.Info,\r\n                    \"Re-sending activity request to channel (attempt \" + request.attemptNumber + \")\"\r\n                );\r\n            }\r\n\r\n            try {\r\n                response = await this.channelAdapter.sendRequestAsync(request);\r\n            } catch (error) {\r\n                logEvent(Enums.LogLevel.Error, \"Activity request failed: \" + error);\r\n\r\n                this.removeProgressOverlay(request);\r\n\r\n                done = true;\r\n            }\r\n\r\n            if (response) {\r\n                if (response instanceof SuccessResponse) {\r\n                    this.removeProgressOverlay(request);\r\n\r\n                    if (response.rawContent === undefined) {\r\n                        throw new Error(\r\n                            \"internalSendActivityRequestAsync: Action.Execute result is undefined\"\r\n                        );\r\n                    }\r\n\r\n                    let parsedContent = response.rawContent;\r\n\r\n                    try {\r\n                        parsedContent = JSON.parse(response.rawContent);\r\n                    } catch {\r\n                        // Leave parseContent as is\r\n                    }\r\n\r\n                    if (typeof parsedContent === \"string\") {\r\n                        logEvent(\r\n                            Enums.LogLevel.Info,\r\n                            \"The activity request returned a string after \" +\r\n                                request.attemptNumber +\r\n                                \" attempt(s).\"\r\n                        );\r\n\r\n                        this.activityRequestSucceeded(response, parsedContent);\r\n                    } else if (\r\n                        typeof parsedContent === \"object\" &&\r\n                        parsedContent[\"type\"] === \"AdaptiveCard\"\r\n                    ) {\r\n                        logEvent(\r\n                            Enums.LogLevel.Info,\r\n                            \"The activity request returned an Adaptive Card after \" +\r\n                                request.attemptNumber +\r\n                                \" attempt(s).\"\r\n                        );\r\n\r\n                        this.internalSetCard(parsedContent, request.consecutiveRefreshes);\r\n                        this.activityRequestSucceeded(response, this.card);\r\n                    } else {\r\n                        throw new Error(\r\n                            \"internalSendActivityRequestAsync: Action.Execute result is of unsupported type (\" +\r\n                                typeof response.rawContent +\r\n                                \")\"\r\n                        );\r\n                    }\r\n\r\n                    done = true;\r\n                } else if (response instanceof ErrorResponse) {\r\n                    const retryIn: number = this.activityRequestFailed(response);\r\n\r\n                    if (\r\n                        retryIn >= 0 &&\r\n                        request.attemptNumber < GlobalSettings.applets.maximumRetryAttempts\r\n                    ) {\r\n                        logEvent(\r\n                            Enums.LogLevel.Warning,\r\n                            `Activity request failed: ${response.error.message}. Retrying in ${retryIn}ms`\r\n                        );\r\n\r\n                        request.attemptNumber++;\r\n\r\n                        await new Promise<void>((resolve, _reject) => {\r\n                            window.setTimeout(() => {\r\n                                resolve();\r\n                            }, retryIn);\r\n                        });\r\n                    } else {\r\n                        logEvent(\r\n                            Enums.LogLevel.Error,\r\n                            `Activity request failed: ${response.error.message}. Giving up after ${request.attemptNumber} attempt(s)`\r\n                        );\r\n\r\n                        this.removeProgressOverlay(request);\r\n\r\n                        done = true;\r\n                    }\r\n                } else if (response instanceof LoginRequestResponse) {\r\n                    logEvent(\r\n                        Enums.LogLevel.Info,\r\n                        \"The activity request returned a LoginRequestResponse after \" +\r\n                            request.attemptNumber +\r\n                            \" attempt(s).\"\r\n                    );\r\n\r\n                    if (request.attemptNumber <= GlobalSettings.applets.maximumRetryAttempts) {\r\n                        let attemptOAuth = true;\r\n\r\n                        if (response.tokenExchangeResource && this.onSSOTokenNeeded) {\r\n                            // Attempt to use SSO. The host will return true if it can handle SSO, in which case\r\n                            // we bypass OAuth\r\n                            attemptOAuth = !this.onSSOTokenNeeded(\r\n                                this,\r\n                                request,\r\n                                response.tokenExchangeResource\r\n                            );\r\n                        }\r\n\r\n                        if (attemptOAuth) {\r\n                            // Attempt to use OAuth\r\n                            this.removeProgressOverlay(request);\r\n\r\n                            if (response.signinButton === undefined) {\r\n                                throw new Error(\r\n                                    \"internalSendActivityRequestAsync: the login request doesn't contain a valid signin URL.\"\r\n                                );\r\n                            }\r\n\r\n                            logEvent(\r\n                                Enums.LogLevel.Info,\r\n                                \"Login required at \" + response.signinButton.value\r\n                            );\r\n\r\n                            if (this.onShowSigninPrompt) {\r\n                                // Bypass the built-in auth prompt if the host app handles it\r\n                                this.onShowSigninPrompt(this, request, response.signinButton);\r\n                            } else {\r\n                                this.showAuthCodeInputDialog(request);\r\n\r\n                                const left =\r\n                                    window.screenX +\r\n                                    (window.outerWidth - GlobalSettings.applets.authPromptWidth) /\r\n                                        2;\r\n                                const top =\r\n                                    window.screenY +\r\n                                    (window.outerHeight - GlobalSettings.applets.authPromptHeight) /\r\n                                        2;\r\n\r\n                                window.open(\r\n                                    response.signinButton.value,\r\n                                    response.signinButton.title\r\n                                        ? response.signinButton.title\r\n                                        : \"Sign in\",\r\n                                    `width=${GlobalSettings.applets.authPromptWidth},height=${GlobalSettings.applets.authPromptHeight},left=${left},top=${top}`\r\n                                );\r\n                            }\r\n                        }\r\n                    } else {\r\n                        logEvent(\r\n                            Enums.LogLevel.Error,\r\n                            \"Authentication failed. Giving up after \" +\r\n                                request.attemptNumber +\r\n                                \" attempt(s)\"\r\n                        );\r\n\r\n                        alert(Strings.magicCodeInputCard.authenticationFailed());\r\n                    }\r\n\r\n                    // Exit the loop. After a LoginRequestResponse, the host app is responsible for retrying the request\r\n                    break;\r\n                } else {\r\n                    throw new Error(\"Unhandled response type: \" + JSON.stringify(response));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    readonly renderedElement: HTMLElement;\r\n\r\n    hostConfig?: HostConfig;\r\n    channelAdapter?: ChannelAdapter;\r\n\r\n    onCardChanging?: (sender: AdaptiveApplet, card: any) => boolean;\r\n    onCardChanged?: (sender: AdaptiveApplet) => void;\r\n    onPrefetchSSOToken?: (\r\n        sender: AdaptiveApplet,\r\n        tokenExchangeResource: TokenExchangeResource\r\n    ) => void;\r\n    onSSOTokenNeeded?: (\r\n        sender: AdaptiveApplet,\r\n        request: IActivityRequest,\r\n        tokenExchangeResource: TokenExchangeResource\r\n    ) => boolean;\r\n    onPrepareActivityRequest?: (\r\n        sender: AdaptiveApplet,\r\n        request: IActivityRequest,\r\n        action: ExecuteAction\r\n    ) => boolean;\r\n    onActivityRequestSucceeded?: (\r\n        sender: AdaptiveApplet,\r\n        response: SuccessResponse,\r\n        parsedContent: string | AdaptiveCard | undefined\r\n    ) => void;\r\n    onActivityRequestFailed?: (sender: AdaptiveApplet, response: ErrorResponse) => number;\r\n    onCreateSerializationContext?: (sender: AdaptiveApplet) => SerializationContext;\r\n    onCreateProgressOverlay?: (\r\n        sender: AdaptiveApplet,\r\n        request: IActivityRequest\r\n    ) => HTMLElement | undefined;\r\n    onRemoveProgressOverlay?: (sender: AdaptiveApplet, request: IActivityRequest) => void;\r\n    onRenderManualRefreshButton?: (sender: AdaptiveApplet) => HTMLElement | undefined;\r\n    onAction?: (sender: AdaptiveApplet, action: Action) => void;\r\n    onShowManualRefreshButton?: (sender: AdaptiveApplet) => boolean;\r\n    onShowAuthCodeInputDialog?: (sender: AdaptiveApplet, request: IActivityRequest) => boolean;\r\n    onShowSigninPrompt?: (\r\n        sender: AdaptiveApplet,\r\n        request: IActivityRequest,\r\n        signinButton: AuthCardButton\r\n    ) => void;\r\n\r\n    constructor() {\r\n        this.renderedElement = document.createElement(\"div\");\r\n        this.renderedElement.className = \"aaf-cardHost\";\r\n        this.renderedElement.style.position = \"relative\";\r\n        this.renderedElement.style.display = \"flex\";\r\n        this.renderedElement.style.flexDirection = \"column\";\r\n\r\n        this._cardHostElement = document.createElement(\"div\");\r\n\r\n        this._refreshButtonHostElement = document.createElement(\"div\");\r\n        this._refreshButtonHostElement.className = \"aaf-refreshButtonHost\";\r\n        this._refreshButtonHostElement.style.display = \"none\";\r\n\r\n        this.renderedElement.appendChild(this._cardHostElement);\r\n        this.renderedElement.appendChild(this._refreshButtonHostElement);\r\n    }\r\n\r\n    refreshCard() {\r\n        if (this._card && this._card.refresh) {\r\n            this.internalExecuteAction(this._card.refresh.action, ActivityRequestTrigger.Manual, 0);\r\n        }\r\n    }\r\n\r\n    setCard(payload: any) {\r\n        this.internalSetCard(payload, 0);\r\n    }\r\n\r\n    get card(): AdaptiveCard | undefined {\r\n        return this._card;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport * from \"./strings\";\r\nexport * from \"./enums\";\r\nexport * from \"./shared\";\r\nexport * from \"./utils\";\r\nexport * from \"./serialization\";\r\nexport * from \"./host-capabilities\";\r\nexport * from \"./host-config\";\r\nexport * from \"./registry\";\r\nexport * from \"./card-object\";\r\nexport * from \"./card-elements\";\r\nexport * from \"./table\";\r\nexport * from \"./channel-adapter\";\r\nexport * from \"./activity-request\";\r\nexport * from \"./adaptive-applet\";\r\n\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport {\r\n    PaddingDefinition,\r\n    GlobalSettings,\r\n    SizeAndUnit,\r\n    SpacingDefinition,\r\n    ISeparationDefinition,\r\n    Dictionary,\r\n    StringWithSubstitutions,\r\n    ContentTypes,\r\n    IInput,\r\n    IResourceInformation\r\n} from \"./shared\";\r\nimport * as Utils from \"./utils\";\r\nimport {\r\n    HostConfig,\r\n    defaultHostConfig,\r\n    BaseTextDefinition,\r\n    FontTypeDefinition,\r\n    ColorSetDefinition,\r\n    TextColorDefinition,\r\n    ContainerStyleDefinition,\r\n    TextStyleDefinition\r\n} from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\nimport { CardObject, ValidationResults } from \"./card-object\";\r\nimport {\r\n    Versions,\r\n    Version,\r\n    property,\r\n    BaseSerializationContext,\r\n    SerializableObject,\r\n    SerializableObjectSchema,\r\n    StringProperty,\r\n    BoolProperty,\r\n    ValueSetProperty,\r\n    EnumProperty,\r\n    SerializableObjectCollectionProperty,\r\n    SerializableObjectProperty,\r\n    PixelSizeProperty,\r\n    NumProperty,\r\n    PropertyBag,\r\n    CustomProperty,\r\n    PropertyDefinition,\r\n    StringArrayProperty\r\n} from \"./serialization\";\r\nimport { CardObjectRegistry, GlobalRegistry, ElementSingletonBehavior } from \"./registry\";\r\nimport { Strings } from \"./strings\";\r\nimport { MenuItem, PopupMenu } from \"./controls\";\r\n\r\n\r\nfunction clearElement(element: HTMLElement) : void {\r\n    const trustedHtml = (typeof window === 'undefined') ? \"\" : (window.trustedTypes?.emptyHTML ?? \"\");\r\n    element.innerHTML = trustedHtml as string;\r\n}\r\n\r\nexport function renderSeparation(\r\n    hostConfig: HostConfig,\r\n    separationDefinition: ISeparationDefinition,\r\n    orientation: Enums.Orientation\r\n): HTMLElement | undefined {\r\n    if (\r\n        separationDefinition.spacing > 0 ||\r\n        (separationDefinition.lineThickness && separationDefinition.lineThickness > 0)\r\n    ) {\r\n        const separator = document.createElement(\"div\");\r\n        separator.className = hostConfig.makeCssClassName(\r\n            \"ac-\" +\r\n                (orientation === Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") +\r\n                \"-separator\"\r\n        );\r\n        separator.setAttribute(\"aria-hidden\", \"true\");\r\n\r\n        const color = separationDefinition.lineColor\r\n            ? Utils.stringToCssColor(separationDefinition.lineColor)\r\n            : \"\";\r\n\r\n        if (orientation === Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingTop = separationDefinition.spacing / 2 + \"px\";\r\n                separator.style.marginBottom = separationDefinition.spacing / 2 + \"px\";\r\n                separator.style.borderBottom =\r\n                    separationDefinition.lineThickness + \"px solid \" + color;\r\n            } else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        } else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingLeft = separationDefinition.spacing / 2 + \"px\";\r\n                separator.style.marginRight = separationDefinition.spacing / 2 + \"px\";\r\n                separator.style.borderRight =\r\n                    separationDefinition.lineThickness + \"px solid \" + color;\r\n            } else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n        separator.style.flex = \"0 0 auto\";\r\n\r\n        return separator;\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport type CardElementHeight = \"auto\" | \"stretch\";\r\n\r\nexport abstract class CardElement extends CardObject {\r\n    //#region Schema\r\n\r\n    static readonly langProperty = new StringProperty(\r\n        Versions.v1_1,\r\n        \"lang\",\r\n        true,\r\n        /^[a-z]{2,3}$/gi\r\n    );\r\n    static readonly isVisibleProperty = new BoolProperty(Versions.v1_2, \"isVisible\", true);\r\n    static readonly separatorProperty = new BoolProperty(Versions.v1_0, \"separator\", false);\r\n    static readonly heightProperty = new ValueSetProperty(\r\n        Versions.v1_1,\r\n        \"height\",\r\n        [{ value: \"auto\" }, { value: \"stretch\" }],\r\n        \"auto\"\r\n    );\r\n    static readonly horizontalAlignmentProperty = new EnumProperty(\r\n        Versions.v1_0,\r\n        \"horizontalAlignment\",\r\n        Enums.HorizontalAlignment\r\n    );\r\n    static readonly spacingProperty = new EnumProperty(\r\n        Versions.v1_0,\r\n        \"spacing\",\r\n        Enums.Spacing,\r\n        Enums.Spacing.Default\r\n    );\r\n\r\n    @property(CardElement.horizontalAlignmentProperty)\r\n    horizontalAlignment?: Enums.HorizontalAlignment;\r\n\r\n    @property(CardElement.spacingProperty)\r\n    spacing: Enums.Spacing;\r\n\r\n    @property(CardElement.separatorProperty)\r\n    separator: boolean;\r\n\r\n    @property(CardElement.heightProperty)\r\n    height: CardElementHeight;\r\n\r\n    @property(CardElement.langProperty)\r\n    get lang(): string | undefined {\r\n        const lang = this.getValue(CardElement.langProperty);\r\n\r\n        if (lang) {\r\n            return lang;\r\n        } else {\r\n            if (this.parent) {\r\n                return this.parent.lang;\r\n            } else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lang(value: string | undefined) {\r\n        this.setValue(CardElement.langProperty, value);\r\n    }\r\n\r\n    @property(CardElement.isVisibleProperty)\r\n    get isVisible(): boolean {\r\n        return this.getValue(CardElement.isVisibleProperty);\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        // If the element is going to be hidden, reset any changes that were due\r\n        // to overflow truncation (this ensures that if the element is later\r\n        // un-hidden it has the right content)\r\n        if (GlobalSettings.useAdvancedCardBottomTruncation && !value) {\r\n            this.undoOverflowTruncation();\r\n        }\r\n\r\n        if (this.isVisible !== value) {\r\n            this.setValue(CardElement.isVisibleProperty, value);\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n\r\n        if (this._renderedElement) {\r\n            this._renderedElement.setAttribute(\"aria-expanded\", value.toString());\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    private _hostConfig?: HostConfig;\r\n    private _separatorElement?: HTMLElement;\r\n    private _truncatedDueToOverflow: boolean = false;\r\n    private _defaultRenderedElementDisplayMode?: string;\r\n    private _padding?: PaddingDefinition;\r\n\r\n    private internalRenderSeparator(): HTMLElement | undefined {\r\n        const renderedSeparator = renderSeparation(\r\n            this.hostConfig,\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : undefined,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : undefined\r\n            },\r\n            this.separatorOrientation\r\n        );\r\n\r\n        if (\r\n            GlobalSettings.alwaysBleedSeparators &&\r\n            renderedSeparator &&\r\n            this.separatorOrientation === Enums.Orientation.Horizontal\r\n        ) {\r\n            // Adjust separator's margins if the option to always bleed separators is turned on\r\n            const parentContainer = this.getParentContainer();\r\n\r\n            if (parentContainer && parentContainer.getEffectivePadding()) {\r\n                const parentPhysicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(\r\n                    parentContainer.getEffectivePadding()\r\n                );\r\n\r\n                renderedSeparator.style.marginLeft = \"-\" + parentPhysicalPadding.left + \"px\";\r\n                renderedSeparator.style.marginRight = \"-\" + parentPhysicalPadding.right + \"px\";\r\n            }\r\n        }\r\n\r\n        return renderedSeparator;\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        const displayMode =\r\n            this.isDesignMode() || this.isVisible\r\n                ? this._defaultRenderedElementDisplayMode\r\n                : \"none\";\r\n\r\n        if (this._renderedElement) {\r\n            if (displayMode) {\r\n                this._renderedElement.style.display = displayMode;\r\n            } else {\r\n                this._renderedElement.style.removeProperty(\"display\");\r\n            }\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            } else {\r\n                if (displayMode) {\r\n                    this._separatorElement.style.display = displayMode;\r\n                } else {\r\n                    this._separatorElement.style.removeProperty(\"display\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private hideElementDueToOverflow() {\r\n        if (this._renderedElement && this.isVisible) {\r\n            this._renderedElement.style.visibility = \"hidden\";\r\n\r\n            this.isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    private showElementHiddenDueToOverflow() {\r\n        if (this._renderedElement && !this.isVisible) {\r\n            this._renderedElement.style.removeProperty(\"visibility\");\r\n\r\n            this.isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private handleOverflow(maxHeight: number) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            const handled = this.truncateOverflow(maxHeight);\r\n\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            } else if (handled && !this.isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private resetOverflow(): boolean {\r\n        let sizeChanged = false;\r\n\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n\r\n        if (this.isHiddenDueToOverflow()) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n\r\n        return sizeChanged;\r\n    }\r\n\r\n    protected getDefaultSerializationContext(): BaseSerializationContext {\r\n        return new SerializationContext();\r\n    }\r\n\r\n    protected createPlaceholderElement(): HTMLElement {\r\n        const styleDefinition = this.getEffectiveStyleDefinition();\r\n        const foregroundCssColor = Utils.stringToCssColor(\r\n            styleDefinition.foregroundColors.default.subtle\r\n        );\r\n\r\n        const element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed \" + foregroundCssColor;\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n\r\n        if (foregroundCssColor) {\r\n            element.style.color = foregroundCssColor;\r\n        }\r\n\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n\r\n        return element;\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        } else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n    }\r\n\r\n    protected isDisplayed(): boolean {\r\n        return (\r\n            this._renderedElement !== undefined &&\r\n            this.isVisible &&\r\n            this._renderedElement.offsetHeight > 0\r\n        );\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement | undefined;\r\n\r\n    protected overrideInternalRender(): HTMLElement | undefined {\r\n        return this.internalRender();\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (this.separatorElement && this.separatorOrientation === Enums.Orientation.Horizontal) {\r\n            if (GlobalSettings.alwaysBleedSeparators && !this.isBleeding()) {\r\n                const padding = new PaddingDefinition();\r\n\r\n                this.getImmediateSurroundingPadding(padding);\r\n\r\n                const physicalPadding =\r\n                    this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n                this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n            } else {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    protected truncateOverflow(_maxHeight: number): boolean {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    protected undoOverflowTruncation() {\r\n        return;\r\n    }\r\n\r\n    protected getDefaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition();\r\n    }\r\n\r\n    protected getHasBackground(ignoreBackgroundImages: boolean = false): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getHasBorder(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getPadding(): PaddingDefinition | undefined {\r\n        return this._padding;\r\n    }\r\n\r\n    protected setPadding(value: PaddingDefinition | undefined) {\r\n        this._padding = value;\r\n    }\r\n\r\n    protected shouldSerialize(context: SerializationContext): boolean {\r\n        return context.elementRegistry.findByName(this.getJsonTypeName()) !== undefined;\r\n    }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    customCssSelector?: string;\r\n\r\n    parse(source: any, context?: SerializationContext) {\r\n        super.parse(source, context ? context : new SerializationContext());\r\n    }\r\n\r\n    asString(): string | undefined {\r\n        return \"\";\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        if (this.parent) {\r\n            return this.parent.getEffectiveStyle();\r\n        }\r\n\r\n        return this.defaultStyle;\r\n    }\r\n\r\n    getEffectiveStyleDefinition(): ContainerStyleDefinition {\r\n        return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\r\n    }\r\n\r\n    getEffectiveTextStyleDefinition(): TextStyleDefinition {\r\n        if (this.parent) {\r\n            return this.parent.getEffectiveTextStyleDefinition();\r\n        }\r\n\r\n        return this.hostConfig.textStyles.default;\r\n    }\r\n\r\n    getForbiddenActionTypes(): ActionType[] {\r\n        return [];\r\n    }\r\n\r\n    getImmediateSurroundingPadding(\r\n        result: PaddingDefinition,\r\n        processTop: boolean = true,\r\n        processRight: boolean = true,\r\n        processBottom: boolean = true,\r\n        processLeft: boolean = true\r\n    ) {\r\n        if (this.parent) {\r\n            let doProcessTop = processTop && this.parent.isTopElement(this);\r\n            let doProcessRight = processRight && this.parent.isRightMostElement(this);\r\n            let doProcessBottom = processBottom && this.parent.isBottomElement(this);\r\n            let doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\r\n\r\n            const effectivePadding = this.parent.getEffectivePadding();\r\n\r\n            if (effectivePadding) {\r\n                if (doProcessTop && effectivePadding.top !== Enums.Spacing.None) {\r\n                    result.top = effectivePadding.top;\r\n\r\n                    doProcessTop = false;\r\n                }\r\n\r\n                if (doProcessRight && effectivePadding.right !== Enums.Spacing.None) {\r\n                    result.right = effectivePadding.right;\r\n\r\n                    doProcessRight = false;\r\n                }\r\n\r\n                if (doProcessBottom && effectivePadding.bottom !== Enums.Spacing.None) {\r\n                    result.bottom = effectivePadding.bottom;\r\n\r\n                    doProcessBottom = false;\r\n                }\r\n\r\n                if (doProcessLeft && effectivePadding.left !== Enums.Spacing.None) {\r\n                    result.left = effectivePadding.left;\r\n\r\n                    doProcessLeft = false;\r\n                }\r\n            }\r\n\r\n            if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\r\n                this.parent.getImmediateSurroundingPadding(\r\n                    result,\r\n                    doProcessTop,\r\n                    doProcessRight,\r\n                    doProcessBottom,\r\n                    doProcessLeft\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    getActionAt(index: number): Action | undefined {\r\n        throw new Error(Strings.errors.indexOutOfRange(index));\r\n    }\r\n\r\n    indexOfAction(action: Action): number {\r\n        for (let i = 0; i < this.getActionCount(); i++) {\r\n            if (this.getActionAt(i) === action) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render(): HTMLElement | undefined {\r\n        this._renderedElement = this.overrideInternalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            if (this.id) {\r\n                this._renderedElement.id = this.id;\r\n            }\r\n\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display\r\n                ? this._renderedElement.style.display\r\n                : undefined;\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        } else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n\r\n        this.getRootElement().updateActionsEnabledState();\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(_processChildren: boolean = true) {\r\n        this.updateRenderedElementVisibility();\r\n        this.applyPadding();\r\n    }\r\n\r\n    updateActionsEnabledState() {\r\n        const allActions = this.getRootElement().getAllActions();\r\n\r\n        for (let action of allActions) {\r\n            action.updateEnabledState();\r\n        }\r\n    }\r\n\r\n    indexOf(_cardElement: CardElement): number {\r\n        return -1;\r\n    }\r\n\r\n    isDesignMode(): boolean {\r\n        const rootElement = this.getRootElement();\r\n\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    }\r\n\r\n    isFirstElement(_element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isLastElement(_element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent\r\n            ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft()\r\n            : true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent\r\n            ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight()\r\n            : true;\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent\r\n            ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop()\r\n            : true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent\r\n            ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom()\r\n            : true;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isLeftMostElement(_element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isRightMostElement(_element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this.isFirstElement(element);\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this.isLastElement(element);\r\n    }\r\n\r\n    isHiddenDueToOverflow(): boolean {\r\n        return (\r\n            this._renderedElement !== undefined &&\r\n            this._renderedElement.style.visibility === \"hidden\"\r\n        );\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        return this.getRootObject() as CardElement;\r\n    }\r\n\r\n    getParentContainer(): Container | undefined {\r\n        let currentElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    getAllInputs(processActions: boolean = true): Input[] {\r\n        return [];\r\n    }\r\n\r\n    getAllActions(): Action[] {\r\n        const result: Action[] = [];\r\n\r\n        for (let i = 0; i < this.getActionCount(); i++) {\r\n            let action = this.getActionAt(i);\r\n\r\n            if (action) {\r\n                result.push(action);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement | undefined {\r\n        return this.id === id ? this : undefined;\r\n    }\r\n\r\n    getActionById(_id: string): Action | undefined {\r\n        return undefined;\r\n    }\r\n\r\n    getEffectivePadding(): PaddingDefinition {\r\n        const padding = this.getPadding();\r\n\r\n        return padding ? padding : this.getDefaultPadding();\r\n    }\r\n\r\n    getEffectiveHorizontalAlignment(): Enums.HorizontalAlignment {\r\n        if (this.horizontalAlignment !== undefined) {\r\n            return this.horizontalAlignment;\r\n        }\r\n\r\n        if (this.parent) {\r\n            return this.parent.getEffectiveHorizontalAlignment();\r\n        }\r\n\r\n        return Enums.HorizontalAlignment.Left;\r\n    }\r\n\r\n    get hostConfig(): HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        } else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            } else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get index(): number {\r\n        if (this.parent) {\r\n            return this.parent.indexOf(this);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.separatorElement) {\r\n            return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get separatorElement(): HTMLElement | undefined {\r\n        return this._separatorElement;\r\n    }\r\n\r\n    get parent(): CardElement | undefined {\r\n        return <CardElement>this._parent;\r\n    }\r\n\r\n    getElementSingletonBehavior(): ElementSingletonBehavior {\r\n        return ElementSingletonBehavior.NotAllowed;\r\n    }\r\n}\r\n\r\nexport class ActionProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: SerializationContext\r\n    ): Action | undefined {\r\n        const parent = <CardElement>sender;\r\n\r\n        return context.parseAction(\r\n            parent,\r\n            source[this.name],\r\n            this.forbiddenActionTypes,\r\n            parent.isDesignMode()\r\n        );\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: Action | undefined,\r\n        context: SerializationContext\r\n    ) {\r\n        context.serializeValue(\r\n            target,\r\n            this.name,\r\n            value ? value.toJSON(context) : undefined,\r\n            undefined,\r\n            true\r\n        );\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly forbiddenActionTypes: string[] = []\r\n    ) {\r\n        super(targetVersion, name, undefined);\r\n    }\r\n}\r\n\r\nexport abstract class BaseTextBlock extends CardElement {\r\n    //#region Schema\r\n\r\n    static readonly textProperty = new StringProperty(Versions.v1_0, \"text\", true);\r\n    static readonly sizeProperty = new EnumProperty(Versions.v1_0, \"size\", Enums.TextSize);\r\n    static readonly weightProperty = new EnumProperty(Versions.v1_0, \"weight\", Enums.TextWeight);\r\n    static readonly colorProperty = new EnumProperty(Versions.v1_0, \"color\", Enums.TextColor);\r\n    static readonly isSubtleProperty = new BoolProperty(Versions.v1_0, \"isSubtle\");\r\n    static readonly fontTypeProperty = new EnumProperty(Versions.v1_2, \"fontType\", Enums.FontType);\r\n    static readonly selectActionProperty = new ActionProperty(Versions.v1_1, \"selectAction\", [\r\n        \"Action.ShowCard\"\r\n    ]);\r\n\r\n    protected populateSchema(schema: SerializableObjectSchema) {\r\n        super.populateSchema(schema);\r\n\r\n        // selectAction is declared on BaseTextBlock but is only exposed on TextRun,\r\n        // so the property is removed from the BaseTextBlock schema.\r\n        schema.remove(BaseTextBlock.selectActionProperty);\r\n    }\r\n\r\n    @property(BaseTextBlock.sizeProperty)\r\n    size?: Enums.TextSize;\r\n\r\n    @property(BaseTextBlock.weightProperty)\r\n    weight?: Enums.TextWeight;\r\n\r\n    @property(BaseTextBlock.colorProperty)\r\n    color?: Enums.TextColor;\r\n\r\n    @property(BaseTextBlock.fontTypeProperty)\r\n    fontType?: Enums.FontType;\r\n\r\n    @property(BaseTextBlock.isSubtleProperty)\r\n    isSubtle?: boolean;\r\n\r\n    @property(BaseTextBlock.textProperty)\r\n    get text(): string | undefined {\r\n        return this.getValue(BaseTextBlock.textProperty);\r\n    }\r\n\r\n    set text(value: string | undefined) {\r\n        this.setText(value);\r\n    }\r\n\r\n    @property(BaseTextBlock.selectActionProperty)\r\n    selectAction?: Action;\r\n\r\n    //#endregion\r\n\r\n    protected getFontSize(fontType: FontTypeDefinition): number {\r\n        switch (this.effectiveSize) {\r\n            case Enums.TextSize.Small:\r\n                return fontType.fontSizes.small;\r\n            case Enums.TextSize.Medium:\r\n                return fontType.fontSizes.medium;\r\n            case Enums.TextSize.Large:\r\n                return fontType.fontSizes.large;\r\n            case Enums.TextSize.ExtraLarge:\r\n                return fontType.fontSizes.extraLarge;\r\n            default:\r\n                return fontType.fontSizes.default;\r\n        }\r\n    }\r\n\r\n    protected getColorDefinition(\r\n        colorSet: ColorSetDefinition,\r\n        color: Enums.TextColor\r\n    ): TextColorDefinition {\r\n        switch (color) {\r\n            case Enums.TextColor.Accent:\r\n                return colorSet.accent;\r\n            case Enums.TextColor.Dark:\r\n                return colorSet.dark;\r\n            case Enums.TextColor.Light:\r\n                return colorSet.light;\r\n            case Enums.TextColor.Good:\r\n                return colorSet.good;\r\n            case Enums.TextColor.Warning:\r\n                return colorSet.warning;\r\n            case Enums.TextColor.Attention:\r\n                return colorSet.attention;\r\n            default:\r\n                return colorSet.default;\r\n        }\r\n    }\r\n\r\n    protected setText(value: string | undefined) {\r\n        this.setValue(BaseTextBlock.textProperty, value);\r\n    }\r\n\r\n    ariaHidden: boolean = false;\r\n\r\n    constructor(text?: string) {\r\n        super();\r\n\r\n        if (text) {\r\n            this.text = text;\r\n        }\r\n    }\r\n\r\n    init(textDefinition: BaseTextDefinition) {\r\n        this.size = textDefinition.size;\r\n        this.weight = textDefinition.weight;\r\n        this.color = textDefinition.color;\r\n        this.isSubtle = textDefinition.isSubtle;\r\n    }\r\n\r\n    asString(): string | undefined {\r\n        return this.text;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        const fontType = this.hostConfig.getFontTypeDefinition(this.effectiveFontType);\r\n\r\n        if (fontType.fontFamily) {\r\n            targetElement.style.fontFamily = fontType.fontFamily;\r\n        }\r\n\r\n        let fontSize: number;\r\n\r\n        switch (this.effectiveSize) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = fontType.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = fontType.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = fontType.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = fontType.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = fontType.fontSizes.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n\r\n        const colorDefinition = this.getColorDefinition(\r\n            this.getEffectiveStyleDefinition().foregroundColors,\r\n            this.effectiveColor\r\n        );\r\n\r\n        const targetColor = Utils.stringToCssColor(\r\n            this.effectiveIsSubtle ? colorDefinition.subtle : colorDefinition.default\r\n        );\r\n        if (targetColor) {\r\n            targetElement.style.color = targetColor;\r\n        }\r\n\r\n        let fontWeight: number;\r\n\r\n        switch (this.effectiveWeight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = fontType.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = fontType.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = fontType.fontWeights.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n\r\n        if (this.ariaHidden) {\r\n            targetElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n\r\n    getAllActions(): Action[] {\r\n        const result = super.getAllActions();\r\n\r\n        if (this.selectAction) {\r\n            result.push(this.selectAction);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get effectiveColor(): Enums.TextColor {\r\n        return this.color !== undefined ? this.color : this.getEffectiveTextStyleDefinition().color;\r\n    }\r\n\r\n    get effectiveFontType(): Enums.FontType {\r\n        return this.fontType !== undefined\r\n            ? this.fontType\r\n            : this.getEffectiveTextStyleDefinition().fontType;\r\n    }\r\n\r\n    get effectiveIsSubtle(): boolean {\r\n        return this.isSubtle !== undefined\r\n            ? this.isSubtle\r\n            : this.getEffectiveTextStyleDefinition().isSubtle;\r\n    }\r\n\r\n    get effectiveSize(): Enums.TextSize {\r\n        return this.size !== undefined ? this.size : this.getEffectiveTextStyleDefinition().size;\r\n    }\r\n\r\n    get effectiveWeight(): Enums.TextWeight {\r\n        return this.weight !== undefined\r\n            ? this.weight\r\n            : this.getEffectiveTextStyleDefinition().weight;\r\n    }\r\n}\r\n\r\nexport type TextBlockStyle = \"default\" | \"heading\" | \"columnHeader\";\r\n\r\nexport class TextBlock extends BaseTextBlock {\r\n    //#region Schema\r\n\r\n    static readonly wrapProperty = new BoolProperty(Versions.v1_0, \"wrap\", false);\r\n    static readonly maxLinesProperty = new NumProperty(Versions.v1_0, \"maxLines\");\r\n    static readonly styleProperty = new ValueSetProperty(Versions.v1_5, \"style\", [\r\n        { value: \"default\" },\r\n        { value: \"columnHeader\" },\r\n        { value: \"heading\" }\r\n    ]);\r\n\r\n    @property(TextBlock.wrapProperty)\r\n    wrap: boolean = false;\r\n\r\n    @property(TextBlock.maxLinesProperty)\r\n    maxLines?: number;\r\n\r\n    @property(TextBlock.styleProperty)\r\n    style?: TextBlockStyle;\r\n\r\n    //#endregion\r\n\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n    private _processedText?: string;\r\n    private _treatAsPlainText: boolean = true;\r\n\r\n    private restoreOriginalContent() {\r\n        if (this.renderedElement !== undefined) {\r\n            if (this.maxLines && this.maxLines > 0) {\r\n                this.renderedElement.style.maxHeight =\r\n                    this._computedLineHeight * this.maxLines + \"px\";\r\n            }\r\n\r\n            const originalHtml = TextBlock._ttRoundtripPolicy?.createHTML(this._originalInnerHtml) ?? this._originalInnerHtml;\r\n            this.renderedElement.innerHTML = originalHtml as string;\r\n        }\r\n    }\r\n\r\n    private truncateIfSupported(maxHeight: number): boolean {\r\n        if (this.renderedElement !== undefined) {\r\n            // For now, only truncate TextBlocks that contain just a single\r\n            // paragraph -- since the maxLines calculation doesn't take into\r\n            // account Markdown lists\r\n            const children = this.renderedElement.children;\r\n            const isTextOnly = !children.length;\r\n            const truncationSupported =\r\n                isTextOnly ||\r\n                (children.length === 1 && (<HTMLElement>children[0]).tagName.toLowerCase() === \"p\" && !(<HTMLElement>children[0]).children.length);\r\n\r\n            if (truncationSupported) {\r\n                const element = isTextOnly ? this.renderedElement : <HTMLElement>children[0];\r\n\r\n                Utils.truncateText(element, maxHeight, this._computedLineHeight);\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // Markdown processing is handled outside of Adaptive Cards. It's up to the host to ensure that markdown is safely\r\n    // processed.\r\n    private static readonly _ttMarkdownPolicy = (typeof window === 'undefined') ? undefined : window.trustedTypes?.createPolicy(\r\n        \"adaptivecards#markdownPassthroughPolicy\",\r\n        { createHTML: (value) => value }\r\n    );\r\n\r\n    // When \"advanced\" truncation is enabled (see GlobalSettings.useAdvancedCardBottomTruncation and\r\n    // GlobalSettings.useAdvancedTextBlockTruncation), we store the original pre-truncation content in\r\n    // _originalInnerHtml so that we can restore/recalculate truncation later if space availability has changed (see\r\n    // TextBlock.restoreOriginalContent())\r\n    private static readonly _ttRoundtripPolicy = (typeof window === 'undefined') ? undefined : window.trustedTypes?.createPolicy(\r\n        \"adaptivecards#restoreContentsPolicy\",\r\n        { createHTML: (value) => value }\r\n    );\r\n\r\n    protected setText(value: string) {\r\n        super.setText(value);\r\n\r\n        this._processedText = undefined;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        this._processedText = undefined;\r\n\r\n        if (this.text) {\r\n            const preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\r\n            const hostConfig = this.hostConfig;\r\n\r\n            let element: HTMLElement;\r\n\r\n            if (this.forElementId) {\r\n                const labelElement = document.createElement(\"label\");\r\n                labelElement.htmlFor = this.forElementId;\r\n\r\n                element = labelElement;\r\n            } else {\r\n                element = document.createElement(\"div\");\r\n            }\r\n\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.style === \"heading\") {\r\n                element.setAttribute(\"role\", \"heading\");\r\n\r\n                const headingLevel = this.hostConfig.textBlock.headingLevel;\r\n\r\n                if (headingLevel !== undefined && headingLevel > 0) {\r\n                    element.setAttribute(\"aria-level\", headingLevel.toString());\r\n                }\r\n            }\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                element.onclick = (e) => {\r\n                    if (this.selectAction && this.selectAction.isEffectivelyEnabled()) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        this.selectAction.execute();\r\n                    }\r\n                };\r\n\r\n                this.selectAction.setupElementForAccessibility(element);\r\n\r\n                if (this.selectAction.isEffectivelyEnabled()) {\r\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                }\r\n            }\r\n\r\n            if (!this._processedText) {\r\n                this._treatAsPlainText = true;\r\n\r\n                let formattedText = TextFormatters.formatText(this.lang, preProcessedText);\r\n\r\n                if (this.useMarkdown && formattedText) {\r\n                    if (GlobalSettings.allowMarkForTextHighlighting) {\r\n                        formattedText = formattedText\r\n                            .replace(/<mark>/g, \"===\")\r\n                            .replace(/<\\/mark>/g, \"/==/\");\r\n                    }\r\n\r\n                    const markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\r\n\r\n                    if (\r\n                        markdownProcessingResult.didProcess &&\r\n                        markdownProcessingResult.outputHtml\r\n                    ) {\r\n                        this._processedText = markdownProcessingResult.outputHtml;\r\n                        this._treatAsPlainText = false;\r\n\r\n                        // Only process <mark> tag if markdown processing was applied because\r\n                        // markdown processing is also responsible for sanitizing the input string\r\n                        if (GlobalSettings.allowMarkForTextHighlighting && this._processedText) {\r\n                            let markStyle: string = \"\";\r\n                            const effectiveStyle = this.getEffectiveStyleDefinition();\r\n\r\n                            if (effectiveStyle.highlightBackgroundColor) {\r\n                                markStyle +=\r\n                                    \"background-color: \" +\r\n                                    effectiveStyle.highlightBackgroundColor +\r\n                                    \";\";\r\n                            }\r\n\r\n                            if (effectiveStyle.highlightForegroundColor) {\r\n                                markStyle +=\r\n                                    \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\r\n                            }\r\n\r\n                            if (markStyle) {\r\n                                markStyle = 'style=\"' + markStyle + '\"';\r\n                            }\r\n\r\n                            this._processedText = this._processedText\r\n                                .replace(/===/g, \"<mark \" + markStyle + \">\")\r\n                                .replace(/\\/==\\//g, \"</mark>\");\r\n                        }\r\n                    } else {\r\n                        this._processedText = formattedText;\r\n                        this._treatAsPlainText = true;\r\n                    }\r\n                } else {\r\n                    this._processedText = formattedText;\r\n                    this._treatAsPlainText = true;\r\n                }\r\n            }\r\n\r\n            if (!this._processedText) {\r\n                this._processedText = \"\";\r\n            }\r\n\r\n            if (this._treatAsPlainText) {\r\n                element.innerText = this._processedText;\r\n            } else {\r\n                const processedHtml =\r\n                    TextBlock._ttMarkdownPolicy?.createHTML(this._processedText) ??\r\n                    this._processedText;\r\n                element.innerHTML = processedHtml as string;\r\n            }\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                const firstElementChild = element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                element.lastElementChild.style.marginBottom = \"0px\";\r\n            }\r\n\r\n            const anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (const anchor of Array.from(anchors)) {\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e: MouseEvent) => {\r\n                    if (raiseAnchorClickedEvent(this, anchor, e)) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n                    }\r\n                };\r\n                anchor.oncontextmenu = (e: MouseEvent) => {\r\n                    if (raiseAnchorClickedEvent(this, anchor, e)) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                };\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines && this.maxLines > 0) {\r\n                    element.style.overflow = \"hidden\";\r\n\r\n                    if (Utils.isInternetExplorer() || !GlobalSettings.useWebkitLineClamp) {\r\n                        element.style.maxHeight = this._computedLineHeight * this.maxLines + \"px\";\r\n                    } else {\r\n                        // While non standard, --webkit-line-clamp works in every browser (except IE)\r\n                        // and is a great solution to support the maxLines feature with ellipsis\r\n                        // truncation. With --webkit-line-clamp there is need to use explicit line heights\r\n                        element.style.removeProperty(\"line-height\");\r\n                        element.style.display = \"-webkit-box\";\r\n                        element.style.webkitBoxOrient = \"vertical\";\r\n                        element.style.webkitLineClamp = this.maxLines.toString();\r\n                    }\r\n                }\r\n            } else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n\r\n            if (\r\n                GlobalSettings.useAdvancedTextBlockTruncation ||\r\n                GlobalSettings.useAdvancedCardBottomTruncation\r\n            ) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            return element;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        this.restoreOriginalContent();\r\n\r\n        if (GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            const maxHeight = this._computedLineHeight * this.maxLines;\r\n\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    useMarkdown: boolean = true;\r\n    forElementId?: string;\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        switch (this.getEffectiveHorizontalAlignment()) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = \"end\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = \"start\";\r\n                break;\r\n        }\r\n\r\n        const lineHeights = this.hostConfig.lineHeights;\r\n\r\n        if (lineHeights) {\r\n            switch (this.effectiveSize) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = lineHeights.default;\r\n                    break;\r\n            }\r\n        } else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight =\r\n                this.getFontSize(this.hostConfig.getFontTypeDefinition(this.effectiveFontType)) *\r\n                1.33;\r\n        }\r\n\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    getEffectiveTextStyleDefinition(): TextStyleDefinition {\r\n        if (this.style) {\r\n            return this.hostConfig.textStyles.getStyleByName(this.style);\r\n        }\r\n\r\n        return super.getEffectiveTextStyleDefinition();\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines && this.isDisplayed()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            this.truncateIfSupported(this._computedLineHeight * this.maxLines);\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextRun extends BaseTextBlock {\r\n    //#region Schema\r\n\r\n    static readonly italicProperty = new BoolProperty(Versions.v1_2, \"italic\", false);\r\n    static readonly strikethroughProperty = new BoolProperty(Versions.v1_2, \"strikethrough\", false);\r\n    static readonly highlightProperty = new BoolProperty(Versions.v1_2, \"highlight\", false);\r\n    static readonly underlineProperty = new BoolProperty(Versions.v1_3, \"underline\", false);\r\n\r\n    protected populateSchema(schema: SerializableObjectSchema) {\r\n        super.populateSchema(schema);\r\n\r\n        schema.add(BaseTextBlock.selectActionProperty);\r\n    }\r\n\r\n    @property(TextRun.italicProperty)\r\n    italic: boolean = false;\r\n\r\n    @property(TextRun.strikethroughProperty)\r\n    strikethrough: boolean = false;\r\n\r\n    @property(TextRun.highlightProperty)\r\n    highlight: boolean = false;\r\n\r\n    @property(TextRun.underlineProperty)\r\n    underline: boolean = false;\r\n\r\n    //#endregion\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        if (this.text) {\r\n            const preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\r\n            const hostConfig = this.hostConfig;\r\n\r\n            let formattedText = TextFormatters.formatText(this.lang, preProcessedText);\r\n\r\n            if (!formattedText) {\r\n                formattedText = \"\";\r\n            }\r\n\r\n            const element = document.createElement(\"span\");\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                const anchor = document.createElement(\"a\");\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n\r\n                const href = this.selectAction.getHref();\r\n\r\n                anchor.href = href ? href : \"\";\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (this.selectAction && this.selectAction.isEffectivelyEnabled()) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        this.selectAction.execute();\r\n                    }\r\n                };\r\n\r\n                this.selectAction.setupElementForAccessibility(anchor);\r\n\r\n                anchor.innerText = formattedText;\r\n\r\n                element.appendChild(anchor);\r\n            } else {\r\n                element.innerText = formattedText;\r\n            }\r\n\r\n            return element;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        if (this.italic) {\r\n            targetElement.style.fontStyle = \"italic\";\r\n        }\r\n\r\n        if (this.strikethrough) {\r\n            targetElement.style.textDecoration = \"line-through\";\r\n        }\r\n\r\n        if (this.highlight) {\r\n            const colorDefinition = this.getColorDefinition(\r\n                this.getEffectiveStyleDefinition().foregroundColors,\r\n                this.effectiveColor\r\n            );\r\n\r\n            const backgroundColor = Utils.stringToCssColor(\r\n                this.effectiveIsSubtle\r\n                    ? colorDefinition.highlightColors.subtle\r\n                    : colorDefinition.highlightColors.default\r\n            );\r\n            if (backgroundColor) {\r\n                targetElement.style.backgroundColor = backgroundColor;\r\n            }\r\n        }\r\n\r\n        if (this.underline) {\r\n            targetElement.style.textDecoration = \"underline\";\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextRun\";\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class RichTextBlock extends CardElement {\r\n    private _inlines: CardElement[] = [];\r\n\r\n    private internalAddInline(inline: CardElement, forceAdd: boolean = false) {\r\n        if (!inline.isInline) {\r\n            throw new Error(Strings.errors.elementCannotBeUsedAsInline());\r\n        }\r\n\r\n        const doAdd: boolean = inline.parent === undefined || forceAdd;\r\n\r\n        if (!doAdd && inline.parent !== this) {\r\n            throw new Error(Strings.errors.inlineAlreadyParented());\r\n        } else {\r\n            inline.setParent(this);\r\n\r\n            this._inlines.push(inline);\r\n        }\r\n    }\r\n\r\n    protected internalParse(source: any, context: SerializationContext) {\r\n        super.internalParse(source, context);\r\n\r\n        this._inlines = [];\r\n\r\n        if (Array.isArray(source[\"inlines\"])) {\r\n            for (const jsonInline of source[\"inlines\"]) {\r\n                let inline: CardElement | undefined;\r\n\r\n                if (typeof jsonInline === \"string\") {\r\n                    const textRun = new TextRun();\r\n                    textRun.text = jsonInline;\r\n\r\n                    inline = textRun;\r\n                } else {\r\n                    // No fallback for inlines in 1.2\r\n                    inline = context.parseElement(this, jsonInline, [], false);\r\n                }\r\n\r\n                if (inline) {\r\n                    this.internalAddInline(inline, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\r\n        super.internalToJSON(target, context);\r\n\r\n        if (this._inlines.length > 0) {\r\n            const jsonInlines: any[] = [];\r\n\r\n            for (const inline of this._inlines) {\r\n                jsonInlines.push(inline.toJSON(context));\r\n            }\r\n\r\n            context.serializeValue(target, \"inlines\", jsonInlines);\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        if (this._inlines.length > 0) {\r\n            let element: HTMLElement;\r\n\r\n            if (this.forElementId) {\r\n                const labelElement = document.createElement(\"label\");\r\n                labelElement.htmlFor = this.forElementId;\r\n\r\n                element = labelElement;\r\n            } else {\r\n                element = document.createElement(\"div\");\r\n            }\r\n\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\r\n\r\n            switch (this.getEffectiveHorizontalAlignment()) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = \"end\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = \"start\";\r\n                    break;\r\n            }\r\n\r\n            let renderedInlines: number = 0;\r\n\r\n            for (const inline of this._inlines) {\r\n                const renderedInline = inline.render();\r\n\r\n                if (renderedInline) {\r\n                    element.appendChild(renderedInline);\r\n\r\n                    renderedInlines++;\r\n                }\r\n            }\r\n\r\n            if (renderedInlines > 0) {\r\n                return element;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    forElementId?: string;\r\n\r\n    asString(): string | undefined {\r\n        let result = \"\";\r\n\r\n        for (const inline of this._inlines) {\r\n            result += inline.asString();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"RichTextBlock\";\r\n    }\r\n\r\n    getInlineCount(): number {\r\n        return this._inlines.length;\r\n    }\r\n\r\n    getInlineAt(index: number): CardElement {\r\n        if (index >= 0 && index < this._inlines.length) {\r\n            return this._inlines[index];\r\n        } else {\r\n            throw new Error(Strings.errors.indexOutOfRange(index));\r\n        }\r\n    }\r\n\r\n    addInline(inline: CardElement | string) {\r\n        if (typeof inline === \"string\") {\r\n            this.internalAddInline(new TextRun(inline));\r\n        } else {\r\n            this.internalAddInline(inline);\r\n        }\r\n    }\r\n\r\n    removeInline(inline: CardElement): boolean {\r\n        const index = this._inlines.indexOf(inline);\r\n\r\n        if (index >= 0) {\r\n            this._inlines[index].setParent(undefined);\r\n            this._inlines.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class Fact extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\r\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\r\n\r\n    // For historic reasons, the \"title\" schema property is exposed as \"name\" in the OM.\r\n    @property(Fact.titleProperty)\r\n    name?: string;\r\n\r\n    @property(Fact.valueProperty)\r\n    value?: string;\r\n\r\n    //#endregion\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"Fact\";\r\n    }\r\n\r\n    constructor(name?: string, value?: string) {\r\n        super();\r\n\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    //#region Schema\r\n\r\n    static readonly factsProperty = new SerializableObjectCollectionProperty(\r\n        Versions.v1_0,\r\n        \"facts\",\r\n        Fact\r\n    );\r\n\r\n    @property(FactSet.factsProperty)\r\n    facts: Fact[];\r\n\r\n    //#endregion\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        let element: HTMLElement | undefined = undefined;\r\n        const hostConfig = this.hostConfig;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n            element.setAttribute(\"role\", \"presentation\");\r\n\r\n            for (let i = 0; i < this.facts.length; i++) {\r\n                const trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                // Title column\r\n                let tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n\r\n                if (hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                let textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text =\r\n                    !this.facts[i].name && this.isDesignMode() ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = hostConfig.factSet.title.size;\r\n                textBlock.color = hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.title.weight;\r\n                textBlock.wrap = hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Spacer column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.width = \"10px\";\r\n\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Value column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = hostConfig.factSet.value.size;\r\n                textBlock.color = hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.value.weight;\r\n                textBlock.wrap = hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n}\r\n\r\nclass ImageDimensionProperty extends PropertyDefinition {\r\n    getInternalName(): string {\r\n        return this.internalName;\r\n    }\r\n\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): number | undefined {\r\n        let result: number | undefined = undefined;\r\n        const sourceValue = source[this.name];\r\n\r\n        if (sourceValue === undefined) {\r\n            return this.defaultValue;\r\n        }\r\n\r\n        let isValid = false;\r\n\r\n        if (typeof sourceValue === \"string\") {\r\n            try {\r\n                const size = SizeAndUnit.parse(sourceValue, true);\r\n\r\n                if (size.unit === Enums.SizeUnit.Pixel) {\r\n                    result = size.physicalSize;\r\n\r\n                    isValid = true;\r\n                }\r\n            } catch {\r\n                // Swallow the exception\r\n            }\r\n\r\n            // If the source value isn't valid per this property definition,\r\n            // check its validity per the fallback property, if specified\r\n            if (!isValid && this.fallbackProperty) {\r\n                isValid = this.fallbackProperty.isValidValue(sourceValue, context);\r\n            }\r\n        }\r\n\r\n        if (!isValid) {\r\n            context.logParseEvent(\r\n                sender,\r\n                Enums.ValidationEvent.InvalidPropertyValue,\r\n                Strings.errors.invalidPropertyValue(sourceValue, this.name)\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: number | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        context.serializeValue(\r\n            target,\r\n            this.name,\r\n            typeof value === \"number\" && !isNaN(value) ? value + \"px\" : undefined\r\n        );\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly internalName: string,\r\n        readonly fallbackProperty?: ValueSetProperty\r\n    ) {\r\n        super(targetVersion, name);\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    //#region Schema\r\n\r\n    static readonly urlProperty = new StringProperty(Versions.v1_0, \"url\");\r\n    static readonly altTextProperty = new StringProperty(Versions.v1_0, \"altText\");\r\n    static readonly backgroundColorProperty = new StringProperty(Versions.v1_1, \"backgroundColor\");\r\n    static readonly styleProperty = new EnumProperty(\r\n        Versions.v1_0,\r\n        \"style\",\r\n        Enums.ImageStyle,\r\n        Enums.ImageStyle.Default\r\n    );\r\n    static readonly sizeProperty = new EnumProperty(\r\n        Versions.v1_0,\r\n        \"size\",\r\n        Enums.Size,\r\n        Enums.Size.Auto\r\n    );\r\n    static readonly pixelWidthProperty = new ImageDimensionProperty(\r\n        Versions.v1_1,\r\n        \"width\",\r\n        \"pixelWidth\"\r\n    );\r\n    static readonly pixelHeightProperty = new ImageDimensionProperty(\r\n        Versions.v1_1,\r\n        \"height\",\r\n        \"pixelHeight\",\r\n        CardElement.heightProperty\r\n    );\r\n    static readonly selectActionProperty = new ActionProperty(Versions.v1_1, \"selectAction\", [\r\n        \"Action.ShowCard\"\r\n    ]);\r\n\r\n    protected populateSchema(schema: SerializableObjectSchema) {\r\n        super.populateSchema(schema);\r\n\r\n        schema.remove(CardElement.heightProperty);\r\n    }\r\n\r\n    @property(Image.urlProperty)\r\n    url?: string;\r\n\r\n    @property(Image.altTextProperty)\r\n    altText?: string;\r\n\r\n    @property(Image.backgroundColorProperty)\r\n    backgroundColor?: string;\r\n\r\n    @property(Image.sizeProperty)\r\n    size: Enums.Size = Enums.Size.Auto;\r\n\r\n    @property(Image.styleProperty)\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n\r\n    @property(Image.pixelWidthProperty)\r\n    pixelWidth?: number;\r\n\r\n    @property(Image.pixelHeightProperty)\r\n    pixelHeight?: number;\r\n\r\n    @property(Image.selectActionProperty)\r\n    selectAction?: Action;\r\n\r\n    //#endregion\r\n\r\n    private applySize(element: HTMLElement) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        } else {\r\n            if (this.maxHeight) {\r\n                // If the image is constrained in height, we set its height property and\r\n                // auto and stretch are ignored (default to medium). THis is necessary for\r\n                // ImageSet which uses a maximum image height as opposed to the cards width\r\n                // as a constraining dimension\r\n                switch (this.size) {\r\n                    case Enums.Size.Small:\r\n                        element.style.height = this.hostConfig.imageSizes.small + \"px\";\r\n                        break;\r\n                    case Enums.Size.Large:\r\n                        element.style.height = this.hostConfig.imageSizes.large + \"px\";\r\n                        break;\r\n                    default:\r\n                        element.style.height = this.hostConfig.imageSizes.medium + \"px\";\r\n                        break;\r\n                }\r\n\r\n                element.style.maxHeight = this.maxHeight + \"px\";\r\n            } else {\r\n                switch (this.size) {\r\n                    case Enums.Size.Stretch:\r\n                        element.style.width = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Auto:\r\n                        element.style.maxWidth = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Small:\r\n                        element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                        break;\r\n                    case Enums.Size.Large:\r\n                        element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                        break;\r\n                    case Enums.Size.Medium:\r\n                        element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                        break;\r\n                }\r\n\r\n                element.style.maxHeight = \"100%\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        let element: HTMLElement | undefined = undefined;\r\n\r\n        if (this.url) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            const hostConfig = this.hostConfig;\r\n\r\n            switch (this.getEffectiveHorizontalAlignment()) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            const imageElement = document.createElement(\"img\");\r\n            imageElement.onload = (_e: Event) => {\r\n                raiseImageLoadedEvent(this);\r\n            };\r\n            imageElement.onerror = (_e: Event) => {\r\n                if (this.renderedElement) {\r\n                    const card = this.getRootElement() as AdaptiveCard;\r\n\r\n                    this.renderedElement;\r\n\r\n                    if (card && card.designMode) {\r\n                        const errorElement = document.createElement(\"div\");\r\n                        errorElement.style.display = \"flex\";\r\n                        errorElement.style.alignItems = \"center\";\r\n                        errorElement.style.justifyContent = \"center\";\r\n                        errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                        errorElement.style.color = \"black\";\r\n                        errorElement.innerText = \":-(\";\r\n                        errorElement.style.padding = \"10px\";\r\n\r\n                        this.applySize(errorElement);\r\n\r\n                        this.renderedElement.appendChild(errorElement);\r\n                    }\r\n                }\r\n\r\n                raiseImageLoadedEvent(this);\r\n            };\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                imageElement.onkeypress = (e) => {\r\n                    if (\r\n                        this.selectAction &&\r\n                        this.selectAction.isEffectivelyEnabled() &&\r\n                        (e.code === \"Enter\" || e.code === \"Space\")\r\n                    ) {\r\n                        // enter or space pressed\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        this.selectAction.execute();\r\n                    }\r\n                };\r\n\r\n                imageElement.onclick = (e) => {\r\n                    if (this.selectAction && this.selectAction.isEffectivelyEnabled()) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        this.selectAction.execute();\r\n                    }\r\n                };\r\n\r\n                this.selectAction.setupElementForAccessibility(imageElement);\r\n\r\n                if (this.selectAction.isEffectivelyEnabled()) {\r\n                    imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                }\r\n            }\r\n\r\n            this.applySize(imageElement);\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            const backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            if (backgroundColor) {\r\n                imageElement.style.backgroundColor = backgroundColor;\r\n            }\r\n\r\n            imageElement.src = <string>this.preProcessPropertyValue(Image.urlProperty);\r\n\r\n            const altTextProperty = this.preProcessPropertyValue(Image.altTextProperty);\r\n            if (altTextProperty) {\r\n                imageElement.alt = <string>altTextProperty;\r\n            }\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    maxHeight?: number;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getAllActions(): Action[] {\r\n        const result = super.getAllActions();\r\n\r\n        if (this.selectAction) {\r\n            result.push(this.selectAction);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        let result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        return this.url ? [{ url: this.url, mimeType: \"image\" }] : [];\r\n    }\r\n}\r\n\r\nexport abstract class CardElementContainer extends CardElement {\r\n    //#region Schema\r\n\r\n    static readonly selectActionProperty = new ActionProperty(Versions.v1_1, \"selectAction\", [\r\n        \"Action.ShowCard\"\r\n    ]);\r\n\r\n    protected populateSchema(schema: SerializableObjectSchema) {\r\n        super.populateSchema(schema);\r\n\r\n        if (!this.isSelectable) {\r\n            schema.remove(CardElementContainer.selectActionProperty);\r\n        }\r\n    }\r\n\r\n    @property(CardElementContainer.selectActionProperty)\r\n    protected _selectAction?: Action;\r\n\r\n    //#endregion\r\n\r\n    protected isElementAllowed(element: CardElement) {\r\n        return this.hostConfig.supportsInteractivity || !element.isInteractive;\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(\r\n                this.getEffectivePadding()\r\n            );\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        this.renderedElement.style.marginRight = \"0\";\r\n        this.renderedElement.style.marginLeft = \"0\";\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    // This function is kept but return [] when removing Carousel from code\r\n    protected forbiddenChildElements(): string[] {\r\n        return [];\r\n    }\r\n\r\n    abstract getItemCount(): number;\r\n    abstract getItemAt(index: number): CardElement;\r\n    abstract getFirstVisibleRenderedItem(): CardElement | undefined;\r\n    abstract getLastVisibleRenderedItem(): CardElement | undefined;\r\n    abstract removeItem(item: CardElement): boolean;\r\n\r\n    allowVerticalOverflow: boolean = false;\r\n\r\n    releaseDOMResources() {\r\n        super.releaseDOMResources();\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            this.getItemAt(i).releaseDOMResources();\r\n        }\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            const item = this.getItemAt(i);\r\n\r\n            if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\r\n                context.addFailure(\r\n                    this,\r\n                    Enums.ValidationEvent.InteractivityNotAllowed,\r\n                    Strings.errors.interactivityNotAllowed()\r\n                );\r\n            }\r\n\r\n            if (!this.isElementAllowed(item)) {\r\n                context.addFailure(\r\n                    this,\r\n                    Enums.ValidationEvent.InteractivityNotAllowed,\r\n                    Strings.errors.elementTypeNotAllowed(item.getJsonTypeName())\r\n                );\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(): HTMLElement | undefined {\r\n        const element = super.render();\r\n\r\n        if (element) {\r\n            const hostConfig = this.hostConfig;\r\n\r\n            if (this.allowVerticalOverflow) {\r\n                element.style.overflowX = \"hidden\";\r\n                element.style.overflowY = \"auto\";\r\n            }\r\n\r\n            if (\r\n                element &&\r\n                this.isSelectable &&\r\n                this._selectAction &&\r\n                hostConfig.supportsInteractivity\r\n            ) {\r\n                element.onclick = (e) => {\r\n                    if (this._selectAction && this._selectAction.isEffectivelyEnabled()) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        this._selectAction.execute();\r\n                    }\r\n                };\r\n\r\n                element.onkeypress = (e) => {\r\n                    if (\r\n                        this._selectAction &&\r\n                        this._selectAction.isEffectivelyEnabled() &&\r\n                        (e.code === \"Enter\" || e.code === \"Space\")\r\n                    ) {\r\n                        // Enter or space pressed\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        this._selectAction.execute();\r\n                    }\r\n                };\r\n\r\n                this._selectAction.setupElementForAccessibility(element);\r\n\r\n                if (this._selectAction.isEffectivelyEnabled()) {\r\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                }\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (processChildren) {\r\n            for (let i = 0; i < this.getItemCount(); i++) {\r\n                this.getItemAt(i).updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllInputs(processActions: boolean = true): Input[] {\r\n        let result: Input[] = [];\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            result.push(...this.getItemAt(i).getAllInputs(processActions));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getAllActions(): Action[] {\r\n        const result = super.getAllActions();\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            result.push(...this.getItemAt(i).getAllActions());\r\n        }\r\n\r\n        if (this._selectAction) {\r\n            result.push(this._selectAction);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        let result: IResourceInformation[] = [];\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            result.push(...this.getItemAt(i).getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement | undefined {\r\n        let result = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (let i = 0; i < this.getItemCount(); i++) {\r\n                result = this.getItemAt(i).getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    findDOMNodeOwner(node: Node): CardObject | undefined {\r\n        let target: CardObject | undefined = undefined;\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            // recur through child elements\r\n            target = this.getItemAt(i).findDOMNodeOwner(node);\r\n\r\n            if (target) {\r\n                return target;\r\n            }\r\n        }\r\n\r\n        // If not found in children, check the actions\r\n        for (let i = 0; i < this.getActionCount(); i++) {\r\n            target = this.getActionAt(i)?.findDOMNodeOwner(node);\r\n\r\n            if (target) {\r\n                return target;\r\n            }\r\n        }\r\n\r\n        // if not found in children or actions, defer to parent implementation\r\n        return super.findDOMNodeOwner(node);\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElementContainer {\r\n    //#region Schema\r\n\r\n    static readonly imagesProperty = new SerializableObjectCollectionProperty(\r\n        Versions.v1_0,\r\n        \"images\",\r\n        Image,\r\n        (sender: SerializableObject, item: Image) => {\r\n            item.setParent(<CardElement>sender);\r\n        }\r\n    );\r\n    static readonly imageSizeProperty = new EnumProperty(\r\n        Versions.v1_0,\r\n        \"imageSize\",\r\n        Enums.ImageSize,\r\n        Enums.ImageSize.Medium\r\n    );\r\n\r\n    @property(ImageSet.imagesProperty)\r\n    private _images: Image[] = [];\r\n\r\n    @property(ImageSet.imageSizeProperty)\r\n    imageSize: Enums.ImageSize = Enums.ImageSize.Medium;\r\n\r\n    //#endregion\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        let element: HTMLElement | undefined = undefined;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (const image of this._images) {\r\n                switch (this.imageSize) {\r\n                    case Enums.ImageSize.Small:\r\n                        image.size = Enums.Size.Small;\r\n                        break;\r\n                    case Enums.ImageSize.Large:\r\n                        image.size = Enums.Size.Large;\r\n                        break;\r\n                    default:\r\n                        image.size = Enums.Size.Medium;\r\n                        break;\r\n                }\r\n\r\n                image.maxHeight = this.hostConfig.imageSet.maxImageHeight;\r\n\r\n                const renderedImage = image.render();\r\n\r\n                if (renderedImage) {\r\n                    renderedImage.style.display = \"inline-flex\";\r\n                    renderedImage.style.margin = \"0px\";\r\n                    renderedImage.style.marginRight = \"10px\";\r\n\r\n                    Utils.appendChild(element, renderedImage);\r\n                }\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._images.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._images[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement | undefined {\r\n        return this._images && this._images.length > 0 ? this._images[0] : undefined;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement | undefined {\r\n        return this._images && this._images.length > 0\r\n            ? this._images[this._images.length - 1]\r\n            : undefined;\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Image) {\r\n            const itemIndex = this._images.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n\r\n                item.setParent(undefined);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            image.setParent(this);\r\n        } else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    }\r\n}\r\n\r\nexport abstract class ContentSource extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly mimeTypeProperty = new StringProperty(Versions.v1_1, \"mimeType\");\r\n    static readonly urlProperty = new StringProperty(Versions.v1_1, \"url\");\r\n\r\n    @property(ContentSource.mimeTypeProperty)\r\n    mimeType?: string;\r\n\r\n    @property(ContentSource.urlProperty)\r\n    url?: string;\r\n\r\n    //#endregion\r\n\r\n    constructor(url?: string, mimeType?: string) {\r\n        super();\r\n\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return this.mimeType && this.url ? true : false;\r\n    }\r\n}\r\n\r\nexport class CaptionSource extends ContentSource {\r\n    //#region Schema\r\n\r\n    static readonly labelProperty = new StringProperty(Versions.v1_6, \"label\");\r\n\r\n    @property(CaptionSource.labelProperty)\r\n    label?: string;\r\n\r\n    //#endregion\r\n\r\n    constructor(url?: string, mimeType?: string, label?: string) {\r\n        super(url, mimeType);\r\n\r\n        this.label = label;\r\n    }\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"CaptionSource\";\r\n    }\r\n\r\n    render(): HTMLElement | undefined {\r\n        let result: HTMLTrackElement | undefined = undefined;\r\n\r\n        if (this.isValid()) {\r\n            result = document.createElement(\"track\");\r\n            result.src = this.url!;\r\n            result.kind = \"captions\";\r\n            result.label = this.label!;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class MediaSource extends ContentSource {\r\n    protected getSchemaKey(): string {\r\n        return \"MediaSource\";\r\n    }\r\n\r\n    render(): HTMLElement | undefined {\r\n        let result: HTMLSourceElement | undefined = undefined;\r\n\r\n        if (this.isValid()) {\r\n            result = document.createElement(\"source\");\r\n            result.src = this.url!;\r\n            result.type = this.mimeType!;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport abstract class MediaPlayer {\r\n    private _posterUrl?: string;\r\n\r\n    abstract canPlay(): boolean;\r\n    abstract render(): HTMLElement;\r\n    abstract fetchVideoDetails(): Promise<void>;\r\n\r\n    play() {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    get posterUrl(): string | undefined {\r\n        return this._posterUrl;\r\n    }\r\n\r\n    protected set posterUrl(value: string | undefined) {\r\n        this._posterUrl = value;\r\n    }\r\n\r\n    get selectedMediaType(): string | undefined {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport class HTML5MediaPlayer extends MediaPlayer {\r\n    private _selectedMediaType?: string;\r\n    private _selectedSources: MediaSource[] = [];\r\n    private _captionSources: CaptionSource[] = [];\r\n    private _mediaElement?: HTMLMediaElement;\r\n\r\n    private processSources() {\r\n        this._selectedSources = [];\r\n        this._captionSources = [];\r\n        this._selectedMediaType = undefined;\r\n\r\n        for (const source of this.owner.sources) {\r\n            const mimeComponents = source.mimeType ? source.mimeType.split(\"/\") : [];\r\n\r\n            if (mimeComponents.length === 2) {\r\n                if (!this._selectedMediaType) {\r\n                    const index = HTML5MediaPlayer.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n\r\n                    if (index >= 0) {\r\n                        this._selectedMediaType = HTML5MediaPlayer.supportedMediaTypes[index];\r\n                    }\r\n                }\r\n                if (mimeComponents[0] === this._selectedMediaType) {\r\n                    this._selectedSources.push(source);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._captionSources.push(...this.owner.captionSources);\r\n    }\r\n\r\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\r\n\r\n    constructor(readonly owner: Media) {\r\n        super();\r\n\r\n        this.processSources();\r\n    }\r\n\r\n    canPlay(): boolean {\r\n        return this._selectedSources.length > 0;\r\n    }\r\n\r\n    async fetchVideoDetails() {\r\n        // Nothing to fetch for the HTML5 media player\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        if (this._selectedMediaType === \"video\") {\r\n            this._mediaElement = document.createElement(\"video\");\r\n        } else {\r\n            this._mediaElement = document.createElement(\"audio\");\r\n        }\r\n\r\n        this._mediaElement.setAttribute(\r\n            \"aria-label\",\r\n            this.owner.altText ? this.owner.altText : Strings.defaults.mediaPlayerAriaLabel()\r\n        );\r\n        this._mediaElement.setAttribute(\"webkit-playsinline\", \"\");\r\n        this._mediaElement.setAttribute(\"playsinline\", \"\");\r\n        // We enable crossorigin for cases where the caption file has a different domain than\r\n        // the video file. If the caption file lives in a different domain than the video file\r\n        // and crossorigin is not set, then the caption file will fail to load.\r\n        this._mediaElement.setAttribute(\"crossorigin\", \"\");\r\n        this._mediaElement.autoplay = true;\r\n        this._mediaElement.controls = true;\r\n\r\n        if (Utils.isMobileOS()) {\r\n            this._mediaElement.muted = true;\r\n        }\r\n\r\n        this._mediaElement.preload = \"none\";\r\n        this._mediaElement.style.width = \"100%\";\r\n\r\n        for (const source of this.owner.sources) {\r\n            const renderedSource = source.render();\r\n\r\n            Utils.appendChild(this._mediaElement, renderedSource);\r\n        }\r\n\r\n        for (const captionSource of this.owner.captionSources) {\r\n            if (captionSource.mimeType == \"vtt\") {\r\n                const renderedCaptionSource = captionSource.render();\r\n\r\n                Utils.appendChild(this._mediaElement, renderedCaptionSource);\r\n            }\r\n        }\r\n\r\n        return this._mediaElement;\r\n    }\r\n\r\n    play() {\r\n        if (this._mediaElement) {\r\n            this._mediaElement.play();\r\n        }\r\n    }\r\n\r\n    get selectedMediaType(): string | undefined {\r\n        return this._selectedMediaType;\r\n    }\r\n}\r\n\r\nexport abstract class CustomMediaPlayer extends MediaPlayer {\r\n    constructor(matches: RegExpExecArray) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport abstract class IFrameMediaMediaPlayer extends CustomMediaPlayer {\r\n    private _videoId?: string;\r\n\r\n    constructor(matches: RegExpExecArray, readonly iFrameTitle?: string) {\r\n        super(matches);\r\n\r\n        if (matches.length >= 2) {\r\n            this._videoId = matches[1];\r\n        }\r\n    }\r\n\r\n    abstract getEmbedVideoUrl(): string;\r\n\r\n    canPlay(): boolean {\r\n        return this._videoId !== undefined;\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let container = document.createElement(\"div\");\r\n        container.style.position = \"relative\";\r\n        container.style.width = \"100%\";\r\n        container.style.height = \"0\";\r\n        container.style.paddingBottom = \"56.25%\";\r\n\r\n        let iFrame = document.createElement(\"iframe\");\r\n        iFrame.style.position = \"absolute\";\r\n        iFrame.style.top = \"0\";\r\n        iFrame.style.left = \"0\";\r\n        iFrame.style.width = \"100%\";\r\n        iFrame.style.height = \"100%\";\r\n        iFrame.src = this.getEmbedVideoUrl();\r\n        iFrame.frameBorder = \"0\";\r\n\r\n        if (this.iFrameTitle) {\r\n            iFrame.title = this.iFrameTitle;\r\n        }\r\n\r\n        iFrame.allow =\r\n            \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\";\r\n        iFrame.allowFullscreen = true;\r\n\r\n        container.appendChild(iFrame);\r\n\r\n        return container;\r\n    }\r\n\r\n    get videoId(): string | undefined {\r\n        return this._videoId;\r\n    }\r\n}\r\n\r\nexport class VimeoPlayer extends IFrameMediaMediaPlayer {\r\n    async fetchVideoDetails(): Promise<void> {\r\n        const oEmbedUrl = `https://vimeo.com/api/oembed.json?url=${this.getEmbedVideoUrl()}`;\r\n\r\n        let response = await fetch(oEmbedUrl);\r\n\r\n        if (response.ok) {\r\n            let json = await response.json();\r\n\r\n            this.posterUrl = json[\"thumbnail_url\"];\r\n        }\r\n    }\r\n\r\n    getEmbedVideoUrl(): string {\r\n        return `https://player.vimeo.com/video/${this.videoId}?autoplay=1`;\r\n    }\r\n}\r\n\r\nexport class DailymotionPlayer extends IFrameMediaMediaPlayer {\r\n    async fetchVideoDetails(): Promise<void> {\r\n        const apiUrl = `https://api.dailymotion.com/video/${this.videoId}?fields=thumbnail_720_url`;\r\n\r\n        let response = await fetch(apiUrl);\r\n\r\n        if (response.ok) {\r\n            let json = await response.json();\r\n\r\n            this.posterUrl = json[\"thumbnail_720_url\"];\r\n        }\r\n    }\r\n\r\n    getEmbedVideoUrl(): string {\r\n        return `https://www.dailymotion.com/embed/video/${this.videoId}?autoplay=1`;\r\n    }\r\n}\r\n\r\nexport class YouTubePlayer extends IFrameMediaMediaPlayer {\r\n    private _startTimeIndex?: number;\r\n\r\n    constructor(matches: RegExpExecArray, readonly iFrameTitle?: string) {\r\n        super(matches, iFrameTitle);\r\n\r\n        if (matches.length >= 3 && matches[2] !== undefined) {\r\n            this._startTimeIndex = parseInt(matches[2]);\r\n        }\r\n    }\r\n\r\n    async fetchVideoDetails(): Promise<void> {\r\n        this.posterUrl = this.videoId\r\n            ? `https://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg`\r\n            : undefined;\r\n    }\r\n\r\n    getEmbedVideoUrl(): string {\r\n        let url = `https://www.youtube.com/embed/${this.videoId}?autoplay=1`;\r\n\r\n        if (this._startTimeIndex !== undefined) {\r\n            url += `&start=${this._startTimeIndex}`;\r\n        }\r\n\r\n        return url;\r\n    }\r\n}\r\n\r\nexport interface ICustomMediaPlayer {\r\n    urlPatterns: RegExp[];\r\n    createMediaPlayer: (matches: RegExpExecArray) => CustomMediaPlayer;\r\n}\r\n\r\nexport class Media extends CardElement {\r\n    static customMediaPlayers: ICustomMediaPlayer[] = [\r\n        {\r\n            urlPatterns: [\r\n                /^(?:https?:\\/\\/)?(?:www.)?youtube.com\\/watch\\?(?=.*v=([\\w\\d-_]+))(?=(?:.*t=(\\d+))?).*/gi,\r\n                /^(?:https?:\\/\\/)?youtu.be\\/([\\w\\d-_]+)(?:\\?t=(\\d+))?/gi\r\n            ],\r\n            createMediaPlayer: (matches) =>\r\n                new YouTubePlayer(matches, Strings.defaults.youTubeVideoPlayer())\r\n        },\r\n        {\r\n            urlPatterns: [/^(?:https?:\\/\\/)?vimeo.com\\/([\\w\\d-_]+).*/gi],\r\n            createMediaPlayer: (matches) =>\r\n                new VimeoPlayer(matches, Strings.defaults.vimeoVideoPlayer())\r\n        },\r\n        {\r\n            urlPatterns: [/^(?:https?:\\/\\/)?(?:www.)?dailymotion.com\\/video\\/([\\w\\d-_]+).*/gi],\r\n            createMediaPlayer: (matches) =>\r\n                new DailymotionPlayer(matches, Strings.defaults.dailymotionVideoPlayer())\r\n        }\r\n    ];\r\n\r\n    //#region Schema\r\n\r\n    static readonly sourcesProperty = new SerializableObjectCollectionProperty(\r\n        Versions.v1_1,\r\n        \"sources\",\r\n        MediaSource\r\n    );\r\n    static readonly captionSourcesProperty = new SerializableObjectCollectionProperty(\r\n        Versions.v1_6,\r\n        \"captionSources\",\r\n        CaptionSource\r\n    );\r\n    static readonly posterProperty = new StringProperty(Versions.v1_1, \"poster\");\r\n    static readonly altTextProperty = new StringProperty(Versions.v1_1, \"altText\");\r\n\r\n    @property(Media.sourcesProperty)\r\n    sources: MediaSource[] = [];\r\n\r\n    @property(Media.captionSourcesProperty)\r\n    captionSources: CaptionSource[] = [];\r\n\r\n    @property(Media.posterProperty)\r\n    poster?: string;\r\n\r\n    @property(Media.altTextProperty)\r\n    altText?: string;\r\n\r\n    //#endregion\r\n\r\n    private _mediaPlayer: MediaPlayer;\r\n\r\n    private createMediaPlayer(): MediaPlayer {\r\n        for (let provider of Media.customMediaPlayers) {\r\n            for (let source of this.sources) {\r\n                if (source.url) {\r\n                    for (let pattern of provider.urlPatterns) {\r\n                        let matches = pattern.exec(source.url);\r\n\r\n                        if (matches !== null) {\r\n                            return provider.createMediaPlayer(matches);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return new HTML5MediaPlayer(this);\r\n    }\r\n\r\n    private handlePlayButtonInvoke(event: UIEvent): void {\r\n        if (this.hostConfig.media.allowInlinePlayback) {\r\n            event.preventDefault();\r\n            event.cancelBubble = true;\r\n\r\n            if (this.renderedElement) {\r\n                const mediaPlayerElement = this._mediaPlayer.render();\r\n                clearElement(this.renderedElement);\r\n                this.renderedElement.appendChild(mediaPlayerElement);\r\n\r\n                this._mediaPlayer.play();\r\n\r\n                mediaPlayerElement.focus();\r\n            }\r\n        } else {\r\n            if (Media.onPlay) {\r\n                event.preventDefault();\r\n                event.cancelBubble = true;\r\n\r\n                Media.onPlay(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async displayPoster() {\r\n        if (this.renderedElement) {\r\n            const playButtonArrowWidth = 12;\r\n            const playButtonArrowHeight = 15;\r\n\r\n            const posterRootElement = document.createElement(\"div\");\r\n            posterRootElement.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\r\n            posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n            posterRootElement.setAttribute(\r\n                \"aria-label\",\r\n                this.altText ? this.altText : Strings.defaults.mediaPlayerAriaLabel()\r\n            );\r\n            posterRootElement.style.position = \"relative\";\r\n            posterRootElement.style.display = \"flex\";\r\n\r\n            let posterUrl = this.poster ? this.poster : this._mediaPlayer.posterUrl;\r\n\r\n            if (!posterUrl) {\r\n                posterUrl = this.hostConfig.media.defaultPoster;\r\n            }\r\n\r\n            if (posterUrl) {\r\n                const posterImageElement = document.createElement(\"img\");\r\n                posterImageElement.style.width = \"100%\";\r\n                posterImageElement.style.height = \"100%\";\r\n                posterImageElement.setAttribute(\"role\", \"presentation\");\r\n\r\n                posterImageElement.onerror = (_e: Event) => {\r\n                    if (posterImageElement.parentNode) {\r\n                        posterImageElement.parentNode.removeChild(posterImageElement);\r\n                    }\r\n\r\n                    posterRootElement.classList.add(\"empty\");\r\n                    posterRootElement.style.minHeight = \"150px\";\r\n                };\r\n\r\n                posterImageElement.src = posterUrl;\r\n\r\n                posterRootElement.appendChild(posterImageElement);\r\n            } else {\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            }\r\n\r\n            if (this.hostConfig.supportsInteractivity && this._mediaPlayer.canPlay()) {\r\n                const playButtonOuterElement = document.createElement(\"div\");\r\n                playButtonOuterElement.tabIndex = 0;\r\n                playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n                playButtonOuterElement.setAttribute(\r\n                    \"aria-label\",\r\n                    Strings.defaults.mediaPlayerPlayMedia()\r\n                );\r\n                playButtonOuterElement.className =\r\n                    this.hostConfig.makeCssClassName(\"ac-media-playButton\");\r\n                playButtonOuterElement.style.display = \"flex\";\r\n                playButtonOuterElement.style.alignItems = \"center\";\r\n                playButtonOuterElement.style.justifyContent = \"center\";\r\n                playButtonOuterElement.onclick = (e) => {\r\n                    this.handlePlayButtonInvoke(e);\r\n                };\r\n\r\n                playButtonOuterElement.onkeypress = (e: KeyboardEvent) => {\r\n                    if (e.code === \"Enter\" || e.code === \"Space\") {\r\n                        // space or enter\r\n                        this.handlePlayButtonInvoke(e);\r\n                    }\r\n                };\r\n\r\n                const playButtonInnerElement = document.createElement(\"div\");\r\n                playButtonInnerElement.className = this.hostConfig.makeCssClassName(\r\n                    \"ac-media-playButton-arrow\"\r\n                );\r\n                playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n                playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n                playButtonInnerElement.style.borderTopWidth = playButtonArrowHeight / 2 + \"px\";\r\n                playButtonInnerElement.style.borderBottomWidth = playButtonArrowHeight / 2 + \"px\";\r\n                playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n                playButtonInnerElement.style.borderRightWidth = \"0\";\r\n                playButtonInnerElement.style.borderStyle = \"solid\";\r\n                playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n                playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n                playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n                playButtonInnerElement.style.transform =\r\n                    \"translate(\" + playButtonArrowWidth / 10 + \"px,0px)\";\r\n\r\n                playButtonOuterElement.appendChild(playButtonInnerElement);\r\n\r\n                const playButtonContainer = document.createElement(\"div\");\r\n                playButtonContainer.style.position = \"absolute\";\r\n                playButtonContainer.style.left = \"0\";\r\n                playButtonContainer.style.top = \"0\";\r\n                playButtonContainer.style.width = \"100%\";\r\n                playButtonContainer.style.height = \"100%\";\r\n                playButtonContainer.style.display = \"flex\";\r\n                playButtonContainer.style.justifyContent = \"center\";\r\n                playButtonContainer.style.alignItems = \"center\";\r\n\r\n                playButtonContainer.appendChild(playButtonOuterElement);\r\n                posterRootElement.appendChild(playButtonContainer);\r\n            }\r\n\r\n            clearElement(this.renderedElement);\r\n            this.renderedElement.appendChild(posterRootElement);\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        const element = <HTMLElement>document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n\r\n        return element;\r\n    }\r\n\r\n    static onPlay?: (sender: Media) => void;\r\n\r\n    render(): HTMLElement | undefined {\r\n        let result = super.render();\r\n\r\n        if (result) {\r\n            this._mediaPlayer = this.createMediaPlayer();\r\n\r\n            this._mediaPlayer.fetchVideoDetails().then(() => this.displayPoster());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    releaseDOMResources() {\r\n        super.releaseDOMResources();\r\n\r\n        this.displayPoster();\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Media\";\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        const result: IResourceInformation[] = [];\r\n\r\n        if (this._mediaPlayer) {\r\n            const posterUrl = this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n\r\n            if (posterUrl) {\r\n                result.push({ url: posterUrl, mimeType: \"image\" });\r\n            }\r\n        }\r\n\r\n        for (const mediaSource of this.sources) {\r\n            if (mediaSource.isValid()) {\r\n                result.push({\r\n                    /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion -- `mediaSource.url` is of type `string | undefined`, but is validated by `isValid()` call */\r\n                    url: mediaSource.url!,\r\n                    mimeType: mediaSource.mimeType!\r\n                    /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion */\r\n                });\r\n            }\r\n        }\r\n\r\n        for (const captionSource of this.captionSources) {\r\n            if (captionSource.isValid()) {\r\n                result.push({\r\n                    /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion -- `captionSource.url` is of type `string | undefined`, but is validated by `isValid()` call */\r\n                    url: captionSource.url!,\r\n                    mimeType: captionSource.mimeType!\r\n                    /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion */\r\n                });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get selectedMediaType(): string | undefined {\r\n        return this._mediaPlayer.selectedMediaType;\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements IInput {\r\n    //#region Schema\r\n\r\n    static readonly labelProperty = new StringProperty(Versions.v1_3, \"label\", true);\r\n    static readonly isRequiredProperty = new BoolProperty(Versions.v1_3, \"isRequired\", false);\r\n    static readonly errorMessageProperty = new StringProperty(Versions.v1_3, \"errorMessage\", true);\r\n\r\n    @property(Input.labelProperty)\r\n    label?: string;\r\n\r\n    @property(Input.isRequiredProperty)\r\n    isRequired: boolean;\r\n\r\n    @property(Input.errorMessageProperty)\r\n    errorMessage?: string;\r\n\r\n    //#endregion\r\n\r\n    private _outerContainerElement: HTMLElement;\r\n    private _inputControlContainerElement: HTMLElement;\r\n    private _renderedErrorMessageElement?: HTMLElement;\r\n    private _renderedLabelElement?: HTMLElement;\r\n    private _renderedInputControlElement?: HTMLElement;\r\n    private _oldValue: any;\r\n\r\n    protected getAllLabelIds(): string[] {\r\n        const labelIds: string[] = [];\r\n\r\n        if (this.labelledBy) {\r\n            labelIds.push(this.labelledBy);\r\n        }\r\n\r\n        if (this._renderedLabelElement) {\r\n            labelIds.push(this._renderedLabelElement.id);\r\n        }\r\n\r\n        if (this._renderedErrorMessageElement) {\r\n            labelIds.push(this._renderedErrorMessageElement.id);\r\n        }\r\n\r\n        return labelIds;\r\n    }\r\n\r\n    protected updateInputControlAriaLabelledBy() {\r\n        if (this._renderedInputControlElement) {\r\n            const labelIds: string[] = this.getAllLabelIds();\r\n\r\n            if (labelIds.length > 0) {\r\n                this._renderedInputControlElement.setAttribute(\r\n                    \"aria-labelledby\",\r\n                    labelIds.join(\" \")\r\n                );\r\n            } else {\r\n                this._renderedInputControlElement.removeAttribute(\"aria-labelledby\");\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get isNullable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get renderedInputControlElement(): HTMLElement | undefined {\r\n        return this._renderedInputControlElement;\r\n    }\r\n\r\n    protected get inputControlContainerElement(): HTMLElement {\r\n        return this._inputControlContainerElement;\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement | undefined {\r\n        const hostConfig = this.hostConfig;\r\n\r\n        this._outerContainerElement = document.createElement(\"div\");\r\n        this._outerContainerElement.style.display = \"flex\";\r\n        this._outerContainerElement.style.flexDirection = \"column\";\r\n\r\n        const renderedInputControlId = Utils.generateUniqueId();\r\n\r\n        if (this.label) {\r\n            const labelRichTextBlock = new RichTextBlock();\r\n            labelRichTextBlock.setParent(this);\r\n            labelRichTextBlock.forElementId = renderedInputControlId;\r\n\r\n            const labelInline = new TextRun(this.label);\r\n            labelRichTextBlock.addInline(labelInline);\r\n\r\n            if (this.isRequired) {\r\n                labelInline.init(hostConfig.inputs.label.requiredInputs);\r\n\r\n                const isRequiredCueInline = new TextRun(\r\n                    hostConfig.inputs.label.requiredInputs.suffix\r\n                );\r\n                isRequiredCueInline.color = hostConfig.inputs.label.requiredInputs.suffixColor;\r\n                isRequiredCueInline.ariaHidden = true;\r\n\r\n                labelRichTextBlock.addInline(isRequiredCueInline);\r\n            } else {\r\n                labelInline.init(hostConfig.inputs.label.optionalInputs);\r\n            }\r\n\r\n            this._renderedLabelElement = labelRichTextBlock.render();\r\n\r\n            if (this._renderedLabelElement) {\r\n                this._renderedLabelElement.id = Utils.generateUniqueId();\r\n                this._renderedLabelElement.style.marginBottom =\r\n                    hostConfig.getEffectiveSpacing(hostConfig.inputs.label.inputSpacing) + \"px\";\r\n\r\n                this._outerContainerElement.appendChild(this._renderedLabelElement);\r\n            }\r\n        }\r\n\r\n        this._inputControlContainerElement = document.createElement(\"div\");\r\n        this._inputControlContainerElement.className =\r\n            hostConfig.makeCssClassName(\"ac-input-container\");\r\n        this._inputControlContainerElement.style.display = \"flex\";\r\n\r\n        if (this.height === \"stretch\") {\r\n            this._inputControlContainerElement.style.alignItems = \"stretch\";\r\n            this._inputControlContainerElement.style.flex = \"1 1 auto\";\r\n        }\r\n\r\n        this._renderedInputControlElement = this.internalRender();\r\n\r\n        if (this._renderedInputControlElement) {\r\n            this._renderedInputControlElement.id = renderedInputControlId;\r\n            this._renderedInputControlElement.style.minWidth = \"0px\";\r\n\r\n            if (this.isNullable && this.isRequired) {\r\n                this._renderedInputControlElement.setAttribute(\"aria-required\", \"true\");\r\n                this._renderedInputControlElement.classList.add(\r\n                    hostConfig.makeCssClassName(\"ac-input-required\")\r\n                );\r\n            }\r\n\r\n            this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\r\n            this._outerContainerElement.appendChild(this._inputControlContainerElement);\r\n\r\n            this.updateInputControlAriaLabelledBy();\r\n\r\n            return this._outerContainerElement;\r\n        }\r\n\r\n        this.resetDirtyState();\r\n\r\n        return undefined;\r\n    }\r\n\r\n    protected valueChanged() {\r\n        this.getRootElement().updateActionsEnabledState();\r\n\r\n        if (this.isValid()) {\r\n            this.resetValidationFailureCue();\r\n        }\r\n\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n\r\n        raiseInputValueChangedEvent(this);\r\n    }\r\n\r\n    protected resetValidationFailureCue() {\r\n        if (this.renderedInputControlElement) {\r\n            this.renderedInputControlElement.classList.remove(\r\n                this.hostConfig.makeCssClassName(\"ac-input-validation-failed\")\r\n            );\r\n\r\n            this.updateInputControlAriaLabelledBy();\r\n\r\n            if (this._renderedErrorMessageElement) {\r\n                this._outerContainerElement.removeChild(this._renderedErrorMessageElement);\r\n\r\n                this._renderedErrorMessageElement = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected showValidationErrorMessage() {\r\n        if (\r\n            this.renderedElement &&\r\n            this.errorMessage &&\r\n            GlobalSettings.displayInputValidationErrors\r\n        ) {\r\n            const errorMessageTextBlock = new TextBlock();\r\n            errorMessageTextBlock.setParent(this);\r\n            errorMessageTextBlock.text = this.errorMessage;\r\n            errorMessageTextBlock.wrap = true;\r\n            errorMessageTextBlock.init(this.hostConfig.inputs.errorMessage);\r\n\r\n            this._renderedErrorMessageElement = errorMessageTextBlock.render();\r\n\r\n            if (this._renderedErrorMessageElement) {\r\n                this._renderedErrorMessageElement.id = Utils.generateUniqueId();\r\n                this._outerContainerElement.appendChild(this._renderedErrorMessageElement);\r\n\r\n                this.updateInputControlAriaLabelledBy();\r\n            }\r\n        }\r\n    }\r\n\r\n    onValueChanged: (sender: Input) => void;\r\n\r\n    labelledBy?: string;\r\n\r\n    abstract isSet(): boolean;\r\n\r\n    focus() {\r\n        if (this._renderedInputControlElement) {\r\n            this._renderedInputControlElement.focus();\r\n        }\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return true;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n        return this.value !== this._oldValue;\r\n    }\r\n\r\n    resetDirtyState() {\r\n        this._oldValue = this.value;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (!this.id) {\r\n            context.addFailure(\r\n                this,\r\n                Enums.ValidationEvent.PropertyCantBeNull,\r\n                Strings.errors.inputsMustHaveUniqueId()\r\n            );\r\n        }\r\n\r\n        if (this.isRequired) {\r\n            if (!this.label) {\r\n                context.addFailure(\r\n                    this,\r\n                    Enums.ValidationEvent.RequiredInputsShouldHaveLabel,\r\n                    \"Required inputs should have a label\"\r\n                );\r\n            }\r\n\r\n            if (!this.errorMessage) {\r\n                context.addFailure(\r\n                    this,\r\n                    Enums.ValidationEvent.RequiredInputsShouldHaveErrorMessage,\r\n                    \"Required inputs should have an error message\"\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    validateValue(): boolean {\r\n        this.resetValidationFailureCue();\r\n\r\n        const result = this.isRequired ? this.isSet() && this.isValid() : this.isValid();\r\n\r\n        if (!result && this.renderedInputControlElement) {\r\n            this.renderedInputControlElement.classList.add(\r\n                this.hostConfig.makeCssClassName(\"ac-input-validation-failed\")\r\n            );\r\n\r\n            this.showValidationErrorMessage();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getAllInputs(processActions: boolean = true): Input[] {\r\n        return [this];\r\n    }\r\n\r\n    render(): HTMLElement | undefined {\r\n        let result = super.render();\r\n\r\n        this.resetDirtyState();\r\n\r\n        return result;\r\n    }\r\n\r\n    abstract get value(): any;\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    //#region Schema\r\n\r\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\r\n    static readonly maxLengthProperty = new NumProperty(Versions.v1_0, \"maxLength\");\r\n    static readonly isMultilineProperty = new BoolProperty(Versions.v1_0, \"isMultiline\", false);\r\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\r\n    static readonly styleProperty = new EnumProperty(\r\n        Versions.v1_0,\r\n        \"style\",\r\n        Enums.InputTextStyle,\r\n        Enums.InputTextStyle.Text,\r\n        [\r\n            { value: Enums.InputTextStyle.Text },\r\n            { value: Enums.InputTextStyle.Tel },\r\n            { value: Enums.InputTextStyle.Url },\r\n            { value: Enums.InputTextStyle.Email },\r\n            { value: Enums.InputTextStyle.Password, targetVersion: Versions.v1_5 }\r\n        ]\r\n    );\r\n    static readonly inlineActionProperty = new ActionProperty(Versions.v1_0, \"inlineAction\", [\r\n        \"Action.ShowCard\"\r\n    ]);\r\n    static readonly regexProperty = new StringProperty(Versions.v1_3, \"regex\", true);\r\n\r\n    @property(TextInput.valueProperty)\r\n    defaultValue?: string;\r\n\r\n    @property(TextInput.maxLengthProperty)\r\n    maxLength?: number;\r\n\r\n    @property(TextInput.isMultilineProperty)\r\n    isMultiline: boolean = false;\r\n\r\n    @property(TextInput.placeholderProperty)\r\n    placeholder?: string;\r\n\r\n    @property(TextInput.styleProperty)\r\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\r\n\r\n    @property(TextInput.inlineActionProperty)\r\n    inlineAction?: Action;\r\n\r\n    @property(TextInput.regexProperty)\r\n    regex?: string;\r\n\r\n    //#endregion\r\n\r\n    private setupInput(input: HTMLInputElement | HTMLTextAreaElement) {\r\n        input.style.flex = \"1 1 auto\";\r\n\r\n        input.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n        if (this.placeholder) {\r\n            input.placeholder = this.placeholder;\r\n            input.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        if (this.defaultValue) {\r\n            input.value = this.defaultValue;\r\n        }\r\n\r\n        if (this.maxLength && this.maxLength > 0) {\r\n            input.maxLength = this.maxLength;\r\n        }\r\n\r\n        input.oninput = () => {\r\n            this.valueChanged();\r\n        };\r\n        input.onkeypress = (e: KeyboardEvent) => {\r\n            // Ctrl+Enter pressed\r\n            if (\r\n                e.ctrlKey &&\r\n                e.code === \"Enter\" &&\r\n                this.inlineAction &&\r\n                this.inlineAction.isEffectivelyEnabled()\r\n            ) {\r\n                this.inlineAction.execute();\r\n            }\r\n        };\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        let result: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n        if (this.isMultiline && this.style !== Enums.InputTextStyle.Password) {\r\n            result = document.createElement(\"textarea\");\r\n            result.className = this.hostConfig.makeCssClassName(\r\n                \"ac-input\",\r\n                \"ac-textInput\",\r\n                \"ac-multiline\"\r\n            );\r\n\r\n            if (this.height === \"stretch\") {\r\n                result.style.height = \"initial\";\r\n            }\r\n        } else {\r\n            result = document.createElement(\"input\");\r\n            result.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            result.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n        }\r\n\r\n        this.setupInput(result);\r\n\r\n        return result;\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement | undefined {\r\n        const renderedInputControl = super.overrideInternalRender();\r\n\r\n        if (this.inlineAction) {\r\n            const button = document.createElement(\"button\");\r\n            button.className = this.hostConfig.makeCssClassName(\r\n                this.inlineAction.isEffectivelyEnabled()\r\n                    ? \"ac-inlineActionButton\"\r\n                    : \"ac-inlineActionButton-disabled\"\r\n            );\r\n\r\n            button.onclick = (e) => {\r\n                if (this.inlineAction && this.inlineAction.isEffectivelyEnabled()) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.inlineAction.execute();\r\n                }\r\n            };\r\n\r\n            if (this.inlineAction.iconUrl) {\r\n                button.classList.add(\"iconOnly\");\r\n\r\n                const icon = document.createElement(\"img\");\r\n                icon.style.height = \"100%\";\r\n                icon.setAttribute(\"role\", \"presentation\");\r\n\r\n                // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\r\n                // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\r\n                // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\r\n                // after the image has loaded and been gicven its final size. The below trick also fixes that.\r\n                icon.style.display = \"none\";\r\n                icon.onload = () => {\r\n                    icon.style.removeProperty(\"display\");\r\n                };\r\n                icon.onerror = () => {\r\n                    button.removeChild(icon);\r\n                    button.classList.remove(\"iconOnly\");\r\n                    button.classList.add(\"textOnly\");\r\n                    button.textContent =\r\n                        this.inlineAction && this.inlineAction.title\r\n                            ? this.inlineAction.title\r\n                            : Strings.defaults.inlineActionTitle();\r\n                };\r\n\r\n                icon.src = this.inlineAction.iconUrl;\r\n\r\n                button.appendChild(icon);\r\n                button.title = this.inlineAction.title\r\n                    ? this.inlineAction.title\r\n                    : Strings.defaults.inlineActionTitle();\r\n            } else {\r\n                button.classList.add(\"textOnly\");\r\n                button.textContent = this.inlineAction.title\r\n                    ? this.inlineAction.title\r\n                    : Strings.defaults.inlineActionTitle();\r\n            }\r\n\r\n            this.inlineAction.setupElementForAccessibility(button, true);\r\n\r\n            button.style.marginLeft = \"8px\";\r\n\r\n            this.inputControlContainerElement.appendChild(button);\r\n        }\r\n\r\n        return renderedInputControl;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    getAllActions(): Action[] {\r\n        const result = super.getAllActions();\r\n\r\n        if (this.inlineAction) {\r\n            result.push(this.inlineAction);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        let result = super.getActionById(id);\r\n\r\n        if (!result && this.inlineAction) {\r\n            result = this.inlineAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isSet(): boolean {\r\n        return this.value ? true : false;\r\n    }\r\n\r\n    isValid(): boolean {\r\n        if (!this.value) {\r\n            return true;\r\n        }\r\n\r\n        if (this.regex) {\r\n            return new RegExp(this.regex, \"g\").test(this.value);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    get value(): string | undefined {\r\n        if (this.renderedInputControlElement) {\r\n            if (this.isMultiline) {\r\n                return (<HTMLTextAreaElement>this.renderedInputControlElement).value;\r\n            } else {\r\n                return (<HTMLInputElement>this.renderedInputControlElement).value;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    //#region Schema\r\n\r\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\r\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\r\n    static readonly valueOnProperty = new StringProperty(\r\n        Versions.v1_0,\r\n        \"valueOn\",\r\n        true,\r\n        undefined,\r\n        \"true\",\r\n        (sender: SerializableObject) => {\r\n            return \"true\";\r\n        }\r\n    );\r\n    static readonly valueOffProperty = new StringProperty(\r\n        Versions.v1_0,\r\n        \"valueOff\",\r\n        true,\r\n        undefined,\r\n        \"false\",\r\n        (sender: SerializableObject) => {\r\n            return \"false\";\r\n        }\r\n    );\r\n    static readonly wrapProperty = new BoolProperty(Versions.v1_2, \"wrap\", false);\r\n\r\n    @property(ToggleInput.valueProperty)\r\n    defaultValue?: string;\r\n\r\n    @property(ToggleInput.titleProperty)\r\n    title?: string;\r\n\r\n    @property(ToggleInput.valueOnProperty)\r\n    valueOn: string = \"true\";\r\n\r\n    @property(ToggleInput.valueOffProperty)\r\n    valueOff: string = \"false\";\r\n\r\n    @property(ToggleInput.wrapProperty)\r\n    wrap: boolean = false;\r\n\r\n    //#endregion\r\n\r\n    private _checkboxInputElement: HTMLInputElement;\r\n    private _checkboxInputLabelElement: HTMLElement | undefined;\r\n    private _oldCheckboxValue: boolean;\r\n\r\n    protected updateInputControlAriaLabelledBy() {\r\n        if (this._checkboxInputElement) {\r\n            let joinedLabelIds = this.getAllLabelIds().join(\" \");\r\n\r\n            if (this._checkboxInputLabelElement && this._checkboxInputLabelElement.id) {\r\n                joinedLabelIds += \" \" + this._checkboxInputLabelElement.id;\r\n            }\r\n\r\n            if (joinedLabelIds) {\r\n                this._checkboxInputElement.setAttribute(\"aria-labelledby\", joinedLabelIds);\r\n            } else {\r\n                this._checkboxInputElement.removeAttribute(\"aria-labelledby\");\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        const element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = Utils.generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n\r\n        if (this.title) {\r\n            this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        }\r\n\r\n        if (this.isRequired) {\r\n            this._checkboxInputElement.setAttribute(\"aria-required\", \"true\");\r\n        }\r\n\r\n        this._checkboxInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n        if (this.defaultValue === this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        this._oldCheckboxValue = this._checkboxInputElement.checked;\r\n\r\n        this._checkboxInputElement.onchange = () => {\r\n            this.valueChanged();\r\n        };\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n\r\n        if (this.title || this.isDesignMode()) {\r\n            const label = new TextBlock();\r\n            label.setParent(this);\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = !this.title ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\r\n            label.wrap = this.wrap;\r\n\r\n            this._checkboxInputLabelElement = label.render();\r\n\r\n            if (this._checkboxInputLabelElement) {\r\n                this._checkboxInputLabelElement.id = Utils.generateUniqueId();\r\n                this._checkboxInputLabelElement.style.display = \"inline-block\";\r\n                this._checkboxInputLabelElement.style.flex = \"1 1 auto\";\r\n                this._checkboxInputLabelElement.style.marginLeft = \"6px\";\r\n                this._checkboxInputLabelElement.style.verticalAlign = \"middle\";\r\n\r\n                const spacerElement = document.createElement(\"div\");\r\n                spacerElement.style.width = \"6px\";\r\n\r\n                Utils.appendChild(element, spacerElement);\r\n                Utils.appendChild(element, this._checkboxInputLabelElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected get isNullable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    focus() {\r\n        if (this._checkboxInputElement) {\r\n            this._checkboxInputElement.focus();\r\n        }\r\n    }\r\n\r\n    isSet(): boolean {\r\n        if (this.isRequired) {\r\n            return this.value === this.valueOn;\r\n        }\r\n\r\n        return this.value ? true : false;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n        return this._checkboxInputElement\r\n            ? this._checkboxInputElement.checked !== this._oldCheckboxValue\r\n            : false;\r\n    }\r\n\r\n    get value(): string | undefined {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\r\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\r\n\r\n    @property(Choice.titleProperty)\r\n    title?: string;\r\n\r\n    @property(Choice.valueProperty)\r\n    value?: string;\r\n\r\n    //#endregion\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"Choice\";\r\n    }\r\n\r\n    constructor(title?: string, value?: string) {\r\n        super();\r\n\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    //#region Schema\r\n\r\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\r\n    static readonly choicesProperty = new SerializableObjectCollectionProperty(\r\n        Versions.v1_0,\r\n        \"choices\",\r\n        Choice\r\n    );\r\n    static readonly styleProperty = new ValueSetProperty(\r\n        Versions.v1_0,\r\n        \"style\",\r\n        [\r\n            { value: \"compact\" },\r\n            { value: \"expanded\" },\r\n            { value: \"filtered\", targetVersion: Versions.v1_5 }\r\n        ],\r\n        \"compact\"\r\n    );\r\n    static readonly isMultiSelectProperty = new BoolProperty(Versions.v1_0, \"isMultiSelect\", false);\r\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\r\n    static readonly wrapProperty = new BoolProperty(Versions.v1_2, \"wrap\", false);\r\n\r\n    @property(ChoiceSetInput.valueProperty)\r\n    defaultValue?: string;\r\n\r\n    @property(ChoiceSetInput.styleProperty)\r\n    style?: \"compact\" | \"expanded\" | \"filtered\";\r\n\r\n    get isCompact(): boolean {\r\n        return !this.style || this.style === \"compact\";\r\n    }\r\n\r\n    set isCompact(value: boolean) {\r\n        this.style = value ? undefined : \"expanded\";\r\n    }\r\n\r\n    @property(ChoiceSetInput.isMultiSelectProperty)\r\n    isMultiSelect: boolean = false;\r\n\r\n    @property(ChoiceSetInput.placeholderProperty)\r\n    placeholder?: string;\r\n\r\n    @property(ChoiceSetInput.wrapProperty)\r\n    wrap: boolean = false;\r\n\r\n    @property(ChoiceSetInput.choicesProperty)\r\n    choices: Choice[] = [];\r\n\r\n    //#endregion\r\n\r\n    private static _uniqueCategoryCounter = 0;\r\n\r\n    private static getUniqueCategoryName(): string {\r\n        const uniqueCategoryName = \"__ac-category\" + ChoiceSetInput._uniqueCategoryCounter;\r\n\r\n        ChoiceSetInput._uniqueCategoryCounter++;\r\n\r\n        return uniqueCategoryName;\r\n    }\r\n\r\n    private _uniqueCategoryName: string;\r\n    private _selectElement: HTMLSelectElement | undefined;\r\n    private _textInput: HTMLInputElement | undefined;\r\n    private _toggleInputs: HTMLInputElement[] | undefined;\r\n    private _labels: Array<HTMLElement | undefined>;\r\n\r\n    // Make sure `aria-current` is applied to the currently-selected item\r\n    private internalApplyAriaCurrent(): void {\r\n        if (this._selectElement) {\r\n            const options = this._selectElement.options;\r\n\r\n            if (options) {\r\n                for (const option of Array.from(options)) {\r\n                    if (option.selected) {\r\n                        option.setAttribute(\"aria-current\", \"true\");\r\n                    } else {\r\n                        option.removeAttribute(\"aria-current\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderCompoundInput(\r\n        cssClassName: string,\r\n        type: \"checkbox\" | \"radio\",\r\n        defaultValues: string[] | undefined\r\n    ): HTMLElement {\r\n        const element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", cssClassName);\r\n        element.style.width = \"100%\";\r\n\r\n        element.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n        this._toggleInputs = [];\r\n        this._labels = [];\r\n\r\n        for (const choice of this.choices) {\r\n            const input = document.createElement(\"input\");\r\n            input.id = Utils.generateUniqueId();\r\n            input.type = type;\r\n            input.style.margin = \"0\";\r\n            input.style.display = \"inline-block\";\r\n            input.style.verticalAlign = \"middle\";\r\n            input.style.flex = \"0 0 auto\";\r\n            input.name = this.id ? this.id : this._uniqueCategoryName;\r\n\r\n            if (this.isRequired) {\r\n                input.setAttribute(\"aria-required\", \"true\");\r\n            }\r\n\r\n            input.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n            if (choice.value) {\r\n                input.value = choice.value;\r\n            }\r\n\r\n            if (choice.title) {\r\n                input.setAttribute(\"aria-label\", choice.title);\r\n            }\r\n\r\n            if (defaultValues && choice.value) {\r\n                if (defaultValues.indexOf(choice.value) >= 0) {\r\n                    input.checked = true;\r\n                }\r\n            }\r\n\r\n            input.onchange = () => {\r\n                this.valueChanged();\r\n            };\r\n\r\n            this._toggleInputs.push(input);\r\n\r\n            const compoundInput = document.createElement(\"div\");\r\n            compoundInput.style.display = \"flex\";\r\n            compoundInput.style.alignItems = \"center\";\r\n\r\n            Utils.appendChild(compoundInput, input);\r\n\r\n            const label = new TextBlock();\r\n            label.setParent(this);\r\n            label.forElementId = input.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = choice.title ? choice.title : \"Choice \" + this._toggleInputs.length;\r\n            label.useMarkdown = GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\r\n            label.wrap = this.wrap;\r\n\r\n            const labelElement = label.render();\r\n\r\n            this._labels.push(labelElement);\r\n\r\n            if (labelElement) {\r\n                labelElement.id = Utils.generateUniqueId();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                const spacerElement = document.createElement(\"div\");\r\n                spacerElement.style.width = \"6px\";\r\n\r\n                Utils.appendChild(compoundInput, spacerElement);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n            }\r\n\r\n            Utils.appendChild(element, compoundInput);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected updateInputControlAriaLabelledBy() {\r\n        if (\r\n            (this.isMultiSelect || this.style === \"expanded\") &&\r\n            this._toggleInputs &&\r\n            this._labels\r\n        ) {\r\n            const labelIds: string[] = this.getAllLabelIds();\r\n\r\n            for (let i = 0; i < this._toggleInputs.length; i++) {\r\n                let joinedLabelIds = labelIds.join(\" \");\r\n                const label = this._labels[i];\r\n\r\n                if (label && label.id) {\r\n                    joinedLabelIds += \" \" + label.id;\r\n                }\r\n\r\n                if (joinedLabelIds) {\r\n                    this._toggleInputs[i].setAttribute(\"aria-labelledby\", joinedLabelIds);\r\n                } else {\r\n                    this._toggleInputs[i].removeAttribute(\"aria-labelledby\");\r\n                }\r\n            }\r\n        } else {\r\n            super.updateInputControlAriaLabelledBy();\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        this._uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n\r\n        if (this.isMultiSelect) {\r\n            // Render as a list of toggle inputs\r\n            return this.renderCompoundInput(\r\n                \"ac-choiceSetInput-multiSelect\",\r\n                \"checkbox\",\r\n                this.defaultValue\r\n                    ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator)\r\n                    : undefined\r\n            );\r\n        } else {\r\n            if (this.style === \"expanded\") {\r\n                // Render as a series of radio buttons\r\n                return this.renderCompoundInput(\r\n                    \"ac-choiceSetInput-expanded\",\r\n                    \"radio\",\r\n                    this.defaultValue ? [this.defaultValue] : undefined\r\n                );\r\n            } else if (this.style === \"filtered\") {\r\n                // Render as a text input coupled with a datalist\r\n                const inputContainer = document.createElement(\"div\");\r\n                inputContainer.style.width = \"100%\";\r\n\r\n                this._textInput = document.createElement(\"input\");\r\n                this._textInput.className = this.hostConfig.makeCssClassName(\r\n                    \"ac-input\",\r\n                    \"ac-multichoiceInput\",\r\n                    \"ac-choiceSetInput-filtered\"\r\n                );\r\n                this._textInput.type = \"text\";\r\n                this._textInput.style.width = \"100%\";\r\n                this._textInput.oninput = () => {\r\n                    this.valueChanged();\r\n\r\n                    if (this._textInput) {\r\n                        // Remove aria-label when value is not empty so narration software doesn't\r\n                        // read the placeholder\r\n                        if (this.value) {\r\n                            this._textInput.removeAttribute(\"placeholder\");\r\n                            this._textInput.removeAttribute(\"aria-label\");\r\n                        } else if (this.placeholder) {\r\n                            this._textInput.placeholder = this.placeholder;\r\n                            this._textInput.setAttribute(\"aria-label\", this.placeholder);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                if (this.defaultValue) {\r\n                    this._textInput.value = this.defaultValue;\r\n                }\r\n\r\n                if (this.placeholder && !this._textInput.value) {\r\n                    this._textInput.placeholder = this.placeholder;\r\n                    this._textInput.setAttribute(\"aria-label\", this.placeholder);\r\n                }\r\n\r\n                this._textInput.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n                const dataList = document.createElement(\"datalist\");\r\n                dataList.id = Utils.generateUniqueId();\r\n\r\n                for (const choice of this.choices) {\r\n                    const option = document.createElement(\"option\");\r\n                    // To fix https://stackoverflow.com/questions/29882361/show-datalist-labels-but-submit-the-actual-value\r\n                    // value is mapped to choice.title other than choice.value\r\n                    if (choice.title) {\r\n                        option.value = choice.title;\r\n                        option.setAttribute(\"aria-label\", choice.title);\r\n                    }\r\n\r\n                    option.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n                    dataList.appendChild(option);\r\n                }\r\n\r\n                this._textInput.setAttribute(\"list\", dataList.id);\r\n\r\n                inputContainer.append(this._textInput, dataList);\r\n\r\n                return inputContainer;\r\n            } else {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\r\n                    \"ac-input\",\r\n                    \"ac-multichoiceInput\",\r\n                    \"ac-choiceSetInput-compact\"\r\n                );\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                this._selectElement.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n                const placeholderOption = document.createElement(\"option\");\r\n                placeholderOption.selected = true;\r\n                placeholderOption.disabled = true;\r\n                placeholderOption.hidden = true;\r\n                placeholderOption.value = \"\";\r\n\r\n                if (this.placeholder) {\r\n                    placeholderOption.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, placeholderOption);\r\n\r\n                for (const choice of this.choices) {\r\n                    const option = document.createElement(\"option\");\r\n                    option.value = choice.value!;\r\n\r\n                    if (choice.title) {\r\n                        option.text = choice.title;\r\n                        option.setAttribute(\"aria-label\", choice.title);\r\n                    }\r\n\r\n                    option.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n                    if (choice.value === this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                this._selectElement.onchange = () => {\r\n                    this.internalApplyAriaCurrent();\r\n                    this.valueChanged();\r\n                };\r\n\r\n                this.internalApplyAriaCurrent();\r\n\r\n                return this._selectElement;\r\n            }\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    focus() {\r\n        if (this._toggleInputs && (this.isMultiSelect || this.style === \"expanded\")) {\r\n            if (this._toggleInputs.length > 0) {\r\n                this._toggleInputs[0].focus();\r\n            }\r\n        } else if (this._textInput) {\r\n            this._textInput.focus();\r\n        } else {\r\n            super.focus();\r\n        }\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this.choices.length === 0) {\r\n            context.addFailure(\r\n                this,\r\n                Enums.ValidationEvent.CollectionCantBeEmpty,\r\n                Strings.errors.choiceSetMustHaveAtLeastOneChoice()\r\n            );\r\n        }\r\n\r\n        for (const choice of this.choices) {\r\n            if (!choice.title || !choice.value) {\r\n                context.addFailure(\r\n                    this,\r\n                    Enums.ValidationEvent.PropertyCantBeNull,\r\n                    Strings.errors.choiceSetChoicesMustHaveTitleAndValue()\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    isSet(): boolean {\r\n        return this.value ? true : false;\r\n    }\r\n\r\n    isValid(): boolean {\r\n        if (this._textInput) {\r\n            if (this.value === \"\" || this.value === this.placeholder) {\r\n                return true;\r\n            }\r\n            for (const choice of this.choices) {\r\n                if (this.value === choice.value) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return super.isValid();\r\n    }\r\n\r\n    get value(): string | undefined {\r\n        if (!this.isMultiSelect) {\r\n            if (this._selectElement) {\r\n                return this._selectElement.selectedIndex > 0\r\n                    ? this._selectElement.value\r\n                    : undefined;\r\n            } else if (this._textInput) {\r\n                for (const choice of this.choices) {\r\n                    if (choice.title && this._textInput.value === choice.title) {\r\n                        return choice.value;\r\n                    }\r\n                }\r\n                return this._textInput.value;\r\n            } else if (this._toggleInputs && this._toggleInputs.length > 0) {\r\n                for (const toggleInput of this._toggleInputs) {\r\n                    if (toggleInput.checked) {\r\n                        return toggleInput.value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return undefined;\r\n        } else {\r\n            if (!this._toggleInputs || this._toggleInputs.length === 0) {\r\n                return undefined;\r\n            }\r\n\r\n            let result: string = \"\";\r\n\r\n            for (const toggleInput of this._toggleInputs) {\r\n                if (toggleInput.checked) {\r\n                    if (result !== \"\") {\r\n                        result += this.hostConfig.choiceSetInputValueSeparator;\r\n                    }\r\n\r\n                    result += toggleInput.value;\r\n                }\r\n            }\r\n\r\n            return result ? result : undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    //#region Schema\r\n\r\n    static readonly valueProperty = new NumProperty(Versions.v1_0, \"value\");\r\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\r\n    static readonly minProperty = new NumProperty(Versions.v1_0, \"min\");\r\n    static readonly maxProperty = new NumProperty(Versions.v1_0, \"max\");\r\n\r\n    @property(NumberInput.valueProperty)\r\n    defaultValue?: number;\r\n\r\n    @property(NumberInput.minProperty)\r\n    min?: number;\r\n\r\n    @property(NumberInput.maxProperty)\r\n    max?: number;\r\n\r\n    @property(NumberInput.placeholderProperty)\r\n    placeholder?: string;\r\n\r\n    //#endregion\r\n\r\n    private _numberInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n\r\n        if (this.min !== undefined) {\r\n            this._numberInputElement.setAttribute(\"min\", this.min.toString());\r\n        }\r\n\r\n        if (this.max !== undefined) {\r\n            this._numberInputElement.setAttribute(\"max\", this.max.toString());\r\n        }\r\n\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\r\n            \"ac-input\",\r\n            \"ac-numberInput\"\r\n        );\r\n        this._numberInputElement.style.width = \"100%\";\r\n\r\n        this._numberInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n        if (this.defaultValue !== undefined) {\r\n            this._numberInputElement.valueAsNumber = this.defaultValue;\r\n        }\r\n\r\n        if (this.placeholder) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._numberInputElement.oninput = () => {\r\n            this.valueChanged();\r\n        };\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    isSet(): boolean {\r\n        return this.value !== undefined && !isNaN(this.value);\r\n    }\r\n\r\n    isValid(): boolean {\r\n        if (this.value === undefined) {\r\n            return !this.isRequired;\r\n        }\r\n\r\n        let result = true;\r\n\r\n        if (this.min !== undefined) {\r\n            result = result && this.value >= this.min;\r\n        }\r\n\r\n        if (this.max !== undefined) {\r\n            result = result && this.value <= this.max;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get value(): number | undefined {\r\n        return this._numberInputElement ? this._numberInputElement.valueAsNumber : undefined;\r\n    }\r\n\r\n    set value(value: number | undefined) {\r\n        if (value && this._numberInputElement) {\r\n            this._numberInputElement.value = value.toString();\r\n        }\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    //#region Schema\r\n\r\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\r\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\r\n    static readonly minProperty = new StringProperty(Versions.v1_0, \"min\");\r\n    static readonly maxProperty = new StringProperty(Versions.v1_0, \"max\");\r\n\r\n    @property(DateInput.valueProperty)\r\n    defaultValue?: string;\r\n\r\n    @property(DateInput.minProperty)\r\n    min?: string;\r\n\r\n    @property(DateInput.maxProperty)\r\n    max?: string;\r\n\r\n    @property(DateInput.placeholderProperty)\r\n    placeholder?: string;\r\n\r\n    //#endregion\r\n\r\n    private _dateInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n\r\n        if (this.min) {\r\n            this._dateInputElement.setAttribute(\"min\", this.min);\r\n        }\r\n\r\n        if (this.max) {\r\n            this._dateInputElement.setAttribute(\"max\", this.max);\r\n        }\r\n\r\n        if (this.placeholder) {\r\n            this._dateInputElement.placeholder = this.placeholder;\r\n            this._dateInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._dateInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\r\n            \"ac-input\",\r\n            \"ac-dateInput\"\r\n        );\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        this._dateInputElement.oninput = () => {\r\n            this.valueChanged();\r\n        };\r\n\r\n        if (this.defaultValue) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    isSet(): boolean {\r\n        return this.value ? true : false;\r\n    }\r\n\r\n    isValid(): boolean {\r\n        if (!this.value) {\r\n            return !this.isRequired;\r\n        }\r\n\r\n        const valueAsDate = new Date(this.value);\r\n\r\n        let result = true;\r\n\r\n        if (this.min) {\r\n            const minDate = new Date(this.min);\r\n\r\n            result = result && valueAsDate >= minDate;\r\n        }\r\n\r\n        if (this.max) {\r\n            const maxDate = new Date(this.max);\r\n\r\n            result = result && valueAsDate <= maxDate;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get value(): string | undefined {\r\n        return this._dateInputElement ? this._dateInputElement.value : undefined;\r\n    }\r\n}\r\n\r\nexport class TimeProperty extends CustomProperty<string | undefined> {\r\n    constructor(readonly targetVersion: Version, readonly name: string) {\r\n        super(\r\n            targetVersion,\r\n            name,\r\n            (\r\n                sender: SerializableObject,\r\n                prop: PropertyDefinition,\r\n                source: PropertyBag,\r\n                context: BaseSerializationContext\r\n            ) => {\r\n                const value = source[prop.name];\r\n\r\n                if (typeof value === \"string\" && value && /^[0-9]{2}:[0-9]{2}$/.test(value)) {\r\n                    return value;\r\n                }\r\n\r\n                return undefined;\r\n            },\r\n            (\r\n                sender: SerializableObject,\r\n                prop: PropertyDefinition,\r\n                target: PropertyBag,\r\n                value: string | undefined,\r\n                context: BaseSerializationContext\r\n            ) => {\r\n                context.serializeValue(target, prop.name, value);\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private static convertTimeStringToDate(timeString: string): Date {\r\n        return new Date(\"1973-09-04T\" + timeString + \":00Z\");\r\n    }\r\n\r\n    //#region Schema\r\n\r\n    static readonly valueProperty = new TimeProperty(Versions.v1_0, \"value\");\r\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\r\n    static readonly minProperty = new TimeProperty(Versions.v1_0, \"min\");\r\n    static readonly maxProperty = new TimeProperty(Versions.v1_0, \"max\");\r\n\r\n    @property(TimeInput.valueProperty)\r\n    defaultValue?: string;\r\n\r\n    @property(TimeInput.minProperty)\r\n    min?: string;\r\n\r\n    @property(TimeInput.maxProperty)\r\n    max?: string;\r\n\r\n    @property(TimeInput.placeholderProperty)\r\n    placeholder?: string;\r\n\r\n    //#endregion\r\n\r\n    private _timeInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n\r\n        if (this.min) {\r\n            this._timeInputElement.setAttribute(\"min\", this.min);\r\n        }\r\n\r\n        if (this.max) {\r\n            this._timeInputElement.setAttribute(\"max\", this.max);\r\n        }\r\n\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\r\n            \"ac-input\",\r\n            \"ac-timeInput\"\r\n        );\r\n        this._timeInputElement.style.width = \"100%\";\r\n        this._timeInputElement.oninput = () => {\r\n            this.valueChanged();\r\n        };\r\n\r\n        if (this.placeholder) {\r\n            this._timeInputElement.placeholder = this.placeholder;\r\n            this._timeInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._timeInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\r\n\r\n        if (this.defaultValue) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    isSet(): boolean {\r\n        return this.value ? true : false;\r\n    }\r\n\r\n    isValid(): boolean {\r\n        if (!this.value) {\r\n            return !this.isRequired;\r\n        }\r\n\r\n        const valueAsDate = TimeInput.convertTimeStringToDate(this.value);\r\n\r\n        let result = true;\r\n\r\n        if (this.min) {\r\n            const minDate = TimeInput.convertTimeStringToDate(this.min);\r\n\r\n            result = result && valueAsDate >= minDate;\r\n        }\r\n\r\n        if (this.max) {\r\n            const maxDate = TimeInput.convertTimeStringToDate(this.max);\r\n\r\n            result = result && valueAsDate <= maxDate;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get value(): string | undefined {\r\n        return this._timeInputElement ? this._timeInputElement.value : undefined;\r\n    }\r\n}\r\n\r\nexport const enum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nexport type ActionType = { new (): Action };\r\n\r\nexport abstract class Action extends CardObject {\r\n    //#region Schema\r\n\r\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\r\n    static readonly iconUrlProperty = new StringProperty(Versions.v1_1, \"iconUrl\");\r\n    static readonly styleProperty = new ValueSetProperty(\r\n        Versions.v1_2,\r\n        \"style\",\r\n        [\r\n            { value: Enums.ActionStyle.Default },\r\n            { value: Enums.ActionStyle.Positive },\r\n            { value: Enums.ActionStyle.Destructive }\r\n        ],\r\n        Enums.ActionStyle.Default\r\n    );\r\n    static readonly modeProperty = new ValueSetProperty(\r\n        Versions.v1_5,\r\n        \"mode\",\r\n        [{ value: Enums.ActionMode.Primary }, { value: Enums.ActionMode.Secondary }],\r\n        Enums.ActionMode.Primary\r\n    );\r\n    static readonly tooltipProperty = new StringProperty(Versions.v1_5, \"tooltip\");\r\n    static readonly isEnabledProperty = new BoolProperty(Versions.v1_5, \"isEnabled\", true);\r\n\r\n    @property(Action.titleProperty)\r\n    title?: string;\r\n\r\n    @property(Action.iconUrlProperty)\r\n    iconUrl?: string;\r\n\r\n    @property(Action.styleProperty)\r\n    style: string = Enums.ActionStyle.Default;\r\n\r\n    @property(Action.modeProperty)\r\n    mode: string = Enums.ActionMode.Primary;\r\n\r\n    @property(Action.tooltipProperty)\r\n    tooltip?: string;\r\n\r\n    @property(Action.isEnabledProperty)\r\n    isEnabled: boolean;\r\n\r\n    //#endregion\r\n\r\n    private renderButtonContent() {\r\n        if (this.renderedElement) {\r\n            // Cache hostConfig for perf\r\n            const hostConfig = this.hostConfig;\r\n\r\n            const titleElement = document.createElement(\"div\");\r\n            titleElement.style.overflow = \"hidden\";\r\n            titleElement.style.textOverflow = \"ellipsis\";\r\n\r\n            if (\r\n                !(\r\n                    hostConfig.actions.iconPlacement === Enums.ActionIconPlacement.AboveTitle ||\r\n                    hostConfig.actions.allowTitleToWrap\r\n                )\r\n            ) {\r\n                titleElement.style.whiteSpace = \"nowrap\";\r\n            }\r\n\r\n            if (this.title) {\r\n                titleElement.innerText = this.title;\r\n            }\r\n\r\n            if (!this.iconUrl) {\r\n                this.renderedElement.classList.add(\"noIcon\");\r\n                this.renderedElement.appendChild(titleElement);\r\n            } else {\r\n                const iconElement = document.createElement(\"img\");\r\n                iconElement.src = this.iconUrl;\r\n                iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n                iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n                iconElement.style.flex = \"0 0 auto\";\r\n\r\n                if (hostConfig.actions.iconPlacement === Enums.ActionIconPlacement.AboveTitle) {\r\n                    this.renderedElement.classList.add(\"iconAbove\");\r\n                    this.renderedElement.style.flexDirection = \"column\";\r\n\r\n                    if (this.title) {\r\n                        iconElement.style.marginBottom = \"6px\";\r\n                    }\r\n                } else {\r\n                    this.renderedElement.classList.add(\"iconLeft\");\r\n\r\n                    iconElement.style.maxHeight = \"100%\";\r\n\r\n                    if (this.title) {\r\n                        iconElement.style.marginRight = \"6px\";\r\n                    }\r\n                }\r\n\r\n                this.renderedElement.appendChild(iconElement);\r\n                this.renderedElement.appendChild(titleElement);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getParentContainer(): Container | undefined {\r\n        if (this.parent instanceof Container) {\r\n            return this.parent;\r\n        }\r\n\r\n        return this.parent ? this.parent.getParentContainer() : undefined;\r\n    }\r\n\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n    private _actionCollection?: ActionCollection; // hold the reference to its action collection\r\n    private _isFocusable: boolean = true;\r\n\r\n    isDesignMode(): boolean {\r\n        const rootElement = this.getRootObject();\r\n\r\n        return rootElement instanceof CardElement && rootElement.isDesignMode();\r\n    }\r\n\r\n    protected updateCssClasses() {\r\n        if (this.parent && this.renderedElement) {\r\n            const hostConfig = this.parent.hostConfig;\r\n\r\n            this.renderedElement.className = hostConfig.makeCssClassName(\r\n                this.isEffectivelyEnabled() ? \"ac-pushButton\" : \"ac-pushButton-disabled\"\r\n            );\r\n\r\n            const parentContainer = this.getParentContainer();\r\n\r\n            if (parentContainer) {\r\n                const parentContainerStyle = parentContainer.getEffectiveStyle();\r\n\r\n                if (parentContainerStyle) {\r\n                    this.renderedElement.classList.add(\"style-\" + parentContainerStyle);\r\n                }\r\n            }\r\n\r\n            this.renderedElement.tabIndex = !this.isDesignMode() && this.isFocusable ? 0 : -1;\r\n\r\n            switch (this._state) {\r\n                case ActionButtonState.Normal:\r\n                    // No additional classes needed\r\n                    break;\r\n\r\n                case ActionButtonState.Expanded:\r\n                    this.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                    break;\r\n                case ActionButtonState.Subdued:\r\n                    this.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                    break;\r\n            }\r\n\r\n            if (this.style && this.isEffectivelyEnabled()) {\r\n                if (this.style === Enums.ActionStyle.Positive) {\r\n                    this.renderedElement.classList.add(\r\n                        ...hostConfig.makeCssClassNames(\"primary\", \"style-positive\")\r\n                    );\r\n                } else {\r\n                    this.renderedElement.classList.add(\r\n                        ...hostConfig.makeCssClassNames(\"style-\" + this.style.toLowerCase())\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getDefaultSerializationContext(): BaseSerializationContext {\r\n        return new SerializationContext();\r\n    }\r\n\r\n    protected internalGetReferencedInputs(): Dictionary<Input> {\r\n        return {};\r\n    }\r\n\r\n    protected internalPrepareForExecution(_inputs: Dictionary<Input> | undefined) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalValidateInputs(referencedInputs: Dictionary<Input> | undefined): Input[] {\r\n        const result: Input[] = [];\r\n\r\n        if (referencedInputs) {\r\n            for (const key of Object.keys(referencedInputs)) {\r\n                const input = referencedInputs[key];\r\n\r\n                if (!input.validateValue()) {\r\n                    result.push(input);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected shouldSerialize(context: SerializationContext): boolean {\r\n        return context.actionRegistry.findByName(this.getJsonTypeName()) !== undefined;\r\n    }\r\n\r\n    protected raiseExecuteActionEvent() {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    protected internalAfterExecute() {\r\n        let rootObject = this.getRootObject();\r\n\r\n        if (rootObject instanceof CardElement) {\r\n            rootObject.updateActionsEnabledState();\r\n        }\r\n    }\r\n\r\n    onExecute: (sender: Action) => void;\r\n\r\n    getHref(): string | undefined {\r\n        return \"\";\r\n    }\r\n\r\n    getAriaRole(): string {\r\n        return \"button\";\r\n    }\r\n\r\n    setupElementForAccessibility(element: HTMLElement, promoteTooltipToLabel: boolean = false) {\r\n        element.tabIndex = this.isEffectivelyEnabled() && !this.isDesignMode() ? 0 : -1;\r\n\r\n        element.setAttribute(\"role\", this.getAriaRole());\r\n\r\n        if (element instanceof HTMLButtonElement) {\r\n            element.disabled = !this.isEffectivelyEnabled();\r\n        }\r\n\r\n        if (!this.isEffectivelyEnabled()) {\r\n            element.setAttribute(\"aria-disabled\", \"true\");\r\n        } else {\r\n            element.removeAttribute(\"aria-disabled\");\r\n            element.classList.add(this.hostConfig.makeCssClassName(\"ac-selectable\"));\r\n        }\r\n\r\n        if (this.title) {\r\n            element.setAttribute(\"aria-label\", this.title);\r\n            element.title = this.title;\r\n        } else {\r\n            element.removeAttribute(\"aria-label\");\r\n            element.removeAttribute(\"title\");\r\n        }\r\n\r\n        if (this.tooltip) {\r\n            const targetAriaAttribute = promoteTooltipToLabel\r\n                ? this.title\r\n                    ? \"aria-description\"\r\n                    : \"aria-label\"\r\n                : \"aria-description\";\r\n\r\n            element.setAttribute(targetAriaAttribute, this.tooltip);\r\n            element.title = this.tooltip;\r\n        }\r\n    }\r\n\r\n    parse(source: any, context?: SerializationContext) {\r\n        return super.parse(source, context ? context : new SerializationContext());\r\n    }\r\n\r\n    render() {\r\n        const buttonElement = document.createElement(\"button\");\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n        buttonElement.onclick = (e) => {\r\n            if (this.isEffectivelyEnabled()) {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n\r\n                this.execute();\r\n            }\r\n        };\r\n\r\n        this._renderedElement = buttonElement;\r\n\r\n        this.renderButtonContent();\r\n        this.updateCssClasses();\r\n        this.setupElementForAccessibility(buttonElement);\r\n    }\r\n\r\n    execute() {\r\n        if (this._actionCollection) {\r\n            this._actionCollection.actionExecuted(this);\r\n        }\r\n\r\n        this.raiseExecuteActionEvent();\r\n        this.internalAfterExecute();\r\n    }\r\n\r\n    prepareForExecution(): boolean {\r\n        const referencedInputs = this.getReferencedInputs();\r\n        const invalidInputs = this.internalValidateInputs(referencedInputs);\r\n\r\n        if (invalidInputs.length > 0) {\r\n            invalidInputs[0].focus();\r\n\r\n            return false;\r\n        }\r\n\r\n        this.internalPrepareForExecution(referencedInputs);\r\n\r\n        return true;\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAllInputs(processActions: boolean = true): Input[] {\r\n        return [];\r\n    }\r\n\r\n    getAllActions(): Action[] {\r\n        return [this];\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        return this.iconUrl ? [{ url: this.iconUrl, mimeType: \"image\" }] : [];\r\n    }\r\n\r\n    getActionById(id: string): Action | undefined {\r\n        return this.id === id ? this : undefined;\r\n    }\r\n\r\n    getReferencedInputs(): Dictionary<Input> | undefined {\r\n        return this.internalGetReferencedInputs();\r\n    }\r\n\r\n    /**\r\n     * Validates the inputs associated with this action.\r\n     *\r\n     * @returns A list of inputs that failed validation, or an empty array if no input failed validation.\r\n     */\r\n    validateInputs(): Input[] {\r\n        return this.internalValidateInputs(this.getReferencedInputs());\r\n    }\r\n\r\n    updateEnabledState() {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    isEffectivelyEnabled(): boolean {\r\n        return this.isEnabled;\r\n    }\r\n\r\n    get isPrimary(): boolean {\r\n        return this.style === Enums.ActionStyle.Positive;\r\n    }\r\n\r\n    set isPrimary(value: boolean) {\r\n        if (value) {\r\n            this.style = Enums.ActionStyle.Positive;\r\n        } else {\r\n            if (this.style === Enums.ActionStyle.Positive) {\r\n                this.style = Enums.ActionStyle.Default;\r\n            }\r\n        }\r\n    }\r\n\r\n    get hostConfig(): HostConfig {\r\n        return this.parent ? this.parent.hostConfig : defaultHostConfig;\r\n    }\r\n\r\n    get parent(): CardElement | undefined {\r\n        return <CardElement>this._parent;\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        if (this._state !== value) {\r\n            this._state = value;\r\n\r\n            this.updateCssClasses();\r\n        }\r\n    }\r\n\r\n    get isFocusable(): boolean {\r\n        return this._isFocusable;\r\n    }\r\n\r\n    set isFocusable(value: boolean) {\r\n        if (this._isFocusable !== value) {\r\n            this._isFocusable = value;\r\n\r\n            this.updateCssClasses();\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class SubmitActionBase extends Action {\r\n    //#region Schema\r\n\r\n    static readonly dataProperty = new PropertyDefinition(Versions.v1_0, \"data\");\r\n    static readonly associatedInputsProperty = new CustomProperty(\r\n        Versions.v1_3,\r\n        \"associatedInputs\",\r\n        (\r\n            sender: SerializableObject,\r\n            prop: PropertyDefinition,\r\n            source: PropertyBag,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            const value = source[prop.name];\r\n\r\n            if (value !== undefined && typeof value === \"string\") {\r\n                return value.toLowerCase() === \"none\" ? \"none\" : \"auto\";\r\n            }\r\n\r\n            return undefined;\r\n        },\r\n        (\r\n            sender: SerializableObject,\r\n            prop: PropertyDefinition,\r\n            target: PropertyBag,\r\n            value: string | undefined,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            context.serializeValue(target, prop.name, value);\r\n        }\r\n    );\r\n    static readonly disabledUnlessAssociatedInputsChangeProperty = new BoolProperty(\r\n        Versions.v1_6,\r\n        \"disabledUnlessAssociatedInputsChange\",\r\n        false\r\n    );\r\n\r\n    @property(SubmitActionBase.dataProperty)\r\n    private _originalData?: PropertyBag;\r\n\r\n    @property(SubmitActionBase.associatedInputsProperty)\r\n    associatedInputs?: \"auto\" | \"none\";\r\n\r\n    @property(SubmitActionBase.disabledUnlessAssociatedInputsChangeProperty)\r\n    disabledUnlessAssociatedInputsChange: boolean = false;\r\n\r\n    //#endregion\r\n\r\n    private _isPrepared: boolean = false;\r\n    private _processedData?: PropertyBag;\r\n    private _areReferencedInputsDirty: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(): Dictionary<Input> {\r\n        const result: Dictionary<Input> = {};\r\n\r\n        if (this.associatedInputs !== \"none\") {\r\n            let current: CardElement | undefined = this.parent;\r\n            let inputs: Input[] = [];\r\n\r\n            while (current) {\r\n                inputs.push(...current.getAllInputs(false));\r\n\r\n                current = current.parent;\r\n            }\r\n\r\n            for (const input of inputs) {\r\n                if (input.id) {\r\n                    result[input.id] = input;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Dictionary<Input> | undefined) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        } else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        if (this._processedData && inputs) {\r\n            for (const key of Object.keys(inputs)) {\r\n                const input = inputs[key];\r\n\r\n                if (input.id && input.isSet()) {\r\n                    this._processedData[input.id] =\r\n                        typeof input.value === \"string\" ? input.value : input.value.toString();\r\n                }\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    protected internalAfterExecute() {\r\n        if (GlobalSettings.resetInputsDirtyStateAfterActionExecution) {\r\n            this.resetReferencedInputsDirtyState();\r\n        }\r\n    }\r\n\r\n    resetReferencedInputsDirtyState() {\r\n        let referencedInputs = this.getReferencedInputs();\r\n\r\n        this._areReferencedInputsDirty = false;\r\n\r\n        if (referencedInputs) {\r\n            for (const key of Object.keys(referencedInputs)) {\r\n                const input = referencedInputs[key];\r\n\r\n                input.resetDirtyState();\r\n            }\r\n        }\r\n    }\r\n\r\n    updateEnabledState() {\r\n        this._areReferencedInputsDirty = false;\r\n\r\n        let referencedInputs = this.getReferencedInputs();\r\n\r\n        if (referencedInputs) {\r\n            for (const key of Object.keys(referencedInputs)) {\r\n                const input = referencedInputs[key];\r\n\r\n                if (input.isDirty()) {\r\n                    this._areReferencedInputsDirty = true;\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.updateCssClasses();\r\n\r\n        if (this._renderedElement) {\r\n            this.setupElementForAccessibility(this._renderedElement);\r\n        }\r\n    }\r\n\r\n    isEffectivelyEnabled(): boolean {\r\n        let result = super.isEffectivelyEnabled();\r\n\r\n        return this.disabledUnlessAssociatedInputsChange\r\n            ? result && this._areReferencedInputsDirty\r\n            : result;\r\n    }\r\n\r\n    get data(): object | undefined {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: object | undefined) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends SubmitActionBase {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.Submit\" = \"Action.Submit\";\r\n\r\n    getJsonTypeName(): string {\r\n        return SubmitAction.JsonTypeName;\r\n    }\r\n}\r\n\r\nexport class ExecuteAction extends SubmitActionBase {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.Execute\" = \"Action.Execute\";\r\n\r\n    //#region Schema\r\n\r\n    static readonly verbProperty = new StringProperty(Versions.v1_4, \"verb\");\r\n\r\n    @property(ExecuteAction.verbProperty)\r\n    verb: string;\r\n\r\n    //#endregion\r\n\r\n    getJsonTypeName(): string {\r\n        return ExecuteAction.JsonTypeName;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    //#region Schema\r\n\r\n    static readonly urlProperty = new StringProperty(Versions.v1_0, \"url\");\r\n\r\n    @property(OpenUrlAction.urlProperty)\r\n    url?: string;\r\n\r\n    //#endregion\r\n\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.OpenUrl\" = \"Action.OpenUrl\";\r\n\r\n    getJsonTypeName(): string {\r\n        return OpenUrlAction.JsonTypeName;\r\n    }\r\n\r\n    getAriaRole(): string {\r\n        return \"link\";\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (!this.url) {\r\n            context.addFailure(\r\n                this,\r\n                Enums.ValidationEvent.PropertyCantBeNull,\r\n                Strings.errors.propertyMustBeSet(\"url\")\r\n            );\r\n        }\r\n    }\r\n\r\n    getHref(): string | undefined {\r\n        return this.url;\r\n    }\r\n}\r\n\r\nexport class ToggleVisibilityAction extends Action {\r\n    //#region Schema\r\n\r\n    static readonly targetElementsProperty = new CustomProperty<PropertyBag>(\r\n        Versions.v1_2,\r\n        \"targetElements\",\r\n        (\r\n            sender: SerializableObject,\r\n            prop: PropertyDefinition,\r\n            source: PropertyBag,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            const result: PropertyBag = {};\r\n\r\n            if (Array.isArray(source[prop.name])) {\r\n                for (const item of source[prop.name]) {\r\n                    if (typeof item === \"string\") {\r\n                        result[item] = undefined;\r\n                    } else if (typeof item === \"object\") {\r\n                        const elementId = item[\"elementId\"];\r\n\r\n                        if (typeof elementId === \"string\") {\r\n                            result[elementId] = Utils.parseBool(item[\"isVisible\"]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n        (\r\n            sender: SerializableObject,\r\n            prop: PropertyDefinition,\r\n            target: PropertyBag,\r\n            value: PropertyBag,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            const targetElements: any[] = [];\r\n\r\n            for (const id of Object.keys(value)) {\r\n                if (typeof value[id] === \"boolean\") {\r\n                    targetElements.push({\r\n                        elementId: id,\r\n                        isVisible: value[id]\r\n                    });\r\n                } else {\r\n                    targetElements.push(id);\r\n                }\r\n            }\r\n\r\n            context.serializeArray(target, prop.name, targetElements);\r\n        },\r\n        {},\r\n        (sender: SerializableObject) => {\r\n            return {};\r\n        }\r\n    );\r\n\r\n    @property(ToggleVisibilityAction.targetElementsProperty)\r\n    targetElements: { [key: string]: any } = {};\r\n\r\n    //#endregion\r\n\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.ToggleVisibility\" = \"Action.ToggleVisibility\";\r\n\r\n    private updateAriaControlsAttribute() {\r\n        // apply aria labels to make it clear which elements this action will toggle\r\n        if (this.targetElements) {\r\n            const elementIds = Object.keys(this.targetElements);\r\n\r\n            if (this._renderedElement) {\r\n                if (elementIds.length > 0) {\r\n                    this._renderedElement.setAttribute(\"aria-controls\", elementIds.join(\" \"));\r\n                } else {\r\n                    this._renderedElement.removeAttribute(\"aria-controls\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (!this.targetElements) {\r\n            context.addFailure(\r\n                this,\r\n                Enums.ValidationEvent.PropertyCantBeNull,\r\n                Strings.errors.propertyMustBeSet(\"targetElements\")\r\n            );\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return ToggleVisibilityAction.JsonTypeName;\r\n    }\r\n\r\n    render() {\r\n        super.render();\r\n\r\n        this.updateAriaControlsAttribute();\r\n    }\r\n\r\n    execute() {\r\n        super.execute();\r\n        if (this.parent) {\r\n            for (const elementId of Object.keys(this.targetElements)) {\r\n                const targetElement = this.parent.getRootElement().getElementById(elementId);\r\n\r\n                if (targetElement) {\r\n                    if (typeof this.targetElements[elementId] === \"boolean\") {\r\n                        targetElement.isVisible = this.targetElements[elementId];\r\n                    } else {\r\n                        targetElement.isVisible = !targetElement.isVisible;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addTargetElement(elementId: string, isVisible: boolean | undefined = undefined) {\r\n        this.targetElements[elementId] = isVisible;\r\n        this.updateAriaControlsAttribute();\r\n    }\r\n\r\n    removeTargetElement(elementId: string) {\r\n        delete this.targetElements[elementId];\r\n        this.updateAriaControlsAttribute();\r\n    }\r\n}\r\n\r\nclass StringWithSubstitutionProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): StringWithSubstitutions {\r\n        const result = new StringWithSubstitutions();\r\n        result.set(Utils.parseString(source[this.name]));\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: StringWithSubstitutions,\r\n        context: BaseSerializationContext\r\n    ): void {\r\n        context.serializeValue(target, this.name, value.getOriginal());\r\n    }\r\n\r\n    constructor(readonly targetVersion: Version, readonly name: string) {\r\n        super(targetVersion, name, undefined, () => {\r\n            return new StringWithSubstitutions();\r\n        });\r\n    }\r\n}\r\n\r\nexport class HttpHeader extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly nameProperty = new StringProperty(Versions.v1_0, \"name\");\r\n    static readonly valueProperty = new StringWithSubstitutionProperty(Versions.v1_0, \"value\");\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"HttpHeader\";\r\n    }\r\n\r\n    @property(HttpHeader.nameProperty)\r\n    name: string;\r\n\r\n    @property(HttpHeader.valueProperty)\r\n    private _value: StringWithSubstitutions;\r\n\r\n    //#endregion\r\n\r\n    constructor(name: string = \"\", value: string = \"\") {\r\n        super();\r\n\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    getReferencedInputs(inputs: Input[], referencedInputs: Dictionary<Input>) {\r\n        this._value.getReferencedInputs(inputs, referencedInputs);\r\n    }\r\n\r\n    prepareForExecution(inputs: Dictionary<Input>) {\r\n        this._value.substituteInputValues(inputs, ContentTypes.applicationXWwwFormUrlencoded);\r\n    }\r\n\r\n    get value(): string | undefined {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string | undefined) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    //#region Schema\r\n\r\n    static readonly urlProperty = new StringWithSubstitutionProperty(Versions.v1_0, \"url\");\r\n    static readonly bodyProperty = new StringWithSubstitutionProperty(Versions.v1_0, \"body\");\r\n    static readonly methodProperty = new StringProperty(Versions.v1_0, \"method\");\r\n    static readonly headersProperty = new SerializableObjectCollectionProperty(\r\n        Versions.v1_0,\r\n        \"headers\",\r\n        HttpHeader\r\n    );\r\n    static readonly ignoreInputValidationProperty = new BoolProperty(\r\n        Versions.v1_3,\r\n        \"ignoreInputValidation\",\r\n        false\r\n    );\r\n\r\n    @property(HttpAction.urlProperty)\r\n    private _url: StringWithSubstitutions;\r\n\r\n    @property(HttpAction.bodyProperty)\r\n    private _body: StringWithSubstitutions;\r\n\r\n    @property(HttpAction.methodProperty)\r\n    method?: string;\r\n\r\n    @property(HttpAction.headersProperty)\r\n    headers: HttpHeader[];\r\n\r\n    @property(HttpAction.ignoreInputValidationProperty)\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    //#endregion\r\n\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.Http\" = \"Action.Http\";\r\n\r\n    protected internalGetReferencedInputs(): Dictionary<Input> {\r\n        const allInputs = this.parent ? this.parent.getRootElement().getAllInputs() : [];\r\n        const result: Dictionary<Input> = {};\r\n\r\n        this._url.getReferencedInputs(allInputs, result);\r\n\r\n        for (const header of this.headers) {\r\n            header.getReferencedInputs(allInputs, result);\r\n        }\r\n\r\n        this._body.getReferencedInputs(allInputs, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Dictionary<Input> | undefined) {\r\n        if (inputs) {\r\n            this._url.substituteInputValues(inputs, ContentTypes.applicationXWwwFormUrlencoded);\r\n\r\n            let contentType = ContentTypes.applicationJson;\r\n\r\n            for (const header of this.headers) {\r\n                header.prepareForExecution(inputs);\r\n\r\n                if (header.name && header.name.toLowerCase() === \"content-type\") {\r\n                    contentType = header.value!;\r\n                }\r\n            }\r\n\r\n            this._body.substituteInputValues(inputs, contentType);\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return HttpAction.JsonTypeName;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (!this.url) {\r\n            context.addFailure(\r\n                this,\r\n                Enums.ValidationEvent.PropertyCantBeNull,\r\n                Strings.errors.propertyMustBeSet(\"url\")\r\n            );\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (const header of this.headers) {\r\n                if (!header.name) {\r\n                    context.addFailure(\r\n                        this,\r\n                        Enums.ValidationEvent.PropertyCantBeNull,\r\n                        Strings.errors.actionHttpHeadersMustHaveNameAndValue()\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get url(): string | undefined {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string | undefined) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string | undefined {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string | undefined) {\r\n        this._body.set(value);\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.ShowCard\" = \"Action.ShowCard\";\r\n\r\n    protected updateCssClasses() {\r\n        super.updateCssClasses();\r\n\r\n        if (this.renderedElement) {\r\n            const effectiveHostConfig = this.parent ? this.parent.hostConfig : defaultHostConfig;\r\n\r\n            this.renderedElement.classList.add(effectiveHostConfig.makeCssClassName(\"expandable\"));\r\n            this.renderedElement.setAttribute(\r\n                \"aria-expanded\",\r\n                (this.state === ActionButtonState.Expanded).toString()\r\n            );\r\n        }\r\n    }\r\n\r\n    protected internalParse(source: any, context: SerializationContext) {\r\n        super.internalParse(source, context);\r\n\r\n        const jsonCard = source[\"card\"];\r\n\r\n        if (jsonCard) {\r\n            this.card.parse(jsonCard, context);\r\n        } else {\r\n            context.logParseEvent(\r\n                this,\r\n                Enums.ValidationEvent.PropertyCantBeNull,\r\n                Strings.errors.showCardMustHaveCard()\r\n            );\r\n        }\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\r\n        super.internalToJSON(target, context);\r\n\r\n        if (this.card) {\r\n            context.serializeValue(target, \"card\", this.card.toJSON(context));\r\n        }\r\n    }\r\n\r\n    protected raiseExecuteActionEvent() {\r\n        if (this.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n            // Only raise the event in Popup mode.\r\n            super.raiseExecuteActionEvent();\r\n        }\r\n    }\r\n\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    releaseDOMResources() {\r\n        super.releaseDOMResources();\r\n\r\n        this.card.releaseDOMResources();\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return ShowCardAction.JsonTypeName;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this.card.internalValidateProperties(context);\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        this.card.setParent(value);\r\n    }\r\n\r\n    getAllInputs(processActions: boolean = true): Input[] {\r\n        return this.card.getAllInputs(processActions);\r\n    }\r\n\r\n    getAllActions(): Action[] {\r\n        const result = super.getAllActions();\r\n\r\n        result.push(...this.card.getAllActions());\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        let result = super.getResourceInformation();\r\n\r\n        result.push(...this.card.getResourceInformation());\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action | undefined {\r\n        let result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass OverflowAction extends Action {\r\n    static readonly JsonTypeName: \"Action.Overflow\" = \"Action.Overflow\";\r\n    private _actions: Action[];\r\n\r\n    constructor(actions: Action[]) {\r\n        super();\r\n        this._actions = actions;\r\n\r\n        this.title = Strings.defaults.overflowButtonText();\r\n    }\r\n\r\n    getActions(): readonly Action[] {\r\n        return this._actions;\r\n    }\r\n\r\n    getAllActions(): Action[] {\r\n        const result = super.getAllActions();\r\n\r\n        result.push(...this._actions);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return ShowCardAction.JsonTypeName;\r\n    }\r\n\r\n    execute() {\r\n        const shouldDisplayPopupMenu = !raiseDisplayOverflowActionMenuEvent(\r\n            this,\r\n            this.renderedElement\r\n        );\r\n\r\n        if (shouldDisplayPopupMenu && this.renderedElement) {\r\n            const contextMenu = new PopupMenu();\r\n            contextMenu.hostConfig = this.hostConfig;\r\n\r\n            for (let i = 0; i < this._actions.length; i++) {\r\n                const menuItem = new MenuItem(i.toString(), this._actions[i].title ?? \"\");\r\n                menuItem.isEnabled = this._actions[i].isEnabled;\r\n                menuItem.onClick = () => {\r\n                    const actionToExecute = this._actions[i];\r\n\r\n                    contextMenu.closePopup(false);\r\n\r\n                    if (actionToExecute.isEnabled) {\r\n                        actionToExecute.execute();\r\n                    }\r\n                };\r\n\r\n                contextMenu.items.add(menuItem);\r\n            }\r\n\r\n            contextMenu.popup(this.renderedElement);\r\n        }\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction?: ShowCardAction;\r\n    private _actionCard?: HTMLElement;\r\n\r\n    private isActionAllowed(action: Action): boolean {\r\n        const forbiddenTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        if (forbiddenTypes) {\r\n            for (const forbiddenType of forbiddenTypes) {\r\n                if (action.constructor === forbiddenType) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private refreshContainer() {\r\n        clearElement(this._actionCardContainer);\r\n\r\n        if (!this._actionCard) {\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            return;\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop =\r\n            this.renderedActionCount > 0\r\n                ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\"\r\n                : \"0px\";\r\n\r\n        const padding = this._owner.getEffectivePadding();\r\n\r\n        this._owner.getImmediateSurroundingPadding(padding);\r\n\r\n        const physicalPadding =\r\n            this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n        if (this._actionCard) {\r\n            this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\r\n            this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n\r\n            if (physicalPadding.bottom !== 0 && !this._owner.isDesignMode()) {\r\n                this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\r\n            }\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n    }\r\n\r\n    private layoutChanged() {\r\n        this._owner.getRootElement().updateLayout();\r\n    }\r\n\r\n    private showActionCard(\r\n        action: ShowCardAction,\r\n        suppressStyle: boolean = false,\r\n        raiseEvent: boolean = true\r\n    ) {\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        // Always re-render a ShowCard action in design mode; reuse already rendered ShowCard (if available) otherwise\r\n        const renderedCard =\r\n            action.card.renderedElement && !this._owner.isDesignMode()\r\n                ? action.card.renderedElement\r\n                : action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    }\r\n\r\n    private collapseExpandedAction() {\r\n        for (const action of this._renderedActions) {\r\n            action.state = ActionButtonState.Normal;\r\n        }\r\n\r\n        const previouslyExpandedAction = this._expandedAction;\r\n\r\n        this._expandedAction = undefined;\r\n        this._actionCard = undefined;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    }\r\n\r\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\r\n        let afterSelectedAction = false;\r\n\r\n        for (const renderedAction of this._renderedActions) {\r\n            // Remove actions after selected action from tabOrder if the actions are oriented horizontally, to skip focus directly to expanded card\r\n            if (\r\n                this._owner.hostConfig.actions.actionsOrientation == Enums.Orientation.Horizontal &&\r\n                afterSelectedAction\r\n            ) {\r\n                renderedAction.isFocusable = false;\r\n            }\r\n\r\n            if (renderedAction !== action) {\r\n                renderedAction.state = ActionButtonState.Subdued;\r\n            } else {\r\n                renderedAction.state = ActionButtonState.Expanded;\r\n\r\n                afterSelectedAction = true;\r\n\r\n                if (renderedAction.renderedElement) {\r\n                    renderedAction.renderedElement.onblur = (_e) => {\r\n                        for (const ra of this._renderedActions) {\r\n                            ra.isFocusable = true;\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        this.showActionCard(\r\n            action,\r\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\r\n            raiseEvent\r\n        );\r\n    }\r\n\r\n    private _items: Action[] = [];\r\n    private _overflowAction?: OverflowAction;\r\n    private _renderedActions: Action[] = [];\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    releaseDOMResources() {\r\n        for (let action of this._renderedActions) {\r\n            action.releaseDOMResources();\r\n        }\r\n    }\r\n\r\n    actionExecuted(action: Action) {\r\n        if (!(action instanceof ShowCardAction)) {\r\n            this.collapseExpandedAction();\r\n        } else {\r\n            if (action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            } else if (\r\n                this._owner.hostConfig.actions.showCard.actionMode ===\r\n                Enums.ShowCardActionMode.Inline\r\n            ) {\r\n                this.expandShowCardAction(action, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(source: any, context: SerializationContext) {\r\n        this.clear();\r\n\r\n        if (Array.isArray(source)) {\r\n            for (const jsonAction of source) {\r\n                let forbiddenActions: string[] = [];\r\n\r\n                // If the action owner is a ContainerWithActions, we should check for forbidden actions\r\n                if (this._owner instanceof ContainerWithActions) {\r\n                    forbiddenActions = this._owner.getForbiddenActionNames();\r\n                }\r\n\r\n                const action = context.parseAction(\r\n                    this._owner,\r\n                    jsonAction,\r\n                    forbiddenActions,\r\n                    !this._owner.isDesignMode()\r\n                );\r\n\r\n                if (action) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON(target: PropertyBag, propertyName: string, context: SerializationContext): any {\r\n        context.serializeArray(target, propertyName, this._items);\r\n    }\r\n\r\n    getActionAt(id: number): Action | undefined {\r\n        return this._items[id];\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getActionById(id: string): Action | undefined {\r\n        let result: Action | undefined = undefined;\r\n\r\n        for (const item of this._items) {\r\n            result = item.getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(context: ValidationResults) {\r\n        if (\r\n            this._owner.hostConfig.actions.maxActions &&\r\n            this._items.length > this._owner.hostConfig.actions.maxActions\r\n        ) {\r\n            context.addFailure(\r\n                this._owner,\r\n                Enums.ValidationEvent.TooManyActions,\r\n                Strings.errors.tooManyActions(this._owner.hostConfig.actions.maxActions)\r\n            );\r\n        }\r\n\r\n        if (this._items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            context.addFailure(\r\n                this._owner,\r\n                Enums.ValidationEvent.InteractivityNotAllowed,\r\n                Strings.errors.interactivityNotAllowed()\r\n            );\r\n        }\r\n\r\n        for (const item of this._items) {\r\n            if (!this.isActionAllowed(item)) {\r\n                context.addFailure(\r\n                    this._owner,\r\n                    Enums.ValidationEvent.ActionTypeNotAllowed,\r\n                    Strings.errors.actionTypeNotAllowed(item.getJsonTypeName())\r\n                );\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(orientation: Enums.Orientation): HTMLElement | undefined {\r\n        // Cache hostConfig for better perf\r\n        const hostConfig = this._owner.hostConfig;\r\n\r\n        if (!hostConfig.supportsInteractivity) {\r\n            return undefined;\r\n        }\r\n\r\n        const element = document.createElement(\"div\");\r\n        const maxActions = hostConfig.actions.maxActions\r\n            ? Math.min(hostConfig.actions.maxActions, this._items.length)\r\n            : this._items.length;\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActions = [];\r\n\r\n        if (\r\n            hostConfig.actions.preExpandSingleShowCardAction &&\r\n            maxActions === 1 &&\r\n            this._items[0] instanceof ShowCardAction &&\r\n            this.isActionAllowed(this._items[0])\r\n        ) {\r\n            this.showActionCard(this._items[0], true);\r\n            this._renderedActions.push(this._items[0]);\r\n        } else {\r\n            const buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation === Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (\r\n                    this._owner.horizontalAlignment &&\r\n                    hostConfig.actions.actionAlignment !== Enums.ActionAlignment.Stretch\r\n                ) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                } else {\r\n                    switch (hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (\r\n                    this._owner.horizontalAlignment &&\r\n                    hostConfig.actions.actionAlignment !== Enums.ActionAlignment.Stretch\r\n                ) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                } else {\r\n                    switch (hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const allowedActions = this._items.filter(this.isActionAllowed.bind(this));\r\n\r\n            let primaryActions: Action[] = [];\r\n            const secondaryActions: Action[] = [];\r\n\r\n            if (!this._owner.isDesignMode()) {\r\n                allowedActions.forEach((action) =>\r\n                    action.mode === Enums.ActionMode.Secondary\r\n                        ? secondaryActions.push(action)\r\n                        : primaryActions.push(action)\r\n                );\r\n\r\n                // If primaryActions.length > maxActions, extra actions are moved to overflow\r\n                const overflowPrimaryActions = primaryActions.splice(hostConfig.actions.maxActions);\r\n\r\n                if (GlobalSettings.allowMoreThanMaxActionsInOverflowMenu) {\r\n                    secondaryActions.push(...overflowPrimaryActions);\r\n                }\r\n\r\n                let shouldRenderOverflowActionButton = true;\r\n\r\n                if (secondaryActions.length > 0) {\r\n                    if (!this._overflowAction) {\r\n                        this._overflowAction = new OverflowAction(secondaryActions);\r\n                        this._overflowAction.setParent(this._owner);\r\n                        this._overflowAction[\"_actionCollection\"] = this;\r\n                    }\r\n\r\n                    const isRootAction = this._owner instanceof AdaptiveCard && !this._owner.parent;\r\n                    shouldRenderOverflowActionButton = !raiseRenderOverflowActionsEvent(\r\n                        this._overflowAction,\r\n                        isRootAction\r\n                    );\r\n                }\r\n\r\n                if (this._overflowAction && shouldRenderOverflowActionButton) {\r\n                    primaryActions.push(this._overflowAction);\r\n                }\r\n            } else {\r\n                primaryActions = allowedActions;\r\n            }\r\n\r\n            for (let i = 0; i < primaryActions.length; i++) {\r\n                const action = primaryActions[i];\r\n                action.render();\r\n\r\n                if (action.renderedElement) {\r\n                    if (\r\n                        hostConfig.actions.actionsOrientation === Enums.Orientation.Horizontal &&\r\n                        hostConfig.actions.actionAlignment === Enums.ActionAlignment.Stretch\r\n                    ) {\r\n                        action.renderedElement.style.flex = \"0 1 100%\";\r\n                    } else {\r\n                        action.renderedElement.style.flex = \"0 1 auto\";\r\n                    }\r\n\r\n                    buttonStrip.appendChild(action.renderedElement);\r\n\r\n                    this._renderedActions.push(action);\r\n\r\n                    if (i < primaryActions.length - 1 && hostConfig.actions.buttonSpacing > 0) {\r\n                        const spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = hostConfig.actions.buttonSpacing + \"px\";\r\n                        } else {\r\n                            spacer.style.height = hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        for (const renderedAction of this._renderedActions) {\r\n            if (renderedAction.state === ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(<ShowCardAction>renderedAction, false);\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this._renderedActions.length > 0 ? element : undefined;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (!action) {\r\n            throw new Error(\"The action parameter cannot be null.\");\r\n        }\r\n\r\n        if ((!action.parent || action.parent === this._owner) && this._items.indexOf(action) < 0) {\r\n            this._items.push(action);\r\n\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n\r\n            action[\"_actionCollection\"] = this;\r\n        } else {\r\n            throw new Error(Strings.errors.actionAlreadyParented());\r\n        }\r\n    }\r\n\r\n    removeAction(action: Action): boolean {\r\n        if (this.expandedAction && this._expandedAction === action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n\r\n        const actionIndex = this._items.indexOf(action);\r\n\r\n        if (actionIndex >= 0) {\r\n            this._items.splice(actionIndex, 1);\r\n\r\n            action.setParent(undefined);\r\n\r\n            action[\"_actionCollection\"] = undefined;\r\n\r\n            for (let i = 0; i < this._renderedActions.length; i++) {\r\n                if (this._renderedActions[i] === action) {\r\n                    this._renderedActions.splice(i, 1);\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n        this._renderedActions = [];\r\n        this._expandedAction = undefined;\r\n    }\r\n\r\n    getAllInputs(processActions: boolean = true): Input[] {\r\n        let result: Input[] = [];\r\n\r\n        if (processActions) {\r\n            for (const action of this._items) {\r\n                result.push(...action.getAllInputs());\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        let result: IResourceInformation[] = [];\r\n\r\n        for (const action of this._items) {\r\n            result.push(...action.getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get renderedActionCount(): number {\r\n        return this._renderedActions.length;\r\n    }\r\n\r\n    get expandedAction(): ShowCardAction | undefined {\r\n        return this._expandedAction;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    //#region Schema\r\n\r\n    static readonly orientationProperty = new EnumProperty(\r\n        Versions.v1_1,\r\n        \"orientation\",\r\n        Enums.Orientation\r\n    );\r\n\r\n    @property(ActionSet.orientationProperty)\r\n    orientation?: Enums.Orientation;\r\n\r\n    //#endregion\r\n\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalParse(source: any, context: SerializationContext) {\r\n        super.internalParse(source, context);\r\n\r\n        this._actionCollection.parse(source[\"actions\"], context);\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\r\n        super.internalToJSON(target, context);\r\n\r\n        this._actionCollection.toJSON(target, \"actions\", context);\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        return this._actionCollection.render(\r\n            this.orientation !== undefined\r\n                ? this.orientation\r\n                : this.hostConfig.actions.actionsOrientation\r\n        );\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    releaseDOMResources() {\r\n        super.releaseDOMResources();\r\n\r\n        this._actionCollection.releaseDOMResources();\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount === 0) {\r\n            return super.isBleedingAtBottom();\r\n        } else {\r\n            if (this._actionCollection.getActionCount() === 1) {\r\n                return (\r\n                    this._actionCollection.expandedAction !== undefined &&\r\n                    !this.hostConfig.actions.preExpandSingleShowCardAction\r\n                );\r\n            } else {\r\n                return this._actionCollection.expandedAction !== undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.getActionCount();\r\n    }\r\n\r\n    getActionAt(index: number): Action | undefined {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.getActionAt(index);\r\n        } else {\r\n            return super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action | undefined {\r\n        const result: Action | undefined = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    getAllActions(): Action[] {\r\n        const result = super.getAllActions();\r\n\r\n        for (let i = 0; i < this.getActionCount(); i++) {\r\n            let action = this.getActionAt(i);\r\n\r\n            if (action) {\r\n                result.push(action);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this._actionCollection.validateProperties(context);\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    getAllInputs(processActions: boolean = true): Input[] {\r\n        return processActions ? this._actionCollection.getAllInputs() : [];\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        return this._actionCollection.getResourceInformation();\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    findDOMNodeOwner(node: Node): CardObject | undefined {\r\n        let target: CardObject | undefined = undefined;\r\n\r\n        for (let i = 0; i < this.getActionCount(); i++) {\r\n            const action = this.getActionAt(i);\r\n\r\n            if (action) {\r\n                // recur through each Action\r\n                target = action.findDOMNodeOwner(node);\r\n\r\n                if (target) {\r\n                    return target;\r\n                }\r\n            }\r\n        }\r\n\r\n        // if not found in any Action, defer to parent implementation\r\n        return super.findDOMNodeOwner(node);\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class ContainerStyleProperty extends ValueSetProperty {\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly defaultValue?: string,\r\n        readonly onGetInitialValue?: (sender: SerializableObject) => string\r\n    ) {\r\n        super(\r\n            targetVersion,\r\n            name,\r\n            [\r\n                { value: Enums.ContainerStyle.Default },\r\n                { value: Enums.ContainerStyle.Emphasis },\r\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Accent },\r\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Good },\r\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Attention },\r\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Warning }\r\n            ],\r\n            defaultValue,\r\n            onGetInitialValue\r\n        );\r\n    }\r\n}\r\n\r\nexport abstract class StylableCardElementContainer extends CardElementContainer {\r\n    //#region Schema\r\n\r\n    static readonly styleProperty = new ContainerStyleProperty(Versions.v1_0, \"style\");\r\n\r\n    @property(StylableCardElementContainer.styleProperty)\r\n    get style(): string | undefined {\r\n        if (this.allowCustomStyle) {\r\n            const style = this.getValue(StylableCardElementContainer.styleProperty);\r\n\r\n            if (style && this.hostConfig.containerStyles.getStyleByName(style)) {\r\n                return style;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    set style(value: string | undefined) {\r\n        this.setValue(StylableCardElementContainer.styleProperty, value);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get hasExplicitStyle(): boolean {\r\n        return this.getValue(StylableCardElementContainer.styleProperty) !== undefined;\r\n    }\r\n\r\n    protected applyBorder() {\r\n        // No border in base implementation\r\n    }\r\n\r\n    protected applyBackground() {\r\n        if (this.renderedElement) {\r\n            const styleDefinition = this.hostConfig.containerStyles.getStyleByName(\r\n                this.style,\r\n                this.hostConfig.containerStyles.getStyleByName(this.defaultStyle)\r\n            );\r\n\r\n            if (styleDefinition.backgroundColor) {\r\n                const bgColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n                if (bgColor) {\r\n                    this.renderedElement.style.backgroundColor = bgColor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(\r\n                this.getEffectivePadding()\r\n            );\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        if (this.isBleeding()) {\r\n            // Bleed into the first parent that does have padding\r\n            const padding = new PaddingDefinition();\r\n\r\n            this.getImmediateSurroundingPadding(padding);\r\n\r\n            const surroundingPadding =\r\n                this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n            this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n\r\n            if (!this.isDesignMode()) {\r\n                this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\r\n            }\r\n\r\n            if (\r\n                this.separatorElement &&\r\n                this.separatorOrientation === Enums.Orientation.Horizontal\r\n            ) {\r\n                this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            }\r\n        } else {\r\n            this.renderedElement.style.marginRight = \"0\";\r\n            this.renderedElement.style.marginLeft = \"0\";\r\n            this.renderedElement.style.marginTop = \"0\";\r\n            this.renderedElement.style.marginBottom = \"0\";\r\n\r\n            if (\r\n                this.separatorElement &&\r\n                this.separatorOrientation === Enums.Orientation.Horizontal\r\n            ) {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(ignoreBackgroundImages: boolean = false): boolean {\r\n        let currentElement: CardElement | undefined = this.parent;\r\n\r\n        while (currentElement) {\r\n            let currentElementHasBackgroundImage: boolean = false;\r\n\r\n            if (ignoreBackgroundImages) {\r\n                currentElementHasBackgroundImage = false;\r\n            } else {\r\n                currentElementHasBackgroundImage =\r\n                    currentElement instanceof Container\r\n                        ? currentElement.backgroundImage.isValid()\r\n                        : false;\r\n            }\r\n\r\n            if (currentElement instanceof StylableCardElementContainer) {\r\n                if (\r\n                    this.hasExplicitStyle &&\r\n                    (currentElement.getEffectiveStyle() !== this.getEffectiveStyle() ||\r\n                        currentElementHasBackgroundImage)\r\n                ) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected getDefaultPadding(): PaddingDefinition {\r\n        return this.getHasBackground() || this.getHasBorder()\r\n            ? new PaddingDefinition(\r\n                  Enums.Spacing.Padding,\r\n                  Enums.Spacing.Padding,\r\n                  Enums.Spacing.Padding,\r\n                  Enums.Spacing.Padding\r\n              )\r\n            : super.getDefaultPadding();\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        const explicitStyle = this.getValue(StylableCardElementContainer.styleProperty);\r\n\r\n        if (explicitStyle !== undefined) {\r\n            const styleDefinition = this.hostConfig.containerStyles.getStyleByName(explicitStyle);\r\n\r\n            if (!styleDefinition) {\r\n                context.addFailure(\r\n                    this,\r\n                    Enums.ValidationEvent.InvalidPropertyValue,\r\n                    Strings.errors.invalidPropertyValue(explicitStyle, \"style\")\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): HTMLElement | undefined {\r\n        const renderedElement = super.render();\r\n\r\n        if (renderedElement && this.getHasBackground()) {\r\n            this.applyBackground();\r\n        }\r\n\r\n        this.applyBorder();\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        const effectiveStyle = this.style;\r\n\r\n        return effectiveStyle ? effectiveStyle : super.getEffectiveStyle();\r\n    }\r\n}\r\n\r\nexport abstract class ContainerBase extends StylableCardElementContainer {\r\n    //#region Schema\r\n\r\n    static readonly bleedProperty = new BoolProperty(Versions.v1_2, \"bleed\", false);\r\n    static readonly minHeightProperty = new PixelSizeProperty(Versions.v1_2, \"minHeight\");\r\n\r\n    @property(ContainerBase.bleedProperty)\r\n    private _bleed: boolean = false;\r\n\r\n    @property(ContainerBase.minHeightProperty)\r\n    minPixelHeight?: number;\r\n\r\n    //#endregion\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        super.adjustRenderedElementSize(renderedElement);\r\n\r\n        if (this.minPixelHeight) {\r\n            renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n        }\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getBleed(): boolean {\r\n        return this._bleed;\r\n    }\r\n\r\n    protected setBleed(value: boolean) {\r\n        this._bleed = value;\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed();\r\n    }\r\n}\r\n\r\nexport class BackgroundImage extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly urlProperty = new StringProperty(Versions.v1_0, \"url\");\r\n    static readonly fillModeProperty = new EnumProperty(\r\n        Versions.v1_2,\r\n        \"fillMode\",\r\n        Enums.FillMode,\r\n        Enums.FillMode.Cover\r\n    );\r\n    static readonly horizontalAlignmentProperty = new EnumProperty(\r\n        Versions.v1_2,\r\n        \"horizontalAlignment\",\r\n        Enums.HorizontalAlignment,\r\n        Enums.HorizontalAlignment.Left\r\n    );\r\n    static readonly verticalAlignmentProperty = new EnumProperty(\r\n        Versions.v1_2,\r\n        \"verticalAlignment\",\r\n        Enums.VerticalAlignment,\r\n        Enums.VerticalAlignment.Top\r\n    );\r\n\r\n    @property(BackgroundImage.urlProperty)\r\n    url?: string;\r\n\r\n    @property(BackgroundImage.fillModeProperty)\r\n    fillMode: Enums.FillMode;\r\n\r\n    @property(BackgroundImage.horizontalAlignmentProperty)\r\n    horizontalAlignment: Enums.HorizontalAlignment;\r\n\r\n    @property(BackgroundImage.verticalAlignmentProperty)\r\n    verticalAlignment: Enums.VerticalAlignment;\r\n\r\n    //#endregion\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"BackgroundImage\";\r\n    }\r\n\r\n    protected internalParse(source: any, context: BaseSerializationContext) {\r\n        if (typeof source === \"string\") {\r\n            this.resetDefaultValues();\r\n            this.url = source;\r\n        } else {\r\n            return super.internalParse(source, context);\r\n        }\r\n    }\r\n\r\n    apply(element: CardElement) {\r\n        if (this.url && element.renderedElement) {\r\n            element.renderedElement.style.backgroundImage =\r\n                \"url('\" +\r\n                element.preProcessPropertyValue(BackgroundImage.urlProperty, this.url) +\r\n                \"')\";\r\n\r\n            switch (this.fillMode) {\r\n                case Enums.FillMode.Repeat:\r\n                    element.renderedElement.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.FillMode.RepeatHorizontally:\r\n                    element.renderedElement.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.FillMode.RepeatVertically:\r\n                    element.renderedElement.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.FillMode.Cover:\r\n                default:\r\n                    element.renderedElement.style.backgroundRepeat = \"no-repeat\";\r\n                    element.renderedElement.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Left:\r\n                    break;\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.renderedElement.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.renderedElement.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Top:\r\n                    break;\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.renderedElement.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.renderedElement.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return this.url ? true : false;\r\n    }\r\n}\r\n\r\nexport class Container extends ContainerBase {\r\n    //#region Schema\r\n    static readonly backgroundImageProperty = new SerializableObjectProperty(\r\n        Versions.v1_0,\r\n        \"backgroundImage\",\r\n        BackgroundImage\r\n    );\r\n    static readonly verticalContentAlignmentProperty = new EnumProperty(\r\n        Versions.v1_1,\r\n        \"verticalContentAlignment\",\r\n        Enums.VerticalAlignment\r\n    );\r\n    static readonly rtlProperty = new BoolProperty(Versions.v1_0, \"rtl\");\r\n\r\n    @property(Container.backgroundImageProperty)\r\n    get backgroundImage(): BackgroundImage {\r\n        return this.getValue(Container.backgroundImageProperty);\r\n    }\r\n\r\n    @property(Container.verticalContentAlignmentProperty)\r\n    verticalContentAlignment?: Enums.VerticalAlignment;\r\n\r\n    @property(Container.rtlProperty)\r\n    rtl?: boolean;\r\n\r\n    //#endregion\r\n\r\n    private _items: CardElement[] = [];\r\n    private _renderedItems: CardElement[] = [];\r\n\r\n    protected insertItemAt(item: CardElement, index: number, forceInsert: boolean) {\r\n        if (!item.parent || forceInsert) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                } else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n\r\n                item.setParent(this);\r\n            } else {\r\n                throw new Error(Strings.errors.elementTypeNotStandalone(item.getJsonTypeName()));\r\n            }\r\n        } else {\r\n            throw new Error(Strings.errors.elementAlreadyParented());\r\n        }\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"items\";\r\n    }\r\n\r\n    protected applyBackground() {\r\n        if (this.backgroundImage.isValid() && this.renderedElement) {\r\n            this.backgroundImage.apply(this);\r\n        }\r\n\r\n        super.applyBackground();\r\n    }\r\n\r\n    protected applyRTL(element: HTMLElement) {\r\n        if (this.rtl !== undefined) {\r\n            element.dir = this.rtl ? \"rtl\" : \"ltr\";\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        this._renderedItems = [];\r\n\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        const hostConfig = this.hostConfig;\r\n\r\n        const element = document.createElement(\"div\");\r\n\r\n        this.applyRTL(element);\r\n\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        if (GlobalSettings.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = \"-webkit-min-content\";\r\n        }\r\n\r\n        switch (this.getEffectiveVerticalContentAlignment()) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            for (const item of this._items) {\r\n                const renderedItem = this.isElementAllowed(item) ? item.render() : undefined;\r\n\r\n                if (renderedItem) {\r\n                    if (this._renderedItems.length > 0 && item.separatorElement) {\r\n                        item.separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, item.separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedItem);\r\n\r\n                    this._renderedItems.push(item);\r\n                }\r\n            }\r\n        } else {\r\n            if (this.isDesignMode()) {\r\n                const placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (this.renderedElement) {\r\n            // Add 1 to account for rounding differences between browsers\r\n            const boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n\r\n            const handleElement = (cardElement: CardElement) => {\r\n                const elt = cardElement.renderedElement;\r\n\r\n                if (elt) {\r\n                    switch (Utils.getFitStatus(elt, boundary)) {\r\n                        case Enums.ContainerFitStatus.FullyInContainer:\r\n                            const sizeChanged = cardElement[\"resetOverflow\"]();\r\n                            // If the element's size changed after resetting content,\r\n                            // we have to check if it still fits fully in the card\r\n                            if (sizeChanged) {\r\n                                handleElement(cardElement);\r\n                            }\r\n                            break;\r\n                        case Enums.ContainerFitStatus.Overflowing:\r\n                            const containerMaxHeight = boundary - elt.offsetTop;\r\n                            cardElement[\"handleOverflow\"](containerMaxHeight);\r\n                            break;\r\n                        case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                            cardElement[\"handleOverflow\"](0);\r\n                            break;\r\n                    }\r\n                }\r\n            };\r\n\r\n            for (const item of this._items) {\r\n                handleElement(item);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (const item of this._items) {\r\n            item[\"resetOverflow\"]();\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(ignoreBackgroundImages: boolean = false): boolean {\r\n        let result = ignoreBackgroundImages ? false : this.backgroundImage.isValid();\r\n\r\n        return result || super.getHasBackground(ignoreBackgroundImages);\r\n    }\r\n\r\n    protected canHostSingletons() {\r\n        return false;\r\n    }\r\n\r\n    protected internalParse(source: any, context: SerializationContext) {\r\n        super.internalParse(source, context);\r\n\r\n        this.clear();\r\n        this.setShouldFallback(false);\r\n\r\n        let jsonItems = source[this.getItemsCollectionPropertyName()];\r\n\r\n        if (\r\n            !Array.isArray(jsonItems) &&\r\n            typeof jsonItems === \"object\" &&\r\n            this.canHostSingletons()\r\n        ) {\r\n            const typeName = Utils.parseString(jsonItems[\"type\"]);\r\n            if (typeName) {\r\n                const registration = context.elementRegistry.findByName(typeName);\r\n                if (registration?.singletonBehavior !== ElementSingletonBehavior.NotAllowed) {\r\n                    const element = context.parseElement(\r\n                        this,\r\n                        jsonItems,\r\n                        [],\r\n                        !this.isDesignMode(),\r\n                        true\r\n                    );\r\n\r\n                    if (element) {\r\n                        this.insertItemAt(element, -1, true);\r\n                    }\r\n                }\r\n            }\r\n        } else if (Array.isArray(jsonItems)) {\r\n            for (const item of jsonItems) {\r\n                const element = context.parseElement(\r\n                    this,\r\n                    item,\r\n                    this.forbiddenChildElements(),\r\n                    !this.isDesignMode()\r\n                );\r\n\r\n                if (element) {\r\n                    this.insertItemAt(element, -1, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\r\n        super.internalToJSON(target, context);\r\n\r\n        const collectionPropertyName = this.getItemsCollectionPropertyName();\r\n\r\n        if (\r\n            this._items.length === 1 &&\r\n            this._items[0].getElementSingletonBehavior() === ElementSingletonBehavior.Only\r\n        ) {\r\n            // If the element is only allowed in a singleton context, parse it to an object instead of an array\r\n            context.serializeValue(target, collectionPropertyName, this._items[0].toJSON(context));\r\n        } else {\r\n            context.serializeArray(target, collectionPropertyName, this._items);\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    getEffectivePadding(): PaddingDefinition {\r\n        if (\r\n            GlobalSettings.removePaddingFromContainersWithBackgroundImage &&\r\n            !this.getHasBackground(true)\r\n        ) {\r\n            return new PaddingDefinition();\r\n        }\r\n\r\n        return super.getEffectivePadding();\r\n    }\r\n\r\n    getEffectiveVerticalContentAlignment(): Enums.VerticalAlignment {\r\n        if (this.verticalContentAlignment !== undefined) {\r\n            return this.verticalContentAlignment;\r\n        }\r\n\r\n        const parentContainer = this.getParentContainer();\r\n\r\n        return parentContainer\r\n            ? parentContainer.getEffectiveVerticalContentAlignment()\r\n            : Enums.VerticalAlignment.Top;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._items[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement | undefined {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (const item of this._renderedItems) {\r\n                if (item.isVisible) {\r\n                    return item;\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement | undefined {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let i = this._renderedItems.length - 1; i >= 0; i--) {\r\n                if (this._renderedItems[i].isVisible) {\r\n                    return this._renderedItems[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        const designMode = this.isDesignMode();\r\n\r\n        for (const item of this._items) {\r\n            if (item.isVisible || designMode) {\r\n                return item === element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        const designMode = this.isDesignMode();\r\n\r\n        for (let i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] === element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isRtl(): boolean {\r\n        if (this.rtl !== undefined) {\r\n            return this.rtl;\r\n        } else {\r\n            const parentContainer = this.getParentContainer();\r\n\r\n            return parentContainer ? parentContainer.isRtl() : false;\r\n        }\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        const firstRenderedItem = this.getFirstVisibleRenderedItem();\r\n\r\n        return (\r\n            this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false)\r\n        );\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        const lastRenderedItem = this.getLastVisibleRenderedItem();\r\n\r\n        return (\r\n            this.isBleeding() ||\r\n            (lastRenderedItem\r\n                ? lastRenderedItem.isBleedingAtBottom() &&\r\n                  lastRenderedItem.getEffectiveStyle() === this.getEffectiveStyle()\r\n                : false)\r\n        );\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return this._items.indexOf(cardElement);\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        this.insertItemAt(item, -1, false);\r\n    }\r\n\r\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore), false);\r\n    }\r\n\r\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        const itemIndex = this._items.indexOf(item);\r\n\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n\r\n            item.setParent(undefined);\r\n\r\n            this.updateLayout();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        const result = super.getResourceInformation();\r\n\r\n        if (this.backgroundImage.isValid()) {\r\n            result.push({\r\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion -- validated by `isValid()`\r\n                url: this.backgroundImage.url!,\r\n                mimeType: \"image\"\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action | undefined {\r\n        let result: Action | undefined = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (const item of this._items) {\r\n                    result = item.getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get padding(): PaddingDefinition | undefined {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: PaddingDefinition | undefined) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action | undefined {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action | undefined) {\r\n        this._selectAction = value;\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n}\r\n\r\nexport type ColumnWidth = SizeAndUnit | \"auto\" | \"stretch\";\r\n\r\nexport class Column extends Container {\r\n    //#region Schema\r\n\r\n    static readonly widthProperty = new CustomProperty<ColumnWidth>(\r\n        Versions.v1_0,\r\n        \"width\",\r\n        (\r\n            sender: SerializableObject,\r\n            prop: PropertyDefinition,\r\n            source: PropertyBag,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            let result: ColumnWidth = prop.defaultValue;\r\n            const value = source[prop.name];\r\n            let invalidWidth = false;\r\n\r\n            if (typeof value === \"number\" && !isNaN(value)) {\r\n                result = new SizeAndUnit(value, Enums.SizeUnit.Weight);\r\n            } else if (value === \"auto\" || value === \"stretch\") {\r\n                result = value;\r\n            } else if (typeof value === \"string\") {\r\n                try {\r\n                    result = SizeAndUnit.parse(value);\r\n\r\n                    if (\r\n                        result.unit === Enums.SizeUnit.Pixel &&\r\n                        prop.targetVersion.compareTo(context.targetVersion) > 0\r\n                    ) {\r\n                        invalidWidth = true;\r\n                    }\r\n                } catch (e) {\r\n                    invalidWidth = true;\r\n                }\r\n            } else {\r\n                invalidWidth = true;\r\n            }\r\n\r\n            if (invalidWidth) {\r\n                context.logParseEvent(\r\n                    sender,\r\n                    Enums.ValidationEvent.InvalidPropertyValue,\r\n                    Strings.errors.invalidColumnWidth(value)\r\n                );\r\n\r\n                result = \"auto\";\r\n            }\r\n\r\n            return result;\r\n        },\r\n        (\r\n            sender: SerializableObject,\r\n            property: PropertyDefinition,\r\n            target: PropertyBag,\r\n            value: ColumnWidth,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            if (value instanceof SizeAndUnit) {\r\n                if (value.unit === Enums.SizeUnit.Pixel) {\r\n                    context.serializeValue(target, \"width\", value.physicalSize + \"px\");\r\n                } else {\r\n                    context.serializeNumber(target, \"width\", value.physicalSize);\r\n                }\r\n            } else {\r\n                context.serializeValue(target, \"width\", value);\r\n            }\r\n        },\r\n        \"stretch\"\r\n    );\r\n\r\n    @property(Column.widthProperty)\r\n    width: ColumnWidth = \"stretch\";\r\n\r\n    //#endregion\r\n\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        const minDesignTimeColumnHeight = 20;\r\n\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight =\r\n                (!this.minPixelHeight\r\n                    ? minDesignTimeColumnHeight\r\n                    : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\r\n        } else {\r\n            renderedElement.style.minWidth = \"0\";\r\n\r\n            if (this.minPixelHeight) {\r\n                renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n            }\r\n        }\r\n\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        } else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        } else if (this.width instanceof SizeAndUnit) {\r\n            if (this.width.unit === Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 auto\";\r\n                renderedElement.style.width = this.width.physicalSize + \"px\";\r\n            } else {\r\n                renderedElement.style.flex =\r\n                    \"1 1 \" +\r\n                    (this._computedWeight > 0 ? this._computedWeight : this.width.physicalSize) +\r\n                    \"%\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected shouldSerialize(_context: SerializationContext): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    constructor(width: ColumnWidth = \"stretch\") {\r\n        super();\r\n\r\n        this.width = width;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.parent instanceof ColumnSet) {\r\n            return this.separatorElement !== undefined && !this.parent.isLeftMostElement(this);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends ContainerBase {\r\n    private _columns: Column[] = [];\r\n    private _renderedColumns: Column[];\r\n\r\n    private createColumnInstance(source: any, context: SerializationContext): Column | undefined {\r\n        return context.parseCardObject<Column>(\r\n            this,\r\n            source,\r\n            [],\r\n            !this.isDesignMode(),\r\n            (typeName: string) => {\r\n                return !typeName || typeName === \"Column\" ? new Column() : undefined;\r\n            },\r\n            (typeName: string, _errorType: Enums.TypeErrorType) => {\r\n                context.logParseEvent(\r\n                    undefined,\r\n                    Enums.ValidationEvent.ElementTypeNotAllowed,\r\n                    Strings.errors.elementTypeNotAllowed(typeName)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        this._renderedColumns = [];\r\n\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            const hostConfig = this.hostConfig;\r\n\r\n            const element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n\r\n            if (GlobalSettings.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = \"-webkit-min-content\";\r\n            }\r\n\r\n            switch (this.getEffectiveHorizontalAlignment()) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            let totalWeight: number = 0;\r\n\r\n            for (const column of this._columns) {\r\n                if (\r\n                    column.width instanceof SizeAndUnit &&\r\n                    column.width.unit === Enums.SizeUnit.Weight\r\n                ) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n\r\n            for (const column of this._columns) {\r\n                if (\r\n                    column.width instanceof SizeAndUnit &&\r\n                    column.width.unit === Enums.SizeUnit.Weight &&\r\n                    totalWeight > 0\r\n                ) {\r\n                    const computedWeight = (100 / totalWeight) * column.width.physicalSize;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                const renderedColumn = column.render();\r\n\r\n                if (renderedColumn) {\r\n                    if (this._renderedColumns.length > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    this._renderedColumns.push(column);\r\n                }\r\n            }\r\n\r\n            return this._renderedColumns.length > 0 ? element : undefined;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        for (const column of this._columns) {\r\n            column[\"handleOverflow\"](maxHeight);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (const column of this._columns) {\r\n            column[\"resetOverflow\"]();\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected internalParse(source: any, context: SerializationContext) {\r\n        super.internalParse(source, context);\r\n\r\n        this._columns = [];\r\n        this._renderedColumns = [];\r\n\r\n        const jsonColumns = source[\"columns\"];\r\n\r\n        if (Array.isArray(jsonColumns)) {\r\n            for (const item of jsonColumns) {\r\n                const column = this.createColumnInstance(item, context);\r\n\r\n                if (column) {\r\n                    this._columns.push(column);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\r\n        super.internalToJSON(target, context);\r\n\r\n        context.serializeArray(target, \"columns\", this._columns);\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (const column of this._columns) {\r\n            if (column.isVisible) {\r\n                return column === element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (const column of this._columns) {\r\n                if (column.isBleedingAtTop()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (const column of this._columns) {\r\n                if (column.isBleedingAtBottom()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._columns.length;\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement | undefined {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[0];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement | undefined {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[this._renderedColumns.length - 1];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    getColumnAt(index: number): Column {\r\n        return this._columns[index];\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this.getColumnAt(index);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        let weightedColumns: number = 0;\r\n        let stretchedColumns: number = 0;\r\n\r\n        for (const column of this._columns) {\r\n            if (typeof column.width === \"number\") {\r\n                weightedColumns++;\r\n            } else if (column.width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            context.addFailure(\r\n                this,\r\n                Enums.ValidationEvent.Hint,\r\n                Strings.hints.dontUseWeightedAndStrecthedColumnsInSameSet()\r\n            );\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            column.setParent(this);\r\n        } else {\r\n            throw new Error(Strings.errors.columnAlreadyBelongsToAnotherSet());\r\n        }\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Column) {\r\n            const itemIndex = this._columns.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n\r\n                item.setParent(undefined);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) === 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) === this._columns.length - 1;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    getActionById(id: string): Action | undefined {\r\n        let result: Action | undefined = undefined;\r\n\r\n        for (const column of this._columns) {\r\n            result = column.getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n\r\n    get padding(): PaddingDefinition | undefined {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: PaddingDefinition | undefined) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action | undefined {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action | undefined) {\r\n        this._selectAction = value;\r\n    }\r\n}\r\n\r\nfunction raiseImageLoadedEvent(image: Image) {\r\n    const card = image.getRootElement() as AdaptiveCard;\r\n    const onImageLoadedHandler =\r\n        card && card.onImageLoaded ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(\r\n    element: CardElement,\r\n    anchor: HTMLAnchorElement,\r\n    ev?: MouseEvent\r\n): boolean {\r\n    const card = element.getRootElement() as AdaptiveCard;\r\n    const onAnchorClickedHandler =\r\n        card && card.onAnchorClicked ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n\r\n    return onAnchorClickedHandler !== undefined\r\n        ? onAnchorClickedHandler(element, anchor, ev)\r\n        : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    const card = action.parent ? (action.parent.getRootElement() as AdaptiveCard) : undefined;\r\n    const onExecuteActionHandler =\r\n        card && card.onExecuteAction ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (action.prepareForExecution() && onExecuteActionHandler) {\r\n        onExecuteActionHandler(action);\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    const card = action.parent ? (action.parent.getRootElement() as AdaptiveCard) : undefined;\r\n    const onInlineCardExpandedHandler =\r\n        card && card.onInlineCardExpanded\r\n            ? card.onInlineCardExpanded\r\n            : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseInputValueChangedEvent(input: Input) {\r\n    const card = input.getRootElement() as AdaptiveCard;\r\n    const onInputValueChangedHandler =\r\n        card && card.onInputValueChanged\r\n            ? card.onInputValueChanged\r\n            : AdaptiveCard.onInputValueChanged;\r\n\r\n    if (onInputValueChangedHandler) {\r\n        onInputValueChangedHandler(input);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(\r\n    element: CardElement,\r\n    shouldUpdateLayout: boolean = true\r\n) {\r\n    const rootElement = element.getRootElement();\r\n\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n\r\n    const card = rootElement as AdaptiveCard;\r\n    const onElementVisibilityChangedHandler =\r\n        card && card.onElementVisibilityChanged\r\n            ? card.onElementVisibilityChanged\r\n            : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler !== undefined) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\n/**\r\n * @returns return false to continue with default context menu; return true to skip SDK default context menu\r\n */\r\nfunction raiseDisplayOverflowActionMenuEvent(\r\n    action: OverflowAction,\r\n    target?: HTMLElement\r\n): boolean {\r\n    const card = action.parent ? (action.parent.getRootElement() as AdaptiveCard) : undefined;\r\n    const onDisplayOverflowActionMenuHandler =\r\n        card && card.onDisplayOverflowActionMenu\r\n            ? card.onDisplayOverflowActionMenu\r\n            : AdaptiveCard.onDisplayOverflowActionMenu;\r\n\r\n    return onDisplayOverflowActionMenuHandler !== undefined\r\n        ? onDisplayOverflowActionMenuHandler(action.getActions(), target)\r\n        : false;\r\n}\r\n\r\n/**\r\n * @returns return false to continue with default action button; return true to skip SDK default action button\r\n */\r\nfunction raiseRenderOverflowActionsEvent(\r\n    action: OverflowAction,\r\n    isAtRootLevelActions: boolean\r\n): boolean {\r\n    const card = action.parent ? (action.parent.getRootElement() as AdaptiveCard) : undefined;\r\n    const onRenderOverflowActionsHandler =\r\n        card && card.onRenderOverflowActions\r\n            ? card.onRenderOverflowActions\r\n            : AdaptiveCard.onRenderOverflowActions;\r\n\r\n    return onRenderOverflowActionsHandler !== undefined\r\n        ? onRenderOverflowActionsHandler(action.getActions(), isAtRootLevelActions)\r\n        : false;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalParse(source: any, context: SerializationContext) {\r\n        super.internalParse(source, context);\r\n\r\n        this.parseActions(source, context);\r\n    }\r\n\r\n    protected parseActions(source: any, context: SerializationContext) {\r\n        this._actionCollection.parse(source[\"actions\"], context);\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\r\n        super.internalToJSON(target, context);\r\n\r\n        this._actionCollection.toJSON(target, \"actions\", context);\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        const element = super.internalRender();\r\n\r\n        if (element) {\r\n            const renderedActions = this._actionCollection.render(\r\n                this.hostConfig.actions.actionsOrientation\r\n            );\r\n\r\n            if (renderedActions) {\r\n                Utils.appendChild(\r\n                    element,\r\n                    renderSeparation(\r\n                        this.hostConfig,\r\n                        {\r\n                            spacing: this.hostConfig.getEffectiveSpacing(\r\n                                this.hostConfig.actions.spacing\r\n                            )\r\n                        },\r\n                        Enums.Orientation.Horizontal\r\n                    )\r\n                );\r\n                Utils.appendChild(element, renderedActions);\r\n            }\r\n\r\n            if (this.renderIfEmpty) {\r\n                return element;\r\n            } else {\r\n                return element.children.length > 0 ? element : undefined;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        if (this.renderedActionCount === 0) {\r\n            return false;\r\n        } else if (this.renderedActionCount === 1) {\r\n            return (\r\n                this._actionCollection.expandedAction !== undefined &&\r\n                !this.hostConfig.actions.preExpandSingleShowCardAction\r\n            );\r\n        } else {\r\n            return this._actionCollection.expandedAction !== undefined;\r\n        }\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return this._actionCollection.renderedActionCount;\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return false;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    releaseDOMResources() {\r\n        super.releaseDOMResources();\r\n\r\n        this._actionCollection.releaseDOMResources();\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.getActionCount();\r\n    }\r\n\r\n    getActionAt(index: number): Action | undefined {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.getActionAt(index);\r\n        } else {\r\n            return super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action | undefined {\r\n        const result: Action | undefined = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._actionCollection) {\r\n            this._actionCollection.validateProperties(context);\r\n        }\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.getActionCount() === 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(processActions: boolean = true): Input[] {\r\n        let result = super.getAllInputs(processActions);\r\n\r\n        if (processActions) {\r\n            result.push(...this._actionCollection.getAllInputs(processActions));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): IResourceInformation[] {\r\n        let result = super.getResourceInformation();\r\n\r\n        result.push(...this._actionCollection.getResourceInformation());\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount === 0) {\r\n            return super.isBleedingAtBottom();\r\n        } else {\r\n            if (this._actionCollection.getActionCount() === 1) {\r\n                return (\r\n                    this._actionCollection.expandedAction !== undefined &&\r\n                    !this.hostConfig.actions.preExpandSingleShowCardAction\r\n                );\r\n            } else {\r\n                return this._actionCollection.expandedAction !== undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    getForbiddenActionNames(): string[] {\r\n        return [];\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport interface IMarkdownProcessingResult {\r\n    didProcess: boolean;\r\n    outputHtml?: any;\r\n}\r\n\r\nexport class RefreshActionProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: RefreshDefinition,\r\n        source: PropertyBag,\r\n        context: SerializationContext\r\n    ): ExecuteAction | undefined {\r\n        const action = context.parseAction(sender.parent, source[this.name], [], false);\r\n\r\n        if (action !== undefined) {\r\n            if (action instanceof ExecuteAction) {\r\n                return action;\r\n            }\r\n\r\n            context.logParseEvent(\r\n                sender,\r\n                Enums.ValidationEvent.ActionTypeNotAllowed,\r\n                Strings.errors.actionTypeNotAllowed(action.getJsonTypeName())\r\n            );\r\n        }\r\n\r\n        context.logParseEvent(\r\n            sender,\r\n            Enums.ValidationEvent.PropertyCantBeNull,\r\n            Strings.errors.propertyMustBeSet(\"action\")\r\n        );\r\n\r\n        return undefined;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: ExecuteAction | undefined,\r\n        context: SerializationContext\r\n    ) {\r\n        context.serializeValue(\r\n            target,\r\n            this.name,\r\n            value ? value.toJSON(context) : undefined,\r\n            undefined,\r\n            true\r\n        );\r\n    }\r\n\r\n    constructor(readonly targetVersion: Version, readonly name: string) {\r\n        super(targetVersion, name, undefined);\r\n    }\r\n}\r\n\r\nexport class RefreshDefinition extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly actionProperty = new RefreshActionProperty(Versions.v1_4, \"action\");\r\n    static readonly userIdsProperty = new StringArrayProperty(Versions.v1_4, \"userIds\");\r\n\r\n    @property(RefreshDefinition.actionProperty)\r\n    get action(): ExecuteAction {\r\n        return this.getValue(RefreshDefinition.actionProperty);\r\n    }\r\n\r\n    set action(value: ExecuteAction) {\r\n        this.setValue(RefreshDefinition.actionProperty, value);\r\n\r\n        if (value) {\r\n            value.setParent(this.parent);\r\n        }\r\n    }\r\n\r\n    @property(RefreshDefinition.userIdsProperty)\r\n    userIds?: string[];\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"RefreshDefinition\";\r\n    }\r\n\r\n    //#endregion\r\n\r\n    parent: CardElement;\r\n}\r\n\r\nexport class AuthCardButton extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly typeProperty = new StringProperty(Versions.v1_4, \"type\");\r\n    static readonly titleProperty = new StringProperty(Versions.v1_4, \"title\");\r\n    static readonly imageProperty = new StringProperty(Versions.v1_4, \"image\");\r\n    static readonly valueProperty = new StringProperty(Versions.v1_4, \"value\");\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"AuthCardButton\";\r\n    }\r\n\r\n    //#endregion\r\n\r\n    @property(AuthCardButton.typeProperty)\r\n    type: string;\r\n\r\n    @property(AuthCardButton.titleProperty)\r\n    title?: string;\r\n\r\n    @property(AuthCardButton.imageProperty)\r\n    image?: string;\r\n\r\n    @property(AuthCardButton.valueProperty)\r\n    value: string;\r\n}\r\n\r\nexport class TokenExchangeResource extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly idProperty = new StringProperty(Versions.v1_4, \"id\");\r\n    static readonly uriProperty = new StringProperty(Versions.v1_4, \"uri\");\r\n    static readonly providerIdProperty = new StringProperty(Versions.v1_4, \"providerId\");\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"TokenExchangeResource\";\r\n    }\r\n\r\n    //#endregion\r\n\r\n    @property(TokenExchangeResource.idProperty)\r\n    id?: string;\r\n\r\n    @property(TokenExchangeResource.uriProperty)\r\n    uri?: string;\r\n\r\n    @property(TokenExchangeResource.providerIdProperty)\r\n    providerId?: string;\r\n}\r\n\r\nexport class Authentication extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly textProperty = new StringProperty(Versions.v1_4, \"text\");\r\n    static readonly connectionNameProperty = new StringProperty(Versions.v1_4, \"connectionName\");\r\n    static readonly buttonsProperty = new SerializableObjectCollectionProperty(\r\n        Versions.v1_4,\r\n        \"buttons\",\r\n        AuthCardButton\r\n    );\r\n    static readonly tokenExchangeResourceProperty = new SerializableObjectProperty(\r\n        Versions.v1_4,\r\n        \"tokenExchangeResource\",\r\n        TokenExchangeResource,\r\n        true\r\n    );\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"Authentication\";\r\n    }\r\n\r\n    //#endregion\r\n\r\n    @property(Authentication.textProperty)\r\n    text?: string;\r\n\r\n    @property(Authentication.connectionNameProperty)\r\n    connectionName?: string;\r\n\r\n    @property(Authentication.buttonsProperty)\r\n    buttons: AuthCardButton[];\r\n\r\n    @property(Authentication.tokenExchangeResourceProperty)\r\n    tokenExchangeResource?: TokenExchangeResource;\r\n}\r\n\r\n// @dynamic\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n    static readonly schemaUrl = \"http://adaptivecards.io/schemas/adaptive-card.json\";\r\n\r\n    //#region Schema\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    protected static readonly $schemaProperty = new CustomProperty<string>(\r\n        Versions.v1_0,\r\n        \"$schema\",\r\n        (\r\n            sender: SerializableObject,\r\n            property: PropertyDefinition,\r\n            source: PropertyBag,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            return AdaptiveCard.schemaUrl;\r\n        },\r\n        (\r\n            sender: SerializableObject,\r\n            prop: PropertyDefinition,\r\n            target: PropertyBag,\r\n            value: Versions | undefined,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            context.serializeValue(target, prop.name, AdaptiveCard.schemaUrl);\r\n        }\r\n    );\r\n\r\n    static readonly versionProperty = new CustomProperty<Version | undefined>(\r\n        Versions.v1_0,\r\n        \"version\",\r\n        (\r\n            sender: SerializableObject,\r\n            prop: PropertyDefinition,\r\n            source: PropertyBag,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            let version = Version.parse(source[prop.name], context);\r\n\r\n            if (version === undefined) {\r\n                version = Versions.latest;\r\n\r\n                context.logParseEvent(\r\n                    sender,\r\n                    Enums.ValidationEvent.InvalidPropertyValue,\r\n                    Strings.errors.invalidCardVersion(version.toString())\r\n                );\r\n            }\r\n\r\n            return version;\r\n        },\r\n        (\r\n            sender: SerializableObject,\r\n            prop: PropertyDefinition,\r\n            target: PropertyBag,\r\n            value: Version | undefined,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            if (value !== undefined) {\r\n                context.serializeValue(target, prop.name, value.toString());\r\n            }\r\n        },\r\n        Versions.v1_0\r\n    );\r\n\r\n    static readonly fallbackTextProperty = new StringProperty(Versions.v1_0, \"fallbackText\");\r\n    static readonly speakProperty = new StringProperty(Versions.v1_0, \"speak\");\r\n    static readonly refreshProperty = new SerializableObjectProperty(\r\n        Versions.v1_4,\r\n        \"refresh\",\r\n        RefreshDefinition,\r\n        true\r\n    );\r\n    static readonly authenticationProperty = new SerializableObjectProperty(\r\n        Versions.v1_4,\r\n        \"authentication\",\r\n        Authentication,\r\n        true\r\n    );\r\n\r\n    @property(AdaptiveCard.versionProperty)\r\n    version: Version;\r\n\r\n    @property(AdaptiveCard.fallbackTextProperty)\r\n    fallbackText?: string;\r\n\r\n    @property(AdaptiveCard.speakProperty)\r\n    speak?: string;\r\n\r\n    @property(AdaptiveCard.refreshProperty)\r\n    get refresh(): RefreshDefinition | undefined {\r\n        return this.getValue(AdaptiveCard.refreshProperty);\r\n    }\r\n\r\n    set refresh(value: RefreshDefinition | undefined) {\r\n        this.setValue(AdaptiveCard.refreshProperty, value);\r\n\r\n        if (value) {\r\n            value.parent = this;\r\n        }\r\n    }\r\n\r\n    @property(AdaptiveCard.authenticationProperty)\r\n    authentication?: Authentication;\r\n\r\n    //#endregion\r\n\r\n    private static _haveWarnedAboutNoMarkdownProcessing = false;\r\n\r\n    static onAnchorClicked?: (\r\n        element: CardElement,\r\n        anchor: HTMLAnchorElement,\r\n        ev?: MouseEvent\r\n    ) => boolean;\r\n    static onExecuteAction?: (action: Action) => void;\r\n    static onElementVisibilityChanged?: (element: CardElement) => void;\r\n    static onImageLoaded?: (image: Image) => void;\r\n    static onInlineCardExpanded?: (action: ShowCardAction, isExpanded: boolean) => void;\r\n    static onInputValueChanged?: (input: Input) => void;\r\n    static onProcessMarkdown?: (text: string, result: IMarkdownProcessingResult) => void;\r\n    static onDisplayOverflowActionMenu?: (\r\n        actions: readonly Action[],\r\n        target?: HTMLElement\r\n    ) => boolean;\r\n    static onRenderOverflowActions?: (\r\n        actions: readonly Action[],\r\n        isRootLevelActions: boolean\r\n    ) => boolean;\r\n\r\n    static get processMarkdown(): (text: string) => string {\r\n        throw new Error(Strings.errors.processMarkdownEventRemoved());\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    static set processMarkdown(_value: (text: string) => string) {\r\n        throw new Error(Strings.errors.processMarkdownEventRemoved());\r\n    }\r\n\r\n    static applyMarkdown(text: string): IMarkdownProcessingResult {\r\n        const result: IMarkdownProcessingResult = {\r\n            didProcess: false\r\n        };\r\n\r\n        if (AdaptiveCard.onProcessMarkdown) {\r\n            AdaptiveCard.onProcessMarkdown(text, result);\r\n        } else if ((<any>window).markdownit) {\r\n            // Check for markdownit\r\n            const markdownIt: any = (<any>window).markdownit;\r\n            result.outputHtml = markdownIt().render(text);\r\n            result.didProcess = true;\r\n        } else if (!AdaptiveCard._haveWarnedAboutNoMarkdownProcessing) {\r\n            // eslint-disable-next-line no-console\r\n            console.warn(Strings.errors.markdownProcessingNotEnabled);\r\n            AdaptiveCard._haveWarnedAboutNoMarkdownProcessing = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _fallbackCard?: AdaptiveCard;\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        } else {\r\n            const unsupportedVersion: boolean =\r\n                !this.version ||\r\n                !this.version.isValid ||\r\n                this.maxVersion.major < this.version.major ||\r\n                (this.maxVersion.major === this.version.major &&\r\n                    this.maxVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    protected getDefaultSerializationContext(): BaseSerializationContext {\r\n        return new SerializationContext(this.version);\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"body\";\r\n    }\r\n\r\n    protected canHostSingletons() {\r\n        return true;\r\n    }\r\n\r\n    protected internalParse(source: any, context: SerializationContext) {\r\n        this._fallbackCard = undefined;\r\n\r\n        const fallbackElement = context.parseElement(\r\n            undefined,\r\n            source[\"fallback\"],\r\n            this.forbiddenChildElements(),\r\n            !this.isDesignMode()\r\n        );\r\n\r\n        if (fallbackElement) {\r\n            this._fallbackCard = new AdaptiveCard();\r\n            this._fallbackCard.addItem(fallbackElement);\r\n        }\r\n\r\n        super.internalParse(source, context);\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\r\n        this.setValue(AdaptiveCard.versionProperty, context.targetVersion);\r\n\r\n        super.internalToJSON(target, context);\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        const renderedElement = super.internalRender();\r\n\r\n        if (GlobalSettings.useAdvancedCardBottomTruncation && renderedElement) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.removeProperty(\"minHeight\");\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    protected getHasBackground(ignoreBackgroundImages: boolean = false): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getDefaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition(\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding\r\n        );\r\n    }\r\n\r\n    protected shouldSerialize(_context: SerializationContext): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked?: (element: CardElement, anchor: HTMLAnchorElement, ev?: MouseEvent) => boolean;\r\n    onExecuteAction?: (action: Action) => void;\r\n    onElementVisibilityChanged?: (element: CardElement) => void;\r\n    onImageLoaded?: (image: Image) => void;\r\n    onInlineCardExpanded?: (action: ShowCardAction, isExpanded: boolean) => void;\r\n    onInputValueChanged?: (input: Input) => void;\r\n    onDisplayOverflowActionMenu?: (actions: readonly Action[], target?: HTMLElement) => boolean;\r\n    onRenderOverflowActions?: (actions: readonly Action[], isRootLevelActions: boolean) => boolean;\r\n\r\n    designMode: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this.getValue(CardElement.typeNameProperty) !== \"AdaptiveCard\") {\r\n            context.addFailure(\r\n                this,\r\n                Enums.ValidationEvent.MissingCardType,\r\n                Strings.errors.invalidCardType()\r\n            );\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && !this.version) {\r\n            context.addFailure(\r\n                this,\r\n                Enums.ValidationEvent.PropertyCantBeNull,\r\n                Strings.errors.propertyMustBeSet(\"version\")\r\n            );\r\n        } else if (!this.isVersionSupported()) {\r\n            context.addFailure(\r\n                this,\r\n                Enums.ValidationEvent.UnsupportedCardVersion,\r\n                Strings.errors.unsupportedCardVersion(\r\n                    this.version.toString(),\r\n                    this.maxVersion.toString()\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement | undefined {\r\n        let renderedCard: HTMLElement | undefined;\r\n\r\n        if (this.shouldFallback() && this._fallbackCard) {\r\n            this._fallbackCard.hostConfig = this.hostConfig;\r\n\r\n            renderedCard = this._fallbackCard.render();\r\n        } else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\"));\r\n\r\n                // Having a tabIndex on the root container for a card can mess up accessibility in some scenarios.\r\n                // However, we've shipped this behavior before, and so can't just turn it off in a point release. For\r\n                // now, to unblock accessibility scenarios for our customers, we've got an option to turn it off. In a\r\n                // future release, we should strongly consider flipping the default such that we *don't* emit a tabIndex\r\n                // by default.\r\n                if (GlobalSettings.setTabIndexAtCardRoot) {\r\n                    renderedCard.tabIndex = 0;\r\n                }\r\n\r\n                if (this.speak) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            Utils.appendChild(target, renderedCard);\r\n\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (GlobalSettings.useAdvancedCardBottomTruncation && this.isDisplayed()) {\r\n            const padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n\r\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\r\n            this[\"handleOverflow\"](this.renderedElement!.offsetHeight - padding);\r\n        }\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return super.shouldFallback() || !this.isVersionSupported();\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    //#region Schema\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"InlineAdaptiveCard\";\r\n    }\r\n\r\n    protected populateSchema(schema: SerializableObjectSchema) {\r\n        super.populateSchema(schema);\r\n\r\n        schema.remove(AdaptiveCard.$schemaProperty, AdaptiveCard.versionProperty);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    protected getDefaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition(\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding\r\n        );\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        } else {\r\n            return this.hostConfig.actions.showCard.style\r\n                ? this.hostConfig.actions.showCard.style\r\n                : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render(target?: HTMLElement): HTMLElement | undefined {\r\n        const renderedCard = super.render(target);\r\n\r\n        if (renderedCard) {\r\n            renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n            renderedCard.removeAttribute(\"tabindex\");\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n}\r\n\r\nexport class SerializationContext extends BaseSerializationContext {\r\n    private _elementRegistry?: CardObjectRegistry<CardElement>;\r\n    private _actionRegistry?: CardObjectRegistry<Action>;\r\n\r\n    private _forbiddenTypes: Set<string> = new Set<string>();\r\n    private internalParseCardObject<T extends CardObject>(\r\n        parent: CardElement | undefined,\r\n        source: any,\r\n        forbiddenTypes: Set<string>,\r\n        allowFallback: boolean,\r\n        createInstanceCallback: (typeName: string | undefined) => T | undefined,\r\n        logParseEvent: (typeName: string | undefined, errorType: Enums.TypeErrorType) => void,\r\n        parsingSingletonObject: boolean = false\r\n    ): T | undefined {\r\n        let result: T | undefined = undefined;\r\n\r\n        if (source && typeof source === \"object\") {\r\n            const oldForbiddenTypes = new Set<string>();\r\n            this._forbiddenTypes.forEach((type) => {\r\n                oldForbiddenTypes.add(type);\r\n            });\r\n            forbiddenTypes.forEach((type) => {\r\n                this._forbiddenTypes.add(type);\r\n            });\r\n\r\n            const typeName = Utils.parseString(source[\"type\"]);\r\n\r\n            const ignoreForbiddenType = parsingSingletonObject && typeName === \"Carousel\";\r\n\r\n            if (typeName && this._forbiddenTypes.has(typeName) && !ignoreForbiddenType) {\r\n                logParseEvent(typeName, Enums.TypeErrorType.ForbiddenType);\r\n            } else {\r\n                let tryToFallback = false;\r\n\r\n                result = createInstanceCallback(typeName);\r\n\r\n                if (!result) {\r\n                    tryToFallback = GlobalSettings.enableFallback && allowFallback;\r\n\r\n                    logParseEvent(typeName, Enums.TypeErrorType.UnknownType);\r\n                } else {\r\n                    result.setParent(parent);\r\n                    result.parse(source, this);\r\n\r\n                    tryToFallback =\r\n                        GlobalSettings.enableFallback && allowFallback && result.shouldFallback();\r\n                }\r\n\r\n                if (tryToFallback) {\r\n                    const fallback = source[\"fallback\"];\r\n\r\n                    if (!fallback && parent) {\r\n                        parent.setShouldFallback(true);\r\n                    }\r\n                    if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\r\n                        result = undefined;\r\n                    } else if (typeof fallback === \"object\") {\r\n                        result = this.internalParseCardObject<T>(\r\n                            parent,\r\n                            fallback,\r\n                            forbiddenTypes,\r\n                            true,\r\n                            createInstanceCallback,\r\n                            logParseEvent\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._forbiddenTypes = oldForbiddenTypes;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected cardObjectParsed(o: SerializableObject, source: any) {\r\n        if (o instanceof Action && this.onParseAction) {\r\n            this.onParseAction(o, source, this);\r\n        } else if (o instanceof CardElement && this.onParseElement) {\r\n            this.onParseElement(o, source, this);\r\n        }\r\n    }\r\n\r\n    onParseAction?: (action: Action, source: any, context: SerializationContext) => void;\r\n    onParseElement?: (element: CardElement, source: any, context: SerializationContext) => void;\r\n\r\n    shouldSerialize(o: SerializableObject): boolean {\r\n        if (o instanceof Action) {\r\n            return this.actionRegistry.findByName(o.getJsonTypeName()) !== undefined;\r\n        } else if (o instanceof CardElement) {\r\n            return this.elementRegistry.findByName(o.getJsonTypeName()) !== undefined;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    parseCardObject<T extends CardObject>(\r\n        parent: CardElement | undefined,\r\n        source: any,\r\n        forbiddenTypeNames: string[],\r\n        allowFallback: boolean,\r\n        createInstanceCallback: (typeName: string) => T | undefined,\r\n        logParseEvent: (typeName: string, errorType: Enums.TypeErrorType) => void,\r\n        parsingSingletonObject: boolean = false\r\n    ): T | undefined {\r\n        const forbiddenTypes = new Set<string>(forbiddenTypeNames);\r\n        const result = this.internalParseCardObject(\r\n            parent,\r\n            source,\r\n            forbiddenTypes,\r\n            allowFallback,\r\n            createInstanceCallback,\r\n            logParseEvent,\r\n            parsingSingletonObject\r\n        );\r\n\r\n        if (result !== undefined) {\r\n            this.cardObjectParsed(result, source);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseElement(\r\n        parent: CardElement | undefined,\r\n        source: any,\r\n        forbiddenTypes: string[],\r\n        allowFallback: boolean,\r\n        _parsingSingletonObject: boolean = false\r\n    ): CardElement | undefined {\r\n        return this.parseCardObject<CardElement>(\r\n            parent,\r\n            source,\r\n            forbiddenTypes,\r\n            allowFallback,\r\n            (typeName: string) => {\r\n                return this.elementRegistry.createInstance(typeName, this.targetVersion);\r\n            },\r\n            (typeName: string, errorType: Enums.TypeErrorType) => {\r\n                if (errorType === Enums.TypeErrorType.UnknownType) {\r\n                    this.logParseEvent(\r\n                        undefined,\r\n                        Enums.ValidationEvent.UnknownElementType,\r\n                        Strings.errors.unknownElementType(typeName)\r\n                    );\r\n                } else {\r\n                    this.logParseEvent(\r\n                        undefined,\r\n                        Enums.ValidationEvent.ElementTypeNotAllowed,\r\n                        Strings.errors.elementTypeNotAllowed(typeName)\r\n                    );\r\n                }\r\n            },\r\n            _parsingSingletonObject\r\n        );\r\n    }\r\n\r\n    parseAction(\r\n        parent: CardElement,\r\n        source: any,\r\n        forbiddenActionTypes: string[],\r\n        allowFallback: boolean\r\n    ): Action | undefined {\r\n        return this.parseCardObject<Action>(\r\n            parent,\r\n            source,\r\n            forbiddenActionTypes,\r\n            allowFallback,\r\n            (typeName: string) => {\r\n                return this.actionRegistry.createInstance(typeName, this.targetVersion);\r\n            },\r\n            (typeName: string, errorType: Enums.TypeErrorType) => {\r\n                if (errorType === Enums.TypeErrorType.UnknownType) {\r\n                    this.logParseEvent(\r\n                        undefined,\r\n                        Enums.ValidationEvent.UnknownActionType,\r\n                        Strings.errors.unknownActionType(typeName)\r\n                    );\r\n                } else {\r\n                    this.logParseEvent(\r\n                        undefined,\r\n                        Enums.ValidationEvent.ActionTypeNotAllowed,\r\n                        Strings.errors.actionTypeNotAllowed(typeName)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    get elementRegistry(): CardObjectRegistry<CardElement> {\r\n        return this._elementRegistry ?? GlobalRegistry.elements;\r\n    }\r\n\r\n    // Not using a property setter here because the setter should accept \"undefined\"\r\n    // whereas the getter should never return undefined.\r\n    setElementRegistry(value: CardObjectRegistry<CardElement> | undefined) {\r\n        this._elementRegistry = value;\r\n    }\r\n\r\n    get actionRegistry(): CardObjectRegistry<Action> {\r\n        return this._actionRegistry ?? GlobalRegistry.actions;\r\n    }\r\n\r\n    // Not using a property setter here because the setter should accept \"undefined\"\r\n    // whereas the getter should never return undefined.\r\n    setActionRegistry(value: CardObjectRegistry<Action> | undefined) {\r\n        this._actionRegistry = value;\r\n    }\r\n}\r\n\r\nGlobalRegistry.defaultElements.register(\"Container\", Container);\r\nGlobalRegistry.defaultElements.register(\"TextBlock\", TextBlock);\r\nGlobalRegistry.defaultElements.register(\"RichTextBlock\", RichTextBlock, Versions.v1_2);\r\nGlobalRegistry.defaultElements.register(\"TextRun\", TextRun, Versions.v1_2);\r\nGlobalRegistry.defaultElements.register(\"Image\", Image);\r\nGlobalRegistry.defaultElements.register(\"ImageSet\", ImageSet);\r\nGlobalRegistry.defaultElements.register(\"Media\", Media, Versions.v1_1);\r\nGlobalRegistry.defaultElements.register(\"FactSet\", FactSet);\r\nGlobalRegistry.defaultElements.register(\"ColumnSet\", ColumnSet);\r\nGlobalRegistry.defaultElements.register(\"ActionSet\", ActionSet, Versions.v1_2);\r\nGlobalRegistry.defaultElements.register(\"Input.Text\", TextInput);\r\nGlobalRegistry.defaultElements.register(\"Input.Date\", DateInput);\r\nGlobalRegistry.defaultElements.register(\"Input.Time\", TimeInput);\r\nGlobalRegistry.defaultElements.register(\"Input.Number\", NumberInput);\r\nGlobalRegistry.defaultElements.register(\"Input.ChoiceSet\", ChoiceSetInput);\r\nGlobalRegistry.defaultElements.register(\"Input.Toggle\", ToggleInput);\r\n\r\nGlobalRegistry.defaultActions.register(OpenUrlAction.JsonTypeName, OpenUrlAction);\r\nGlobalRegistry.defaultActions.register(SubmitAction.JsonTypeName, SubmitAction);\r\nGlobalRegistry.defaultActions.register(ShowCardAction.JsonTypeName, ShowCardAction);\r\nGlobalRegistry.defaultActions.register(\r\n    ToggleVisibilityAction.JsonTypeName,\r\n    ToggleVisibilityAction,\r\n    Versions.v1_2\r\n);\r\nGlobalRegistry.defaultActions.register(ExecuteAction.JsonTypeName, ExecuteAction, Versions.v1_4);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport { Strings } from \"./strings\";\r\nimport { Dictionary, GlobalSettings } from \"./shared\";\r\nimport { HostConfig } from \"./host-config\";\r\nimport { HostCapabilities } from \"./host-capabilities\";\r\nimport {\r\n    Versions,\r\n    property,\r\n    SerializableObject,\r\n    StringProperty,\r\n    SerializableObjectProperty,\r\n    IValidationEvent,\r\n    PropertyDefinition\r\n} from \"./serialization\";\r\n\r\nexport class ValidationResults {\r\n    readonly allIds: Dictionary<number> = {};\r\n    readonly validationEvents: IValidationEvent[] = [];\r\n\r\n    addFailure(cardObject: CardObject, event: Enums.ValidationEvent, message: string) {\r\n        this.validationEvents.push({\r\n            phase: Enums.ValidationPhase.Validation,\r\n            source: cardObject,\r\n            event: event,\r\n            message: message\r\n        });\r\n    }\r\n}\r\n\r\nexport type CardObjectType = { new (): CardObject };\r\n\r\nexport abstract class CardObject extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly typeNameProperty = new StringProperty(\r\n        Versions.v1_0,\r\n        \"type\",\r\n        undefined,\r\n        undefined,\r\n        undefined,\r\n        (sender: object) => {\r\n            return (<CardObject>sender).getJsonTypeName();\r\n        }\r\n    );\r\n    static readonly idProperty = new StringProperty(Versions.v1_0, \"id\");\r\n    static readonly requiresProperty = new SerializableObjectProperty(\r\n        Versions.v1_2,\r\n        \"requires\",\r\n        HostCapabilities,\r\n        false,\r\n        new HostCapabilities()\r\n    );\r\n\r\n    protected getSchemaKey(): string {\r\n        return this.getJsonTypeName();\r\n    }\r\n\r\n    @property(CardObject.idProperty)\r\n    id?: string;\r\n\r\n    @property(CardObject.requiresProperty)\r\n    get requires(): HostCapabilities {\r\n        return this.getValue(CardObject.requiresProperty);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    private _shouldFallback: boolean = false;\r\n\r\n    protected _parent?: CardObject;\r\n    protected _renderedElement?: HTMLElement;\r\n\r\n    /**\r\n     * Checks if this CardObject contains the given DOM Node.\r\n     * @param node The DOM Node to look for.\r\n     * @returns `true` if the DOM Node was found, `false` otherwise.\r\n     */\r\n    protected contains(node: Node): boolean {\r\n        if (this._renderedElement) {\r\n            return this._renderedElement.contains(node);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onPreProcessPropertyValue?: (\r\n        sender: CardObject,\r\n        property: PropertyDefinition,\r\n        value: any\r\n    ) => any;\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    abstract get hostConfig(): HostConfig;\r\n\r\n    preProcessPropertyValue(prop: PropertyDefinition, propertyValue?: any): any {\r\n        const value = propertyValue === undefined ? this.getValue(prop) : propertyValue;\r\n\r\n        if (GlobalSettings.allowPreProcessingPropertyValues) {\r\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n            let currentObject: CardObject | undefined = this;\r\n\r\n            while (currentObject && !currentObject.onPreProcessPropertyValue) {\r\n                currentObject = currentObject.parent;\r\n            }\r\n\r\n            if (currentObject && currentObject.onPreProcessPropertyValue) {\r\n                return currentObject.onPreProcessPropertyValue(this, prop, value);\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    setParent(value: CardObject | undefined) {\r\n        this._parent = value;\r\n    }\r\n\r\n    setShouldFallback(value: boolean) {\r\n        this._shouldFallback = value;\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    getRootObject(): CardObject {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        let currentObject: CardObject = this;\r\n\r\n        while (currentObject.parent) {\r\n            currentObject = currentObject.parent;\r\n        }\r\n\r\n        return currentObject;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        if (this.id) {\r\n            if (context.allIds.hasOwnProperty(this.id)) {\r\n                if (context.allIds[this.id] === 1) {\r\n                    context.addFailure(\r\n                        this,\r\n                        Enums.ValidationEvent.DuplicateId,\r\n                        Strings.errors.duplicateId(this.id)\r\n                    );\r\n                }\r\n\r\n                context.allIds[this.id] += 1;\r\n            } else {\r\n                context.allIds[this.id] = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    validateProperties(): ValidationResults {\r\n        const result = new ValidationResults();\r\n\r\n        this.internalValidateProperties(result);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Recursively searches this CardObject and any children to find the\r\n     * innermost CardObject that owns the given DOM Node.\r\n     *\r\n     * @param node The DOM Node to look for.\r\n     *\r\n     * @returns The owner of the given DOM Node, or `undefined` if no owner was found.\r\n     */\r\n    findDOMNodeOwner(node: Node): CardObject | undefined {\r\n        // default implementation for CardObjects with no associated children\r\n        return this.contains(node) ? this : undefined;\r\n    }\r\n\r\n    releaseDOMResources() {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    get parent(): CardObject | undefined {\r\n        return this._parent;\r\n    }\r\n\r\n    get renderedElement(): HTMLElement | undefined {\r\n        return this._renderedElement;\r\n    }\r\n}\r\n","// Copyright (C) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ActivityResponse, IActivityRequest } from \"./activity-request\";\r\n\r\nexport abstract class ChannelAdapter {\r\n    abstract sendRequestAsync(request: IActivityRequest): Promise<ActivityResponse>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport class Collection<TItem> {\r\n    private _items: Array<TItem> = [];\r\n\r\n    onItemAdded: (item: TItem) => void;\r\n    onItemRemoved: (item: TItem) => void;\r\n\r\n    get(index: number): TItem {\r\n        return this._items[index];\r\n    }\r\n\r\n    add(item: TItem) {\r\n        this._items.push(item);\r\n\r\n        if (this.onItemAdded) {\r\n            this.onItemAdded(item);\r\n        }\r\n    }\r\n\r\n    remove(item: TItem) {\r\n        const i = this._items.indexOf(item);\r\n\r\n        if (i >= 0) {\r\n            this._items = this._items.splice(i, 1);\r\n\r\n            if (this.onItemRemoved) {\r\n                this.onItemRemoved(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    indexOf(item: TItem): number {\r\n        return this._items.indexOf(item);\r\n    }\r\n\r\n    get length(): number {\r\n        return this._items.length;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\r\nexport class Constants {\r\n    static readonly keys = {\r\n        tab: \"Tab\",\r\n        enter: \"Enter\",\r\n        escape: \"Escape\",\r\n        space: \" \",\r\n        up: \"ArrowUp\",\r\n        down: \"ArrowDown\",\r\n        delete: \"Delete\"\r\n    } as const;\r\n}\r\n","// Copyright (C) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport * from \"./menu-item\";\r\nexport * from \"./popup-menu\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { defaultHostConfig, HostConfig } from \"../host-config\";\r\nimport { Constants } from \"./constants\";\r\n\r\nexport class MenuItem {\r\n    private _hostConfig?: HostConfig;\r\n    private _element: HTMLElement;\r\n    private _value: string;\r\n    private _isEnabled: boolean = true;\r\n\r\n    private click() {\r\n        if (this.isEnabled && this.onClick) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    private updateCssClasses() {\r\n        if (this._element) {\r\n            const effectiveHostConfig = this._hostConfig ? this._hostConfig : defaultHostConfig;\r\n\r\n            this._element.className = effectiveHostConfig.makeCssClassName(\"ac-ctrl\");\r\n            this._element.classList.add(\r\n                effectiveHostConfig.makeCssClassName(\r\n                    this.isEnabled ? \"ac-ctrl-dropdown-item\" : \"ac-ctrl-dropdown-item-disabled\"\r\n                )\r\n            );\r\n\r\n            if (!this.isEnabled) {\r\n                this._element.classList.add(effectiveHostConfig.makeCssClassName(\"ac-disabled\"));\r\n            }\r\n        }\r\n    }\r\n\r\n    readonly key: string;\r\n\r\n    onClick?: (item: MenuItem) => void;\r\n\r\n    constructor(key: string, value: string) {\r\n        this.key = key;\r\n        this._value = value;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.value;\r\n    }\r\n\r\n    render(hostConfig?: HostConfig): HTMLElement {\r\n        this._hostConfig = hostConfig;\r\n\r\n        if (!this._element) {\r\n            this._element = document.createElement(\"span\");\r\n            this._element.innerText = this.value;\r\n            this._element.setAttribute(\"role\", \"menuitem\");\r\n\r\n            if (!this.isEnabled) {\r\n                this._element.setAttribute(\"aria-disabled\", \"true\");\r\n            }\r\n\r\n            this._element.setAttribute(\"aria-current\", \"false\");\r\n            this._element.onmouseup = (_e) => {\r\n                this.click();\r\n            };\r\n            this._element.onkeydown = (e) => {\r\n                if (e.key === Constants.keys.enter) {\r\n                    e.cancelBubble = true;\r\n\r\n                    this.click();\r\n                }\r\n            };\r\n\r\n            this.updateCssClasses();\r\n        }\r\n\r\n        return this._element;\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value = newValue;\r\n\r\n        if (this._element) {\r\n            this._element.innerText = newValue;\r\n        }\r\n    }\r\n\r\n    get isEnabled(): boolean {\r\n        return this._isEnabled;\r\n    }\r\n\r\n    set isEnabled(value: boolean) {\r\n        if (this._isEnabled !== value) {\r\n            this._isEnabled = value;\r\n\r\n            this.updateCssClasses();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Constants } from \"./constants\";\r\nimport * as Utils from \"../utils\";\r\nimport { defaultHostConfig, HostConfig } from \"../host-config\";\r\n\r\nexport abstract class PopupControl {\r\n    private _isOpen: boolean = false;\r\n    private _overlayElement: HTMLElement;\r\n    private _popupElement: HTMLElement;\r\n    private _hostConfig?: HostConfig;\r\n\r\n    protected abstract renderContent(): HTMLElement;\r\n\r\n    onClose: (popupControl: PopupControl, wasCancelled: boolean) => void;\r\n\r\n    keyDown(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case Constants.keys.escape:\r\n                this.closePopup(true);\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    render(_rootElementBounds: ClientRect): HTMLElement {\r\n        const element = document.createElement(\"div\");\r\n        element.tabIndex = 0;\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-ctrl\", \"ac-ctrl-popup-container\");\r\n        element.setAttribute(\"role\", \"dialog\");\r\n        element.setAttribute(\"aria-modal\", \"true\");\r\n        element.onkeydown = (e) => {\r\n            this.keyDown(e);\r\n\r\n            return !e.cancelBubble;\r\n        };\r\n\r\n        element.appendChild(this.renderContent());\r\n\r\n        return element;\r\n    }\r\n\r\n    focus() {\r\n        if (this._popupElement) {\r\n            (<HTMLElement>this._popupElement.firstElementChild).focus();\r\n        }\r\n    }\r\n\r\n    popup(rootElement: HTMLElement) {\r\n        if (!this._isOpen) {\r\n            this._overlayElement = document.createElement(\"div\");\r\n            this._overlayElement.className = this.hostConfig.makeCssClassName(\"ac-ctrl-overlay\");\r\n            this._overlayElement.tabIndex = 0;\r\n            this._overlayElement.style.width = document.documentElement.scrollWidth + \"px\";\r\n            this._overlayElement.style.height = document.documentElement.scrollHeight + \"px\";\r\n            this._overlayElement.onfocus = (_e) => {\r\n                this.closePopup(true);\r\n            };\r\n\r\n            document.body.appendChild(this._overlayElement);\r\n\r\n            const rootElementBounds = rootElement.getBoundingClientRect();\r\n\r\n            this._popupElement = this.render(rootElementBounds);\r\n            this._popupElement.classList.remove(\r\n                ...this.hostConfig.makeCssClassNames(\r\n                    \"ac-ctrl-slide\",\r\n                    \"ac-ctrl-slideLeftToRight\",\r\n                    \"ac-ctrl-slideRightToLeft\",\r\n                    \"ac-ctrl-slideTopToBottom\",\r\n                    \"ac-ctrl-slideRightToLeft\"\r\n                )\r\n            );\r\n\r\n            window.addEventListener(\"resize\", (_e) => {\r\n                this.closePopup(true);\r\n            });\r\n\r\n            const rootElementLabel = rootElement.getAttribute(\"aria-label\");\r\n            if (rootElementLabel) {\r\n                this._popupElement.setAttribute(\"aria-label\", rootElementLabel);\r\n            }\r\n\r\n            this._overlayElement.appendChild(this._popupElement);\r\n\r\n            const popupElementBounds = this._popupElement.getBoundingClientRect();\r\n\r\n            const availableSpaceBelow = window.innerHeight - rootElementBounds.bottom;\r\n            const availableSpaceAbove = rootElementBounds.top;\r\n            const availableSpaceRight = window.innerWidth - rootElementBounds.right;\r\n            const availableSpaceLeft = rootElementBounds.left;\r\n\r\n            let left = rootElementBounds.left + Utils.getScrollX();\r\n            let top;\r\n\r\n            if (\r\n                availableSpaceAbove < popupElementBounds.height &&\r\n                availableSpaceBelow < popupElementBounds.height\r\n            ) {\r\n                // Not enough space above or below root element\r\n                const actualPopupHeight = Math.min(popupElementBounds.height, window.innerHeight);\r\n\r\n                this._popupElement.style.maxHeight = actualPopupHeight + \"px\";\r\n\r\n                if (actualPopupHeight < popupElementBounds.height) {\r\n                    top = Utils.getScrollY();\r\n                } else {\r\n                    top =\r\n                        Utils.getScrollY() +\r\n                        rootElementBounds.top +\r\n                        (rootElementBounds.height - actualPopupHeight) / 2;\r\n                }\r\n\r\n                if (\r\n                    availableSpaceLeft < popupElementBounds.width &&\r\n                    availableSpaceRight < popupElementBounds.width\r\n                ) {\r\n                    // Not enough space left or right of root element\r\n                    const actualPopupWidth = Math.min(popupElementBounds.width, window.innerWidth);\r\n\r\n                    this._popupElement.style.maxWidth = actualPopupWidth + \"px\";\r\n\r\n                    if (actualPopupWidth < popupElementBounds.width) {\r\n                        left = Utils.getScrollX();\r\n                    } else {\r\n                        left =\r\n                            Utils.getScrollX() +\r\n                            rootElementBounds.left +\r\n                            (rootElementBounds.width - actualPopupWidth) / 2;\r\n                    }\r\n                } else {\r\n                    // Enough space on the left or right of the root element\r\n                    if (availableSpaceRight >= popupElementBounds.width) {\r\n                        left = Utils.getScrollX() + rootElementBounds.right;\r\n\r\n                        this._popupElement.classList.add(\r\n                            ...this.hostConfig.makeCssClassNames(\r\n                                \"ac-ctrl-slide\",\r\n                                \"ac-ctrl-slideLeftToRight\"\r\n                            )\r\n                        );\r\n                    } else {\r\n                        left =\r\n                            Utils.getScrollX() + rootElementBounds.left - popupElementBounds.width;\r\n\r\n                        this._popupElement.classList.add(\r\n                            ...this.hostConfig.makeCssClassNames(\r\n                                \"ac-ctrl-slide\",\r\n                                \"ac-ctrl-slideRightToLeft\"\r\n                            )\r\n                        );\r\n                    }\r\n                }\r\n            } else {\r\n                // Enough space above or below root element\r\n                if (availableSpaceBelow >= popupElementBounds.height) {\r\n                    top = Utils.getScrollY() + rootElementBounds.bottom;\r\n\r\n                    this._popupElement.classList.add(\r\n                        ...this.hostConfig.makeCssClassNames(\r\n                            \"ac-ctrl-slide\",\r\n                            \"ac-ctrl-slideTopToBottom\"\r\n                        )\r\n                    );\r\n                } else {\r\n                    top = Utils.getScrollY() + rootElementBounds.top - popupElementBounds.height;\r\n\r\n                    this._popupElement.classList.add(\r\n                        ...this.hostConfig.makeCssClassNames(\r\n                            \"ac-ctrl-slide\",\r\n                            \"ac-ctrl-slideBottomToTop\"\r\n                        )\r\n                    );\r\n                }\r\n\r\n                if (availableSpaceRight < popupElementBounds.width) {\r\n                    left = Utils.getScrollX() + rootElementBounds.right - popupElementBounds.width;\r\n                }\r\n            }\r\n\r\n            this._popupElement.style.left = left + \"px\";\r\n            this._popupElement.style.top = top + \"px\";\r\n\r\n            this._popupElement.focus();\r\n\r\n            this._isOpen = true;\r\n        }\r\n    }\r\n\r\n    closePopup(wasCancelled: boolean) {\r\n        if (this._isOpen) {\r\n            document.body.removeChild(this._overlayElement);\r\n\r\n            this._isOpen = false;\r\n\r\n            if (this.onClose) {\r\n                this.onClose(this, wasCancelled);\r\n            }\r\n        }\r\n    }\r\n\r\n    get hostConfig(): HostConfig {\r\n        return this._hostConfig ? this._hostConfig : defaultHostConfig;\r\n    }\r\n\r\n    set hostConfig(value: HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get isOpen(): boolean {\r\n        return this._isOpen;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Constants } from \"./constants\";\r\nimport { Collection } from \"./collection\";\r\nimport { PopupControl } from \"./popup-control\";\r\nimport { MenuItem } from \"./menu-item\";\r\n\r\nexport class PopupMenu extends PopupControl {\r\n    private _items: Collection<MenuItem> = new Collection<MenuItem>();\r\n    private _renderedItems: Array<HTMLElement> = [];\r\n    private _selectedIndex: number = -1;\r\n\r\n    protected renderContent(): HTMLElement {\r\n        const element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-ctrl ac-popup\");\r\n        element.setAttribute(\"role\", \"listbox\");\r\n\r\n        for (let i = 0; i < this._items.length; i++) {\r\n            const renderedItem = this._items.get(i).render(this.hostConfig);\r\n            renderedItem.tabIndex = 0;\r\n\r\n            element.appendChild(renderedItem);\r\n\r\n            if (i === this.selectedIndex) {\r\n                renderedItem.focus();\r\n            }\r\n\r\n            this._renderedItems.push(renderedItem);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    keyDown(e: KeyboardEvent) {\r\n        super.keyDown(e);\r\n\r\n        let selectedItemIndex = this._selectedIndex;\r\n\r\n        switch (e.key) {\r\n            case Constants.keys.tab:\r\n                this.closePopup(true);\r\n\r\n                break;\r\n            /*\r\n            case Constants.keys.enter:\r\n                if (this.selectedIndex >= 0) {\r\n                    this.selectedIndex = this.selectedIndex;\r\n\r\n                    this.close();\r\n                }\r\n\r\n                break;\r\n            */\r\n            case Constants.keys.up:\r\n                if (selectedItemIndex <= 0) {\r\n                    selectedItemIndex = this._renderedItems.length - 1;\r\n                } else {\r\n                    selectedItemIndex--;\r\n\r\n                    if (selectedItemIndex < 0) {\r\n                        selectedItemIndex = this._renderedItems.length - 1;\r\n                    }\r\n                }\r\n\r\n                this.selectedIndex = selectedItemIndex;\r\n\r\n                e.cancelBubble = true;\r\n\r\n                break;\r\n            case Constants.keys.down:\r\n                if (selectedItemIndex < 0) {\r\n                    selectedItemIndex = 0;\r\n                } else {\r\n                    selectedItemIndex++;\r\n\r\n                    if (selectedItemIndex >= this._renderedItems.length) {\r\n                        selectedItemIndex = 0;\r\n                    }\r\n                }\r\n\r\n                this.selectedIndex = selectedItemIndex;\r\n\r\n                e.cancelBubble = true;\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    get items(): Collection<MenuItem> {\r\n        return this._items;\r\n    }\r\n\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(index: number) {\r\n        if (index >= 0 && index < this._renderedItems.length) {\r\n            this._renderedItems[index].focus();\r\n\r\n            this._selectedIndex = index;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/*\r\n    This should really be a string enum, e.g.\r\n\r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n\r\n    Also note the \"weird\" way these readonly fields are declared is to work around\r\n    a breaking change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    and adopt this syntax for all other static readonly fields.\r\n*/\r\n/* eslint-disable @typescript-eslint/no-extraneous-class, @typescript-eslint/naming-convention */\r\nexport class ContainerStyle {\r\n    static readonly Default: \"default\" = \"default\";\r\n    static readonly Emphasis: \"emphasis\" = \"emphasis\";\r\n    static readonly Accent: \"accent\" = \"accent\";\r\n    static readonly Good: \"good\" = \"good\";\r\n    static readonly Attention: \"attention\" = \"attention\";\r\n    static readonly Warning: \"warning\" = \"warning\";\r\n}\r\n\r\nexport class ActionStyle {\r\n    static readonly Default: \"default\" = \"default\";\r\n    static readonly Positive: \"positive\" = \"positive\";\r\n    static readonly Destructive: \"destructive\" = \"destructive\";\r\n}\r\n\r\nexport class ActionMode {\r\n    static readonly Primary: \"primary\" = \"primary\";\r\n    static readonly Secondary: \"secondary\" = \"secondary\";\r\n}\r\n/* eslint-enable @typescript-eslint/no-extraneous-class, @typescript-eslint/naming-convention */\r\n\r\nexport enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum ImageSize {\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum SizeUnit {\r\n    Weight,\r\n    Pixel\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum FontType {\r\n    Default,\r\n    Monospace\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Dark,\r\n    Light,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum FillMode {\r\n    Cover,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ActionIconPlacement {\r\n    LeftOfTitle,\r\n    AboveTitle\r\n}\r\n\r\nexport enum InputTextStyle {\r\n    Text,\r\n    Tel,\r\n    Url,\r\n    Email,\r\n    Password\r\n}\r\n\r\nexport enum ValidationPhase {\r\n    Parse,\r\n    ToJSON,\r\n    Validation\r\n}\r\n\r\nexport enum ValidationEvent {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion,\r\n    DuplicateId,\r\n    UnsupportedProperty,\r\n    RequiredInputsShouldHaveLabel,\r\n    RequiredInputsShouldHaveErrorMessage,\r\n    Other\r\n}\r\n\r\nexport enum ContainerFitStatus {\r\n    FullyInContainer,\r\n    Overflowing,\r\n    FullyOutOfContainer\r\n}\r\n\r\nexport enum TypeErrorType {\r\n    UnknownType,\r\n    ForbiddenType\r\n}\r\n\r\nexport enum RefreshMode {\r\n    Disabled,\r\n    Manual,\r\n    Automatic\r\n}\r\n\r\nexport enum LogLevel {\r\n    Info,\r\n    Warning,\r\n    Error\r\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport {\r\n    TargetVersion,\r\n    Version,\r\n    SerializableObject,\r\n    BaseSerializationContext,\r\n    PropertyBag\r\n} from \"./serialization\";\r\n\r\nexport class HostCapabilities extends SerializableObject {\r\n    private _capabilities: { [key: string]: TargetVersion } = {};\r\n\r\n    protected getSchemaKey(): string {\r\n        return \"HostCapabilities\";\r\n    }\r\n\r\n    protected internalParse(source: any, context: BaseSerializationContext) {\r\n        super.internalParse(source, context);\r\n\r\n        if (source) {\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const name in source) {\r\n                const jsonVersion = source[name];\r\n\r\n                if (typeof jsonVersion === \"string\") {\r\n                    if (jsonVersion === \"*\") {\r\n                        this.addCapability(name, \"*\");\r\n                    } else {\r\n                        const version = Version.parse(jsonVersion, context);\r\n\r\n                        if (version?.isValid) {\r\n                            this.addCapability(name, version);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: BaseSerializationContext) {\r\n        super.internalToJSON(target, context);\r\n\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const key in this._capabilities) {\r\n            target[key] = this._capabilities[key];\r\n        }\r\n    }\r\n\r\n    addCapability(name: string, version: TargetVersion) {\r\n        this._capabilities[name] = version;\r\n    }\r\n\r\n    removeCapability(name: string) {\r\n        delete this._capabilities[name];\r\n    }\r\n\r\n    clear() {\r\n        this._capabilities = {};\r\n    }\r\n\r\n    hasCapability(name: string, version: TargetVersion): boolean {\r\n        if (this._capabilities.hasOwnProperty(name)) {\r\n            if (version === \"*\" || this._capabilities[name] === \"*\") {\r\n                return true;\r\n            }\r\n\r\n            return version.compareTo(<Version>this._capabilities[name]) <= 0;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    areAllMet(hostCapabilities: HostCapabilities): boolean {\r\n        for (const capabilityName in this._capabilities) {\r\n            if (\r\n                !hostCapabilities.hasCapability(capabilityName, this._capabilities[capabilityName])\r\n            ) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as Shared from \"./shared\";\r\nimport { HostCapabilities } from \"./host-capabilities\";\r\n\r\nfunction parseHostConfigEnum(\r\n    targetEnum: { [s: number]: string },\r\n    value: string | number,\r\n    defaultValue: number\r\n): number {\r\n    if (typeof value === \"string\") {\r\n        const parsedValue = Utils.parseEnum(targetEnum, value, defaultValue);\r\n\r\n        return parsedValue !== undefined ? parsedValue : defaultValue;\r\n    } else if (typeof value === \"number\") {\r\n        return value;\r\n    } else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport class ColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(defaultColor?: string, subtleColor?: string) {\r\n        if (defaultColor) {\r\n            this.default = defaultColor;\r\n        }\r\n\r\n        if (subtleColor) {\r\n            this.subtle = subtleColor;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextColorDefinition extends ColorDefinition {\r\n    readonly highlightColors = new ColorDefinition(\"#22000000\", \"#11000000\");\r\n\r\n    parse(obj?: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.highlightColors.parse(obj[\"highlightColors\"]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.parseNumber(obj[\"maxImageHeight\"], 100)!;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        };\r\n    }\r\n}\r\n\r\nexport class MediaConfig {\r\n    defaultPoster?: string;\r\n    allowInlinePlayback: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        };\r\n    }\r\n}\r\n\r\nexport class TableConfig {\r\n    cellSpacing: number = 8;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.cellSpacing =\r\n                obj.cellSpacing && typeof obj.cellSpacing === \"number\"\r\n                    ? obj.cellSpacing\r\n                    : this.cellSpacing;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            cellSpacing: this.cellSpacing\r\n        };\r\n    }\r\n}\r\n\r\nexport class BaseTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.size = parseHostConfigEnum(Enums.TextSize, obj[\"size\"], this.size);\r\n            this.color = parseHostConfigEnum(Enums.TextColor, obj[\"color\"], this.color);\r\n            this.isSubtle =\r\n                obj.isSubtle !== undefined && typeof obj.isSubtle === \"boolean\"\r\n                    ? obj.isSubtle\r\n                    : this.isSubtle;\r\n            this.weight = parseHostConfigEnum(\r\n                Enums.TextWeight,\r\n                obj[\"weight\"],\r\n                this.getDefaultWeight()\r\n            );\r\n        }\r\n    }\r\n\r\n    getDefaultWeight(): Enums.TextWeight {\r\n        return Enums.TextWeight.Default;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight]\r\n        };\r\n    }\r\n}\r\n\r\nexport class TextStyleDefinition extends BaseTextDefinition {\r\n    fontType: Enums.FontType = Enums.FontType.Default;\r\n\r\n    parse(obj: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.fontType = parseHostConfigEnum(Enums.FontType, obj.fontType, this.fontType);\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextStyleSet {\r\n    readonly default: TextStyleDefinition = new TextStyleDefinition();\r\n    readonly heading: TextStyleDefinition = new TextStyleDefinition({\r\n        size: \"Large\",\r\n        weight: \"Bolder\"\r\n    });\r\n    readonly columnHeader: TextStyleDefinition = new TextStyleDefinition({\r\n        weight: \"Bolder\"\r\n    });\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.heading.parse(obj.heading);\r\n            this.columnHeader.parse(obj.columnHeader);\r\n        }\r\n    }\r\n\r\n    getStyleByName(name: string): TextStyleDefinition {\r\n        switch (name.toLowerCase()) {\r\n            case \"heading\":\r\n                return this.heading;\r\n            case \"columnHeader\":\r\n                return this.columnHeader;\r\n            default:\r\n                return this.default;\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextBlockConfig {\r\n    headingLevel?: number;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.headingLevel = Utils.parseNumber(obj.headingLevel);\r\n        }\r\n    }\r\n}\r\n\r\nexport class RequiredInputLabelTextDefinition extends BaseTextDefinition {\r\n    suffix?: string = \" *\";\r\n    suffixColor: Enums.TextColor = Enums.TextColor.Attention;\r\n\r\n    parse(obj?: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.suffix = obj[\"suffix\"] || this.suffix;\r\n            this.suffixColor = parseHostConfigEnum(\r\n                Enums.TextColor,\r\n                obj[\"suffixColor\"],\r\n                this.suffixColor\r\n            );\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        const result = super.toJSON();\r\n        result[\"suffix\"] = this.suffix;\r\n        result[\"suffixColor\"] = Enums.TextColor[this.suffixColor];\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class InputLabelConfig {\r\n    inputSpacing: Enums.Spacing = Enums.Spacing.Small;\r\n    readonly requiredInputs: RequiredInputLabelTextDefinition =\r\n        new RequiredInputLabelTextDefinition();\r\n    readonly optionalInputs: BaseTextDefinition = new BaseTextDefinition();\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.inputSpacing = parseHostConfigEnum(\r\n                Enums.Spacing,\r\n                obj[\"inputSpacing\"],\r\n                this.inputSpacing\r\n            );\r\n            this.requiredInputs = new RequiredInputLabelTextDefinition(obj[\"requiredInputs\"]);\r\n            this.optionalInputs = new BaseTextDefinition(obj[\"optionalInputs\"]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class InputConfig {\r\n    readonly label: InputLabelConfig = new InputLabelConfig();\r\n    readonly errorMessage: BaseTextDefinition = new BaseTextDefinition({\r\n        color: Enums.TextColor.Attention\r\n    });\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.label = new InputLabelConfig(obj[\"label\"]);\r\n            this.errorMessage = new BaseTextDefinition(obj[\"errorMessage\"]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition extends BaseTextDefinition {\r\n    wrap: boolean = true;\r\n\r\n    parse(obj?: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        const result = super.toJSON();\r\n        result[\"wrap\"] = this.wrap;\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n            this.weight = parseHostConfigEnum(\r\n                Enums.TextWeight,\r\n                obj[\"weight\"],\r\n                Enums.TextWeight.Bolder\r\n            );\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n        return Enums.TextWeight.Bolder;\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing =\r\n                obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = parseHostConfigEnum(\r\n                Enums.ShowCardActionMode,\r\n                obj[\"actionMode\"],\r\n                Enums.ShowCardActionMode.Inline\r\n            );\r\n            this.inlineTopMargin =\r\n                obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style =\r\n                obj[\"style\"] && typeof obj[\"style\"] === \"string\"\r\n                    ? obj[\"style\"]\r\n                    : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        };\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n    iconPlacement: Enums.ActionIconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n    allowTitleToWrap: boolean = false;\r\n    iconSize: number = 16;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = parseHostConfigEnum(\r\n                Enums.Spacing,\r\n                obj.spacing && obj.spacing,\r\n                Enums.Spacing.Default\r\n            );\r\n            this.buttonSpacing =\r\n                obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.parseBool(\r\n                obj[\"preExpandSingleShowCardAction\"],\r\n                false\r\n            );\r\n            this.actionsOrientation = parseHostConfigEnum(\r\n                Enums.Orientation,\r\n                obj[\"actionsOrientation\"],\r\n                Enums.Orientation.Horizontal\r\n            );\r\n            this.actionAlignment = parseHostConfigEnum(\r\n                Enums.ActionAlignment,\r\n                obj[\"actionAlignment\"],\r\n                Enums.ActionAlignment.Left\r\n            );\r\n            this.iconPlacement = parseHostConfigEnum(\r\n                Enums.ActionIconPlacement,\r\n                obj[\"iconPlacement\"],\r\n                Enums.ActionIconPlacement.LeftOfTitle\r\n            );\r\n            this.allowTitleToWrap =\r\n                obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n\r\n            try {\r\n                const sizeAndUnit = Shared.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n\r\n                if (sizeAndUnit.unit === Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            } catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        };\r\n    }\r\n}\r\n\r\nexport class ColorSetDefinition {\r\n    private parseSingleColor(obj: any, propertyName: string) {\r\n        if (obj) {\r\n            ((<any>this)[propertyName] as TextColorDefinition).parse(obj[propertyName]);\r\n        }\r\n    }\r\n\r\n    default: TextColorDefinition = new TextColorDefinition();\r\n    dark: TextColorDefinition = new TextColorDefinition();\r\n    light: TextColorDefinition = new TextColorDefinition();\r\n    accent: TextColorDefinition = new TextColorDefinition();\r\n    good: TextColorDefinition = new TextColorDefinition();\r\n    warning: TextColorDefinition = new TextColorDefinition();\r\n    attention: TextColorDefinition = new TextColorDefinition();\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.parseSingleColor(obj, \"default\");\r\n            this.parseSingleColor(obj, \"dark\");\r\n            this.parseSingleColor(obj, \"light\");\r\n            this.parseSingleColor(obj, \"accent\");\r\n            this.parseSingleColor(obj, \"good\");\r\n            this.parseSingleColor(obj, \"warning\");\r\n            this.parseSingleColor(obj, \"attention\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors: ColorSetDefinition = new ColorSetDefinition({\r\n        \"default\": { default: \"#333333\", subtle: \"#EE333333\" },\r\n        \"dark\": { default: \"#000000\", subtle: \"#66000000\" },\r\n        \"light\": { default: \"#FFFFFF\", subtle: \"#33000000\" },\r\n        \"accent\": { default: \"#2E89FC\", subtle: \"#882E89FC\" },\r\n        \"good\": { default: \"#028A02\", subtle: \"#DD027502\" },\r\n        \"warning\": { default: \"#E69500\", subtle: \"#DDE69500\" },\r\n        \"attention\": { default: \"#CC3300\", subtle: \"#DDCC3300\" }\r\n    });\r\n\r\n    highlightBackgroundColor?: string;\r\n    highlightForegroundColor?: string;\r\n    borderColor?: string;\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            this.foregroundColors.parse(obj[\"foregroundColors\"]);\r\n\r\n            this.highlightBackgroundColor = obj[\"highlightBackgroundColor\"];\r\n            this.highlightForegroundColor = obj[\"highlightForegroundColor\"];\r\n\r\n            this.borderColor = obj[\"borderColor\"];\r\n        }\r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ILineHeightDefinitions {\r\n    small: number;\r\n    medium: number;\r\n    default: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: { [key: string]: ContainerStyleDefinition } = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(\r\n                obj[Enums.ContainerStyle.Emphasis]\r\n            );\r\n            this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]);\r\n            this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]);\r\n            this._allStyles[Enums.ContainerStyle.Attention].parse(\r\n                obj[Enums.ContainerStyle.Attention]\r\n            );\r\n            this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (const customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        const styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            } else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(\r\n                                    customStyle[\"style\"]\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        const customStyleArray: any[] = [];\r\n\r\n        Object.keys(this._allStyles).forEach((key) => {\r\n            if (!this._allStyles[key].isBuiltIn) {\r\n                customStyleArray.push({\r\n                    name: key,\r\n                    style: this._allStyles[key]\r\n                });\r\n            }\r\n        });\r\n\r\n        const result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        };\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(\r\n        name: string | undefined,\r\n        defaultValue?: ContainerStyleDefinition\r\n    ): ContainerStyleDefinition {\r\n        if (name && this._allStyles.hasOwnProperty(name)) {\r\n            return this._allStyles[name];\r\n        } else {\r\n            return defaultValue ? defaultValue : this._allStyles[Enums.ContainerStyle.Default];\r\n        }\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport interface IFontSizeDefinitions {\r\n    small: number;\r\n    default: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport interface IFontWeightDefinitions {\r\n    lighter: number;\r\n    default: number;\r\n    bolder: number;\r\n}\r\n\r\nexport class FontTypeDefinition {\r\n    static readonly monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n\r\n    fontSizes: IFontSizeDefinitions = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n\r\n    fontWeights: IFontWeightDefinitions = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n\r\n    constructor(fontFamily?: string) {\r\n        if (fontFamily) {\r\n            this.fontFamily = fontFamily;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n        this.fontSizes = {\r\n            small: (obj.fontSizes && obj.fontSizes[\"small\"]) || this.fontSizes.small,\r\n            default: (obj.fontSizes && obj.fontSizes[\"default\"]) || this.fontSizes.default,\r\n            medium: (obj.fontSizes && obj.fontSizes[\"medium\"]) || this.fontSizes.medium,\r\n            large: (obj.fontSizes && obj.fontSizes[\"large\"]) || this.fontSizes.large,\r\n            extraLarge: (obj.fontSizes && obj.fontSizes[\"extraLarge\"]) || this.fontSizes.extraLarge\r\n        };\r\n        this.fontWeights = {\r\n            lighter: (obj.fontWeights && obj.fontWeights[\"lighter\"]) || this.fontWeights.lighter,\r\n            default: (obj.fontWeights && obj.fontWeights[\"default\"]) || this.fontWeights.default,\r\n            bolder: (obj.fontWeights && obj.fontWeights[\"bolder\"]) || this.fontWeights.bolder\r\n        };\r\n    }\r\n}\r\n\r\nexport class FontTypeSet {\r\n    default: FontTypeDefinition;\r\n    monospace: FontTypeDefinition;\r\n\r\n    constructor(obj?: any) {\r\n        this.default = new FontTypeDefinition();\r\n        this.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n        if (obj) {\r\n            this.default.parse(obj[\"default\"]);\r\n            this.monospace.parse(obj[\"monospace\"]);\r\n        }\r\n    }\r\n\r\n    getStyleDefinition(style: Enums.FontType | undefined): FontTypeDefinition {\r\n        switch (style) {\r\n            case Enums.FontType.Monospace:\r\n                return this.monospace;\r\n            case Enums.FontType.Default:\r\n            default:\r\n                return this.default;\r\n        }\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    readonly hostCapabilities = new HostCapabilities();\r\n\r\n    private _legacyFontType: FontTypeDefinition;\r\n\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n    lineHeights?: ILineHeightDefinitions;\r\n    fontTypes?: FontTypeSet;\r\n\r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly inputs: InputConfig = new InputConfig();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly media: MediaConfig = new MediaConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n    readonly table: TableConfig = new TableConfig();\r\n    readonly textStyles: TextStyleSet = new TextStyleSet();\r\n    readonly textBlock: TextBlockConfig = new TextBlockConfig();\r\n\r\n    cssClassNamePrefix?: string;\r\n    alwaysAllowBleed: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator =\r\n                obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\"\r\n                    ? obj[\"choiceSetInputValueSeparator\"]\r\n                    : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity =\r\n                obj && typeof obj[\"supportsInteractivity\"] === \"boolean\"\r\n                    ? obj[\"supportsInteractivity\"]\r\n                    : this.supportsInteractivity;\r\n\r\n            this._legacyFontType = new FontTypeDefinition();\r\n            this._legacyFontType.parse(obj);\r\n\r\n            if (obj.fontTypes) {\r\n                this.fontTypes = new FontTypeSet(obj.fontTypes);\r\n            }\r\n\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            }\r\n\r\n            this.imageSizes = {\r\n                small: (obj.imageSizes && obj.imageSizes[\"small\"]) || this.imageSizes.small,\r\n                medium: (obj.imageSizes && obj.imageSizes[\"medium\"]) || this.imageSizes.medium,\r\n                large: (obj.imageSizes && obj.imageSizes[\"large\"]) || this.imageSizes.large\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: (obj.spacing && obj.spacing[\"small\"]) || this.spacing.small,\r\n                default: (obj.spacing && obj.spacing[\"default\"]) || this.spacing.default,\r\n                medium: (obj.spacing && obj.spacing[\"medium\"]) || this.spacing.medium,\r\n                large: (obj.spacing && obj.spacing[\"large\"]) || this.spacing.large,\r\n                extraLarge: (obj.spacing && obj.spacing[\"extraLarge\"]) || this.spacing.extraLarge,\r\n                padding: (obj.spacing && obj.spacing[\"padding\"]) || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness:\r\n                    (obj.separator && obj.separator[\"lineThickness\"]) ||\r\n                    this.separator.lineThickness,\r\n                lineColor: (obj.separator && obj.separator[\"lineColor\"]) || this.separator.lineColor\r\n            };\r\n\r\n            this.inputs = new InputConfig(obj.inputs || this.inputs);\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"]);\r\n            this.textStyles = new TextStyleSet(obj[\"textStyles\"]);\r\n            this.textBlock = new TextBlockConfig(obj[\"textBlock\"]);\r\n        }\r\n    }\r\n\r\n    getFontTypeDefinition(style?: Enums.FontType): FontTypeDefinition {\r\n        if (this.fontTypes) {\r\n            return this.fontTypes.getStyleDefinition(style);\r\n        } else {\r\n            return style === Enums.FontType.Monospace\r\n                ? FontTypeDefinition.monospace\r\n                : this._legacyFontType;\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    paddingDefinitionToSpacingDefinition(\r\n        paddingDefinition: Shared.PaddingDefinition\r\n    ): Shared.SpacingDefinition {\r\n        return new Shared.SpacingDefinition(\r\n            this.getEffectiveSpacing(paddingDefinition.top),\r\n            this.getEffectiveSpacing(paddingDefinition.right),\r\n            this.getEffectiveSpacing(paddingDefinition.bottom),\r\n            this.getEffectiveSpacing(paddingDefinition.left)\r\n        );\r\n    }\r\n\r\n    makeCssClassNames(...classNames: string[]): string[] {\r\n        const result: string[] = [];\r\n\r\n        for (const className of classNames) {\r\n            result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + \"-\" : \"\") + className);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    makeCssClassName(...classNames: string[]): string {\r\n        const result = this.makeCssClassNames(...classNames).join(\" \");\r\n\r\n        return result ? result : \"\";\r\n    }\r\n\r\n    get fontFamily(): string | undefined {\r\n        return this._legacyFontType.fontFamily;\r\n    }\r\n\r\n    set fontFamily(value: string | undefined) {\r\n        this._legacyFontType.fontFamily = value;\r\n    }\r\n\r\n    get fontSizes(): IFontSizeDefinitions {\r\n        return this._legacyFontType.fontSizes;\r\n    }\r\n\r\n    get fontWeights(): IFontWeightDefinitions {\r\n        return this._legacyFontType.fontWeights;\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const defaultHostConfig: HostConfig = new HostConfig({\r\n    supportsInteractivity: true,\r\n    spacing: {\r\n        small: 10,\r\n        default: 20,\r\n        medium: 30,\r\n        large: 40,\r\n        extraLarge: 50,\r\n        padding: 20\r\n    },\r\n    separator: {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    },\r\n    fontTypes: {\r\n        default: {\r\n            fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n            fontSizes: {\r\n                small: 12,\r\n                default: 14,\r\n                medium: 17,\r\n                large: 21,\r\n                extraLarge: 26\r\n            },\r\n            fontWeights: {\r\n                lighter: 200,\r\n                default: 400,\r\n                bolder: 600\r\n            }\r\n        },\r\n        monospace: {\r\n            fontFamily: \"'Courier New', Courier, monospace\",\r\n            fontSizes: {\r\n                small: 12,\r\n                default: 14,\r\n                medium: 17,\r\n                large: 21,\r\n                extraLarge: 26\r\n            },\r\n            fontWeights: {\r\n                lighter: 200,\r\n                default: 400,\r\n                bolder: 600\r\n            }\r\n        }\r\n    },\r\n    imageSizes: {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    },\r\n    containerStyles: {\r\n        default: {\r\n            backgroundColor: \"#FFFFFF\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#028A02\",\r\n                    subtle: \"#DD027502\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        emphasis: {\r\n            backgroundColor: \"#08000000\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#028A02\",\r\n                    subtle: \"#DD027502\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        accent: {\r\n            backgroundColor: \"#C7DEF9\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#028A02\",\r\n                    subtle: \"#DD027502\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        good: {\r\n            backgroundColor: \"#CCFFCC\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#028A02\",\r\n                    subtle: \"#DD027502\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        attention: {\r\n            backgroundColor: \"#FFC5B2\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#028A02\",\r\n                    subtle: \"#DD027502\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        warning: {\r\n            backgroundColor: \"#FFE2B2\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#028A02\",\r\n                    subtle: \"#DD027502\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    inputs: {\r\n        label: {\r\n            requiredInputs: {\r\n                weight: Enums.TextWeight.Bolder,\r\n                suffix: \" *\",\r\n                suffixColor: Enums.TextColor.Attention\r\n            },\r\n            optionalInputs: {\r\n                weight: Enums.TextWeight.Bolder\r\n            }\r\n        },\r\n        errorMessage: {\r\n            color: Enums.TextColor.Attention,\r\n            weight: Enums.TextWeight.Bolder\r\n        }\r\n    },\r\n    actions: {\r\n        maxActions: 5,\r\n        spacing: Enums.Spacing.Default,\r\n        buttonSpacing: 10,\r\n        showCard: {\r\n            actionMode: Enums.ShowCardActionMode.Inline,\r\n            inlineTopMargin: 16\r\n        },\r\n        actionsOrientation: Enums.Orientation.Horizontal,\r\n        actionAlignment: Enums.ActionAlignment.Left\r\n    },\r\n    adaptiveCard: {\r\n        allowCustomStyle: false\r\n    },\r\n    imageSet: {\r\n        imageSize: Enums.Size.Medium,\r\n        maxImageHeight: 100\r\n    },\r\n    factSet: {\r\n        title: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Bolder,\r\n            wrap: true,\r\n            maxWidth: 150\r\n        },\r\n        value: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Default,\r\n            wrap: true\r\n        },\r\n        spacing: 10\r\n    }\r\n});\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CardElement, Action } from \"./card-elements\";\r\nimport { SerializableObject, Version, Versions } from \"./serialization\";\r\n\r\n/**\r\n * Describes whether a certain element can be parsed in a \"singleton\" context.\r\n * Specifically, is the element allowed to exist as an object in a context where the\r\n * parent expects an Array of elements (e.g. `AdaptiveCard.body`)\r\n *\r\n * @example - Singleton element in a container (note `items` contains an `object` rather than an `Array<object>`)\r\n * ```json\r\n * {\r\n *     \"type\": \"Container\",\r\n *     \"items\": {\r\n *         \"type\": \"AllowedSingletonElement\"\r\n *     }\r\n * }\r\n * ```\r\n */\r\nexport enum ElementSingletonBehavior {\r\n    /** Element only valid in a singleton context. */\r\n    Only,\r\n    /** Element is allowed in a singleton context, but not required to be a singleton. */\r\n    Allowed,\r\n    /** Element is not allowed to exist in a singleton context. */\r\n    NotAllowed\r\n}\r\n\r\nexport interface ITypeRegistration<T extends SerializableObject> {\r\n    typeName: string;\r\n    objectType: { new (): T };\r\n    schemaVersion: Version;\r\n    singletonBehavior: ElementSingletonBehavior;\r\n}\r\n\r\nexport class CardObjectRegistry<T extends SerializableObject> {\r\n    private _items: { [typeName: string]: ITypeRegistration<T> } = {};\r\n\r\n    findByName(typeName: string): ITypeRegistration<T> | undefined {\r\n        return this._items.hasOwnProperty(typeName) ? this._items[typeName] : undefined;\r\n    }\r\n\r\n    clear() {\r\n        this._items = {};\r\n    }\r\n\r\n    copyTo(target: CardObjectRegistry<T>) {\r\n        const keys = Object.keys(this._items);\r\n\r\n        for (const key of keys) {\r\n            const typeRegistration = this._items[key];\r\n\r\n            target.register(\r\n                typeRegistration.typeName,\r\n                typeRegistration.objectType,\r\n                typeRegistration.schemaVersion,\r\n                typeRegistration.singletonBehavior\r\n            );\r\n        }\r\n    }\r\n\r\n    register(\r\n        typeName: string,\r\n        objectType: { new (): T },\r\n        schemaVersion: Version = Versions.v1_0,\r\n        singletonBehavior: ElementSingletonBehavior = ElementSingletonBehavior.NotAllowed\r\n    ) {\r\n        let registrationInfo = this.findByName(typeName);\r\n\r\n        if (registrationInfo !== undefined) {\r\n            registrationInfo.objectType = objectType;\r\n        } else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                objectType: objectType,\r\n                schemaVersion: schemaVersion,\r\n                singletonBehavior: singletonBehavior\r\n            };\r\n        }\r\n\r\n        this._items[typeName] = registrationInfo;\r\n    }\r\n\r\n    unregister(typeName: string) {\r\n        delete this._items[typeName];\r\n    }\r\n\r\n    createInstance(typeName: string, targetVersion: Version): T | undefined {\r\n        const registrationInfo = this.findByName(typeName);\r\n\r\n        return registrationInfo && registrationInfo.schemaVersion.compareTo(targetVersion) <= 0\r\n            ? new registrationInfo.objectType()\r\n            : undefined;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return Object.keys(this._items).length;\r\n    }\r\n\r\n    getItemAt(index: number): ITypeRegistration<T> {\r\n        return Object.keys(this._items).map((e) => this._items[e])[index];\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\r\nexport class GlobalRegistry {\r\n    private static _elements?: CardObjectRegistry<CardElement>;\r\n    private static _actions?: CardObjectRegistry<Action>;\r\n\r\n    static populateWithDefaultElements(registry: CardObjectRegistry<CardElement>) {\r\n        registry.clear();\r\n\r\n        GlobalRegistry.defaultElements.copyTo(registry);\r\n    }\r\n\r\n    static populateWithDefaultActions(registry: CardObjectRegistry<Action>) {\r\n        registry.clear();\r\n\r\n        GlobalRegistry.defaultActions.copyTo(registry);\r\n    }\r\n\r\n    static readonly defaultElements = new CardObjectRegistry<CardElement>();\r\n    static readonly defaultActions = new CardObjectRegistry<Action>();\r\n    static get elements(): CardObjectRegistry<CardElement> {\r\n        if (!GlobalRegistry._elements) {\r\n            GlobalRegistry._elements = new CardObjectRegistry<CardElement>();\r\n            GlobalRegistry.populateWithDefaultElements(GlobalRegistry._elements);\r\n        }\r\n\r\n        return GlobalRegistry._elements;\r\n    }\r\n\r\n    static get actions(): CardObjectRegistry<Action> {\r\n        if (!GlobalRegistry._actions) {\r\n            GlobalRegistry._actions = new CardObjectRegistry<Action>();\r\n            GlobalRegistry.populateWithDefaultActions(GlobalRegistry._actions);\r\n        }\r\n\r\n        return GlobalRegistry._actions;\r\n    }\r\n\r\n    static reset() {\r\n        GlobalRegistry._elements = undefined;\r\n        GlobalRegistry._actions = undefined;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { GlobalSettings, SizeAndUnit } from \"./shared\";\r\nimport * as Utils from \"./utils\";\r\nimport * as Enums from \"./enums\";\r\nimport { Strings } from \"./strings\";\r\n\r\nexport interface IValidationEvent {\r\n    source?: SerializableObject;\r\n    phase: Enums.ValidationPhase;\r\n    event: Enums.ValidationEvent;\r\n    message: string;\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n    private _label?: string;\r\n\r\n    constructor(major: number = 1, minor: number = 1, label?: string) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n        this._label = label;\r\n    }\r\n\r\n    static parse(versionString: string, context: BaseSerializationContext): Version | undefined {\r\n        if (!versionString) {\r\n            return undefined;\r\n        }\r\n\r\n        const result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        const regEx = /(\\d+).(\\d+)/gi;\r\n        const matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length === 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        } else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        if (!result._isValid) {\r\n            context.logParseEvent(\r\n                undefined,\r\n                Enums.ValidationEvent.InvalidPropertyValue,\r\n                Strings.errors.invalidVersionString(result._versionString)\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return this.toString();\r\n    }\r\n\r\n    compareTo(otherVersion: Version): number {\r\n        if (!this.isValid || !otherVersion.isValid) {\r\n            throw new Error(\"Cannot compare invalid version.\");\r\n        }\r\n\r\n        if (this.major > otherVersion.major) {\r\n            return 1;\r\n        } else if (this.major < otherVersion.major) {\r\n            return -1;\r\n        } else if (this.minor > otherVersion.minor) {\r\n            return 1;\r\n        } else if (this.minor < otherVersion.minor) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    get label(): string {\r\n        return this._label ? this._label : this.toString();\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nexport type TargetVersion = Version | \"*\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\r\nexport class Versions {\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static readonly v1_0 = new Version(1, 0);\r\n    static readonly v1_1 = new Version(1, 1);\r\n    static readonly v1_2 = new Version(1, 2);\r\n    static readonly v1_3 = new Version(1, 3);\r\n    static readonly v1_4 = new Version(1, 4);\r\n    static readonly v1_5 = new Version(1, 5);\r\n    // If preview tag is added/removed from any version,\r\n    // don't forget to update .ac-schema-version-1-?::after too in adaptivecards-site\\themes\\adaptivecards\\source\\css\\style.css\r\n    static readonly v1_6 = new Version(1, 6, \"1.6 Preview\");\r\n    static readonly latest = Versions.v1_5;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    static getAllDeclaredVersions(): Version[] {\r\n        const ctor = <any>Versions;\r\n        const properties: Version[] = [];\r\n\r\n        for (const propertyName in ctor) {\r\n            if (propertyName.match(/^v[0-9_]*$/)) {\r\n                // filter latest\r\n                try {\r\n                    const propertyValue = ctor[propertyName];\r\n\r\n                    if (propertyValue instanceof Version) {\r\n                        properties.push(propertyValue);\r\n                    }\r\n                } catch {\r\n                    // If a property happens to have a getter function and\r\n                    // it throws an exception, we need to catch it here\r\n                }\r\n            }\r\n        }\r\n        return properties.sort((v1: Version, v2: Version) => v1.compareTo(v2));\r\n    }\r\n}\r\n\r\nexport function isVersionLessOrEqual(\r\n    version: TargetVersion,\r\n    targetVersion: TargetVersion\r\n): boolean {\r\n    if (version instanceof Version) {\r\n        if (targetVersion instanceof Version) {\r\n            return targetVersion.compareTo(version) >= 0;\r\n        } else {\r\n            // Target version is *\r\n            return true;\r\n        }\r\n    } else {\r\n        // Version is *\r\n        return true;\r\n    }\r\n}\r\n\r\nexport abstract class BaseSerializationContext {\r\n    private _validationEvents: IValidationEvent[] = [];\r\n\r\n    toJSONOriginalParam: any;\r\n    targetVersion: Version;\r\n\r\n    constructor(targetVersion: Version = Versions.latest) {\r\n        this.targetVersion = targetVersion;\r\n    }\r\n\r\n    serializeValue(\r\n        target: { [key: string]: any },\r\n        propertyName: string,\r\n        propertyValue: any,\r\n        defaultValue: any = undefined,\r\n        forceDeleteIfNullOrDefault: boolean = false\r\n    ) {\r\n        if (\r\n            propertyValue === null ||\r\n            propertyValue === undefined ||\r\n            propertyValue === defaultValue\r\n        ) {\r\n            if (!GlobalSettings.enableFullJsonRoundTrip || forceDeleteIfNullOrDefault) {\r\n                delete target[propertyName];\r\n            }\r\n        } else if (propertyValue === defaultValue) {\r\n            delete target[propertyName];\r\n        } else {\r\n            target[propertyName] = propertyValue;\r\n        }\r\n    }\r\n\r\n    serializeString(\r\n        target: { [key: string]: any },\r\n        propertyName: string,\r\n        propertyValue?: string,\r\n        defaultValue?: string\r\n    ) {\r\n        if (\r\n            propertyValue === null ||\r\n            propertyValue === undefined ||\r\n            propertyValue === defaultValue\r\n        ) {\r\n            if (!GlobalSettings.enableFullJsonRoundTrip) {\r\n                delete target[propertyName];\r\n            }\r\n        } else {\r\n            target[propertyName] = propertyValue;\r\n        }\r\n    }\r\n\r\n    serializeBool(\r\n        target: { [key: string]: any },\r\n        propertyName: string,\r\n        propertyValue?: boolean,\r\n        defaultValue?: boolean\r\n    ) {\r\n        if (\r\n            propertyValue === null ||\r\n            propertyValue === undefined ||\r\n            propertyValue === defaultValue\r\n        ) {\r\n            if (!GlobalSettings.enableFullJsonRoundTrip) {\r\n                delete target[propertyName];\r\n            }\r\n        } else {\r\n            target[propertyName] = propertyValue;\r\n        }\r\n    }\r\n\r\n    serializeNumber(\r\n        target: { [key: string]: any },\r\n        propertyName: string,\r\n        propertyValue?: number,\r\n        defaultValue?: number\r\n    ) {\r\n        if (\r\n            propertyValue === null ||\r\n            propertyValue === undefined ||\r\n            propertyValue === defaultValue ||\r\n            isNaN(propertyValue)\r\n        ) {\r\n            if (!GlobalSettings.enableFullJsonRoundTrip) {\r\n                delete target[propertyName];\r\n            }\r\n        } else {\r\n            target[propertyName] = propertyValue;\r\n        }\r\n    }\r\n\r\n    serializeEnum(\r\n        enumType: { [s: number]: string },\r\n        target: { [key: string]: any },\r\n        propertyName: string,\r\n        propertyValue: number | undefined,\r\n        defaultValue: number | undefined = undefined\r\n    ) {\r\n        if (\r\n            propertyValue === null ||\r\n            propertyValue === undefined ||\r\n            propertyValue === defaultValue\r\n        ) {\r\n            if (!GlobalSettings.enableFullJsonRoundTrip) {\r\n                delete target[propertyName];\r\n            }\r\n        } else {\r\n            target[propertyName] = enumType[propertyValue];\r\n        }\r\n    }\r\n\r\n    serializeArray(\r\n        target: { [key: string]: any },\r\n        propertyName: string,\r\n        propertyValue: any[] | undefined\r\n    ) {\r\n        const items = [];\r\n\r\n        if (propertyValue) {\r\n            for (const item of propertyValue) {\r\n                let serializedItem: any = undefined;\r\n\r\n                if (item instanceof SerializableObject) {\r\n                    serializedItem = item.toJSON(this);\r\n                } else if (item.toJSON) {\r\n                    serializedItem = item.toJSON();\r\n                } else {\r\n                    serializedItem = item;\r\n                }\r\n\r\n                if (serializedItem !== undefined) {\r\n                    items.push(serializedItem);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (items.length === 0) {\r\n            if (target.hasOwnProperty(propertyName) && Array.isArray(target[propertyName])) {\r\n                delete target[propertyName];\r\n            }\r\n        } else {\r\n            this.serializeValue(target, propertyName, items);\r\n        }\r\n    }\r\n\r\n    clearEvents() {\r\n        this._validationEvents = [];\r\n    }\r\n\r\n    logEvent(\r\n        source: SerializableObject | undefined,\r\n        phase: Enums.ValidationPhase,\r\n        event: Enums.ValidationEvent,\r\n        message: string\r\n    ) {\r\n        this._validationEvents.push({\r\n            source: source,\r\n            phase: phase,\r\n            event: event,\r\n            message: message\r\n        });\r\n    }\r\n\r\n    logParseEvent(\r\n        source: SerializableObject | undefined,\r\n        event: Enums.ValidationEvent,\r\n        message: string\r\n    ) {\r\n        this.logEvent(source, Enums.ValidationPhase.Parse, event, message);\r\n    }\r\n\r\n    getEventAt(index: number): IValidationEvent {\r\n        return this._validationEvents[index];\r\n    }\r\n\r\n    get eventCount(): number {\r\n        return this._validationEvents.length;\r\n    }\r\n}\r\n\r\nclass SimpleSerializationContext extends BaseSerializationContext {}\r\n\r\nexport class PropertyDefinition {\r\n    private static _sequentialNumber: number = 0;\r\n\r\n    getInternalName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): any {\r\n        return source[this.name];\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: any,\r\n        context: BaseSerializationContext\r\n    ): void {\r\n        context.serializeValue(target, this.name, value, this.defaultValue);\r\n    }\r\n\r\n    readonly sequentialNumber: number;\r\n\r\n    isSerializationEnabled: boolean = true;\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly defaultValue?: any,\r\n        readonly onGetInitialValue?: (sender: SerializableObject) => any\r\n    ) {\r\n        this.sequentialNumber = PropertyDefinition._sequentialNumber;\r\n\r\n        PropertyDefinition._sequentialNumber++;\r\n    }\r\n}\r\n\r\nexport class StringProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): string | undefined {\r\n        const parsedValue = Utils.parseString(source[this.name], this.defaultValue);\r\n        const isUndefined =\r\n            parsedValue === undefined || (parsedValue === \"\" && this.treatEmptyAsUndefined);\r\n\r\n        if (!isUndefined && this.regEx !== undefined) {\r\n            const matches = this.regEx.exec(parsedValue);\r\n\r\n            if (!matches) {\r\n                context.logParseEvent(\r\n                    sender,\r\n                    Enums.ValidationEvent.InvalidPropertyValue,\r\n                    Strings.errors.invalidPropertyValue(parsedValue, this.name)\r\n                );\r\n\r\n                return undefined;\r\n            }\r\n        }\r\n\r\n        return parsedValue;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: string | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        context.serializeString(\r\n            target,\r\n            this.name,\r\n            value === \"\" && this.treatEmptyAsUndefined ? undefined : value,\r\n            this.defaultValue\r\n        );\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly treatEmptyAsUndefined: boolean = true,\r\n        readonly regEx?: RegExp,\r\n        readonly defaultValue?: string,\r\n        readonly onGetInitialValue?: (sender: SerializableObject) => string\r\n    ) {\r\n        super(targetVersion, name, defaultValue, onGetInitialValue);\r\n    }\r\n}\r\n\r\nexport class BoolProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): boolean | undefined {\r\n        return Utils.parseBool(source[this.name], this.defaultValue);\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: object,\r\n        value: boolean | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        context.serializeBool(target, this.name, value, this.defaultValue);\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly defaultValue?: boolean,\r\n        readonly onGetInitialValue?: (sender: SerializableObject) => any\r\n    ) {\r\n        super(targetVersion, name, defaultValue, onGetInitialValue);\r\n    }\r\n}\r\n\r\nexport class NumProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): number | undefined {\r\n        return Utils.parseNumber(source[this.name], this.defaultValue);\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: number | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        context.serializeNumber(target, this.name, value, this.defaultValue);\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly defaultValue?: number,\r\n        readonly onGetInitialValue?: (sender: SerializableObject) => any\r\n    ) {\r\n        super(targetVersion, name, defaultValue, onGetInitialValue);\r\n    }\r\n}\r\n\r\nexport class PixelSizeProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): number | undefined {\r\n        let result: number | undefined = undefined;\r\n        const value = source[this.name];\r\n\r\n        if (typeof value === \"string\") {\r\n            let isValid = false;\r\n\r\n            try {\r\n                const size = SizeAndUnit.parse(value, true);\r\n\r\n                if (size.unit === Enums.SizeUnit.Pixel) {\r\n                    result = size.physicalSize;\r\n\r\n                    isValid = true;\r\n                }\r\n            } catch {\r\n                // Do nothing. A parse error is emitted below\r\n            }\r\n\r\n            if (!isValid) {\r\n                context.logParseEvent(\r\n                    sender,\r\n                    Enums.ValidationEvent.InvalidPropertyValue,\r\n                    Strings.errors.invalidPropertyValue(source[this.name], \"minHeight\")\r\n                );\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: number | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        context.serializeValue(\r\n            target,\r\n            this.name,\r\n            typeof value === \"number\" && !isNaN(value) ? value + \"px\" : undefined\r\n        );\r\n    }\r\n}\r\n\r\nexport interface IVersionedValue<TValue> {\r\n    value: TValue;\r\n    targetVersion?: Version;\r\n}\r\n\r\nexport class StringArrayProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): string[] | undefined {\r\n        const sourceValue = source[this.name];\r\n\r\n        if (sourceValue === undefined || !Array.isArray(sourceValue)) {\r\n            return this.defaultValue;\r\n        }\r\n\r\n        const result: string[] = [];\r\n\r\n        for (const value of sourceValue) {\r\n            if (typeof value === \"string\") {\r\n                result.push(value);\r\n            } else {\r\n                context.logParseEvent(\r\n                    sender,\r\n                    Enums.ValidationEvent.InvalidPropertyValue,\r\n                    `Invalid array value \"${JSON.stringify(\r\n                        value\r\n                    )}\" of type \"${typeof value}\" ignored for \"${this.name}\".`\r\n                );\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: string[] | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        context.serializeArray(target, this.name, value);\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly defaultValue?: string[],\r\n        readonly onGetInitialValue?: (sender: SerializableObject) => string[] | undefined\r\n    ) {\r\n        super(targetVersion, name, defaultValue, onGetInitialValue);\r\n    }\r\n}\r\n\r\nexport class ValueSetProperty extends PropertyDefinition {\r\n    isValidValue(value: string, context: BaseSerializationContext): boolean {\r\n        for (const versionedValue of this.values) {\r\n            if (value.toLowerCase() === versionedValue.value.toLowerCase()) {\r\n                const targetVersion = versionedValue.targetVersion\r\n                    ? versionedValue.targetVersion\r\n                    : this.targetVersion;\r\n\r\n                return targetVersion.compareTo(context.targetVersion) <= 0;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): string | undefined {\r\n        const sourceValue = source[this.name];\r\n\r\n        if (sourceValue === undefined) {\r\n            return this.defaultValue;\r\n        }\r\n\r\n        if (typeof sourceValue === \"string\") {\r\n            for (const versionedValue of this.values) {\r\n                if (sourceValue.toLowerCase() === versionedValue.value.toLowerCase()) {\r\n                    const targetVersion = versionedValue.targetVersion\r\n                        ? versionedValue.targetVersion\r\n                        : this.targetVersion;\r\n\r\n                    if (targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                        return versionedValue.value;\r\n                    } else {\r\n                        context.logParseEvent(\r\n                            sender,\r\n                            Enums.ValidationEvent.InvalidPropertyValue,\r\n                            Strings.errors.propertyValueNotSupported(\r\n                                sourceValue,\r\n                                this.name,\r\n                                targetVersion.toString(),\r\n                                context.targetVersion.toString()\r\n                            )\r\n                        );\r\n\r\n                        return this.defaultValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        context.logParseEvent(\r\n            sender,\r\n            Enums.ValidationEvent.InvalidPropertyValue,\r\n            Strings.errors.invalidPropertyValue(sourceValue, this.name)\r\n        );\r\n\r\n        return this.defaultValue;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: string | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        let invalidValue = false;\r\n\r\n        if (value !== undefined) {\r\n            invalidValue = true;\r\n\r\n            for (const versionedValue of this.values) {\r\n                if (versionedValue.value === value) {\r\n                    const targetVersion = versionedValue.targetVersion\r\n                        ? versionedValue.targetVersion\r\n                        : this.targetVersion;\r\n\r\n                    if (targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                        invalidValue = false;\r\n\r\n                        break;\r\n                    } else {\r\n                        context.logEvent(\r\n                            sender,\r\n                            Enums.ValidationPhase.ToJSON,\r\n                            Enums.ValidationEvent.InvalidPropertyValue,\r\n                            Strings.errors.propertyValueNotSupported(\r\n                                value,\r\n                                this.name,\r\n                                targetVersion.toString(),\r\n                                context.targetVersion.toString()\r\n                            )\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!invalidValue) {\r\n            context.serializeValue(target, this.name, value, this.defaultValue, true);\r\n        }\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly values: IVersionedValue<string>[],\r\n        readonly defaultValue?: string,\r\n        readonly onGetInitialValue?: (sender: SerializableObject) => string\r\n    ) {\r\n        super(targetVersion, name, defaultValue, onGetInitialValue);\r\n    }\r\n}\r\n\r\nexport class EnumProperty<TEnum extends { [s: number]: string }> extends PropertyDefinition {\r\n    private _values: IVersionedValue<number>[] = [];\r\n\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): number | undefined {\r\n        const sourceValue = source[this.name];\r\n\r\n        if (typeof sourceValue !== \"string\") {\r\n            return this.defaultValue;\r\n        }\r\n\r\n        const enumValue = Utils.getEnumValueByName(this.enumType, sourceValue);\r\n\r\n        if (enumValue !== undefined) {\r\n            for (const versionedValue of this.values) {\r\n                if (versionedValue.value === enumValue) {\r\n                    const targetVersion = versionedValue.targetVersion\r\n                        ? versionedValue.targetVersion\r\n                        : this.targetVersion;\r\n\r\n                    if (targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                        return enumValue;\r\n                    } else {\r\n                        context.logParseEvent(\r\n                            sender,\r\n                            Enums.ValidationEvent.InvalidPropertyValue,\r\n                            Strings.errors.propertyValueNotSupported(\r\n                                sourceValue,\r\n                                this.name,\r\n                                targetVersion.toString(),\r\n                                context.targetVersion.toString()\r\n                            )\r\n                        );\r\n\r\n                        return this.defaultValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        context.logParseEvent(\r\n            sender,\r\n            Enums.ValidationEvent.InvalidPropertyValue,\r\n            Strings.errors.invalidPropertyValue(sourceValue, this.name)\r\n        );\r\n\r\n        return this.defaultValue;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: number | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        let invalidValue = false;\r\n\r\n        if (value !== undefined) {\r\n            invalidValue = true;\r\n\r\n            for (const versionedValue of this.values) {\r\n                if (versionedValue.value === value) {\r\n                    const targetVersion = versionedValue.targetVersion\r\n                        ? versionedValue.targetVersion\r\n                        : this.targetVersion;\r\n\r\n                    if (targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                        invalidValue = false;\r\n\r\n                        break;\r\n                    } else {\r\n                        context.logEvent(\r\n                            sender,\r\n                            Enums.ValidationPhase.ToJSON,\r\n                            Enums.ValidationEvent.InvalidPropertyValue,\r\n                            Strings.errors.invalidPropertyValue(value, this.name)\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!invalidValue) {\r\n            context.serializeEnum(this.enumType, target, this.name, value, this.defaultValue);\r\n        }\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly enumType: TEnum,\r\n        readonly defaultValue?: number,\r\n        values?: IVersionedValue<number>[],\r\n        readonly onGetInitialValue?: (sender: SerializableObject) => number\r\n    ) {\r\n        super(targetVersion, name, defaultValue, onGetInitialValue);\r\n\r\n        if (!values) {\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const key in enumType) {\r\n                const keyAsNumber = parseInt(key, 10);\r\n\r\n                if (keyAsNumber >= 0) {\r\n                    this._values.push({ value: keyAsNumber });\r\n                }\r\n            }\r\n        } else {\r\n            this._values = values;\r\n        }\r\n    }\r\n\r\n    get values(): IVersionedValue<number>[] {\r\n        return this._values;\r\n    }\r\n}\r\n\r\nexport type SerializableObjectType = { new (): SerializableObject };\r\n\r\nexport class SerializableObjectProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): SerializableObject | undefined {\r\n        const sourceValue = source[this.name];\r\n\r\n        if (sourceValue === undefined) {\r\n            return this.onGetInitialValue ? this.onGetInitialValue(sender) : this.defaultValue;\r\n        }\r\n\r\n        const result = new this.objectType();\r\n        result.parse(sourceValue, context);\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: SerializableObject | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        let serializedValue: object | undefined = undefined;\r\n\r\n        if (value !== undefined && !value.hasAllDefaultValues()) {\r\n            serializedValue = value.toJSON(context);\r\n        }\r\n\r\n        if (typeof serializedValue === \"object\" && Object.keys(serializedValue).length === 0) {\r\n            serializedValue = undefined;\r\n        }\r\n\r\n        context.serializeValue(target, this.name, serializedValue, this.defaultValue, true);\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly objectType: SerializableObjectType,\r\n        readonly nullable: boolean = false,\r\n        defaultValue?: SerializableObject\r\n    ) {\r\n        super(targetVersion, name, defaultValue, (sender: SerializableObject) => {\r\n            return this.nullable ? undefined : new this.objectType();\r\n        });\r\n    }\r\n}\r\n\r\nexport class SerializableObjectCollectionProperty extends PropertyDefinition {\r\n    parse(\r\n        sender: SerializableObject,\r\n        source: PropertyBag,\r\n        context: BaseSerializationContext\r\n    ): SerializableObject[] | undefined {\r\n        const result: SerializableObject[] | undefined = [];\r\n\r\n        const sourceCollection = source[this.name];\r\n\r\n        if (Array.isArray(sourceCollection)) {\r\n            for (const sourceItem of sourceCollection) {\r\n                const item = new this.objectType();\r\n                item.parse(sourceItem, context);\r\n\r\n                result.push(item);\r\n\r\n                if (this.onItemAdded) {\r\n                    this.onItemAdded(sender, item);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result.length > 0\r\n            ? result\r\n            : this.onGetInitialValue\r\n            ? this.onGetInitialValue(sender)\r\n            : undefined;\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: SerializableObject[] | undefined,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        context.serializeArray(target, this.name, value);\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly objectType: SerializableObjectType,\r\n        readonly onItemAdded?: (sender: SerializableObject, item: SerializableObject) => void\r\n    ) {\r\n        super(targetVersion, name, undefined, (sender: SerializableObject) => {\r\n            return [];\r\n        });\r\n    }\r\n}\r\n\r\nexport class CustomProperty<T> extends PropertyDefinition {\r\n    parse(sender: SerializableObject, source: PropertyBag, context: BaseSerializationContext): T {\r\n        return this.onParse(sender, this, source, context);\r\n    }\r\n\r\n    toJSON(\r\n        sender: SerializableObject,\r\n        target: PropertyBag,\r\n        value: T,\r\n        context: BaseSerializationContext\r\n    ) {\r\n        this.onToJSON(sender, this, target, value, context);\r\n    }\r\n\r\n    constructor(\r\n        readonly targetVersion: Version,\r\n        readonly name: string,\r\n        readonly onParse: (\r\n            sender: SerializableObject,\r\n            property: PropertyDefinition,\r\n            source: PropertyBag,\r\n            context: BaseSerializationContext\r\n        ) => T,\r\n        readonly onToJSON: (\r\n            sender: SerializableObject,\r\n            property: PropertyDefinition,\r\n            target: PropertyBag,\r\n            value: T,\r\n            context: BaseSerializationContext\r\n        ) => void,\r\n        readonly defaultValue?: T,\r\n        readonly onGetInitialValue?: (sender: SerializableObject) => T\r\n    ) {\r\n        super(targetVersion, name, defaultValue, onGetInitialValue);\r\n\r\n        if (!this.onParse) {\r\n            throw new Error(\"CustomPropertyDefinition instances must have an onParse handler.\");\r\n        }\r\n\r\n        if (!this.onToJSON) {\r\n            throw new Error(\"CustomPropertyDefinition instances must have an onToJSON handler.\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class SerializableObjectSchema {\r\n    private _properties: PropertyDefinition[] = [];\r\n\r\n    indexOf(prop: PropertyDefinition): number {\r\n        for (let i = 0; i < this._properties.length; i++) {\r\n            if (this._properties[i] === prop) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    add(...properties: PropertyDefinition[]) {\r\n        for (const prop of properties) {\r\n            if (this.indexOf(prop) === -1) {\r\n                this._properties.push(prop);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove(...properties: PropertyDefinition[]) {\r\n        for (const prop of properties) {\r\n            while (true) {\r\n                const index = this.indexOf(prop);\r\n\r\n                if (index >= 0) {\r\n                    this._properties.splice(index, 1);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getItemAt(index: number): PropertyDefinition {\r\n        return this._properties[index];\r\n    }\r\n\r\n    getCount(): number {\r\n        return this._properties.length;\r\n    }\r\n}\r\n\r\n// This is a decorator function, used to map SerializableObject descendant class members to\r\n// schema properties\r\nexport function property(prop: PropertyDefinition) {\r\n    return function (target: any, propertyKey: string) {\r\n        const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey) || {};\r\n\r\n        if (!descriptor.get && !descriptor.set) {\r\n            descriptor.get = function (this: SerializableObject) {\r\n                return this.getValue(prop);\r\n            };\r\n            descriptor.set = function (this: SerializableObject, value: any) {\r\n                this.setValue(prop, value);\r\n            };\r\n\r\n            Object.defineProperty(target, propertyKey, descriptor);\r\n        }\r\n    };\r\n}\r\n\r\nexport type PropertyBag = { [propertyName: string]: any };\r\n\r\nexport abstract class SerializableObject {\r\n    static onRegisterCustomProperties?: (\r\n        sender: SerializableObject,\r\n        schema: SerializableObjectSchema\r\n    ) => void;\r\n    static defaultMaxVersion: Version = Versions.latest;\r\n\r\n    private static readonly _schemaCache: { [typeName: string]: SerializableObjectSchema } = {};\r\n\r\n    private _propertyBag: PropertyBag = {};\r\n    private _rawProperties: PropertyBag = {};\r\n\r\n    protected abstract getSchemaKey(): string;\r\n\r\n    protected getDefaultSerializationContext(): BaseSerializationContext {\r\n        return new SimpleSerializationContext();\r\n    }\r\n\r\n    protected populateSchema(schema: SerializableObjectSchema) {\r\n        const ctor = <any>this.constructor;\r\n        const properties: PropertyDefinition[] = [];\r\n\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const propertyName in ctor) {\r\n            try {\r\n                const propertyValue = ctor[propertyName];\r\n\r\n                if (propertyValue instanceof PropertyDefinition) {\r\n                    properties.push(propertyValue);\r\n                }\r\n            } catch {\r\n                // If a property happens to have a getter function and\r\n                // it throws an exception, we need to catch it here\r\n            }\r\n        }\r\n\r\n        if (properties.length > 0) {\r\n            const sortedProperties = properties.sort(\r\n                (p1: PropertyDefinition, p2: PropertyDefinition) => {\r\n                    if (p1.sequentialNumber > p2.sequentialNumber) {\r\n                        return 1;\r\n                    } else if (p1.sequentialNumber < p2.sequentialNumber) {\r\n                        return -1;\r\n                    }\r\n\r\n                    return 0;\r\n                }\r\n            );\r\n\r\n            schema.add(...sortedProperties);\r\n        }\r\n\r\n        if (SerializableObject.onRegisterCustomProperties) {\r\n            SerializableObject.onRegisterCustomProperties(this, schema);\r\n        }\r\n    }\r\n\r\n    protected getValue(prop: PropertyDefinition): any {\r\n        return this._propertyBag.hasOwnProperty(prop.getInternalName())\r\n            ? this._propertyBag[prop.getInternalName()]\r\n            : prop.defaultValue;\r\n    }\r\n\r\n    protected setValue(prop: PropertyDefinition, value: any) {\r\n        if (value === undefined || value === null) {\r\n            delete this._propertyBag[prop.getInternalName()];\r\n        } else {\r\n            this._propertyBag[prop.getInternalName()] = value;\r\n        }\r\n    }\r\n\r\n    protected internalParse(source: PropertyBag, context: BaseSerializationContext) {\r\n        this._propertyBag = {};\r\n        this._rawProperties = GlobalSettings.enableFullJsonRoundTrip ? (source ? source : {}) : {};\r\n\r\n        if (source) {\r\n            const s = this.getSchema();\r\n\r\n            for (let i = 0; i < s.getCount(); i++) {\r\n                const prop = s.getItemAt(i);\r\n\r\n                if (prop.isSerializationEnabled) {\r\n                    let propertyValue = prop.onGetInitialValue\r\n                        ? prop.onGetInitialValue(this)\r\n                        : undefined;\r\n\r\n                    if (source.hasOwnProperty(prop.name)) {\r\n                        if (prop.targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                            propertyValue = prop.parse(this, source, context);\r\n                        } else {\r\n                            context.logParseEvent(\r\n                                this,\r\n                                Enums.ValidationEvent.UnsupportedProperty,\r\n                                Strings.errors.propertyNotSupported(\r\n                                    prop.name,\r\n                                    prop.targetVersion.toString(),\r\n                                    context.targetVersion.toString()\r\n                                )\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    this.setValue(prop, propertyValue);\r\n                }\r\n            }\r\n        } else {\r\n            this.resetDefaultValues();\r\n        }\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: BaseSerializationContext) {\r\n        const s = this.getSchema();\r\n        const serializedProperties: string[] = [];\r\n\r\n        for (let i = 0; i < s.getCount(); i++) {\r\n            const prop = s.getItemAt(i);\r\n\r\n            // Avoid serializing the same property multiple times. This is necessary\r\n            // because some property definitions map to the same underlying schema\r\n            // property\r\n            if (\r\n                prop.isSerializationEnabled &&\r\n                prop.targetVersion.compareTo(context.targetVersion) <= 0 &&\r\n                serializedProperties.indexOf(prop.name) === -1\r\n            ) {\r\n                prop.toJSON(this, target, this.getValue(prop), context);\r\n\r\n                serializedProperties.push(prop.name);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected shouldSerialize(_context: BaseSerializationContext): boolean {\r\n        return true;\r\n    }\r\n\r\n    maxVersion: Version = SerializableObject.defaultMaxVersion;\r\n\r\n    constructor() {\r\n        const s = this.getSchema();\r\n\r\n        for (let i = 0; i < s.getCount(); i++) {\r\n            const prop = s.getItemAt(i);\r\n\r\n            if (prop.onGetInitialValue) {\r\n                this.setValue(prop, prop.onGetInitialValue(this));\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(source: PropertyBag, context?: BaseSerializationContext) {\r\n        this.internalParse(source, context ? context : new SimpleSerializationContext());\r\n    }\r\n\r\n    toJSON(context?: BaseSerializationContext): PropertyBag | undefined {\r\n        let effectiveContext: BaseSerializationContext;\r\n\r\n        if (context && context instanceof BaseSerializationContext) {\r\n            effectiveContext = context;\r\n        } else {\r\n            effectiveContext = this.getDefaultSerializationContext();\r\n            effectiveContext.toJSONOriginalParam = context;\r\n        }\r\n\r\n        if (this.shouldSerialize(effectiveContext)) {\r\n            let result: PropertyBag;\r\n\r\n            if (\r\n                GlobalSettings.enableFullJsonRoundTrip &&\r\n                this._rawProperties &&\r\n                typeof this._rawProperties === \"object\"\r\n            ) {\r\n                result = this._rawProperties;\r\n            } else {\r\n                result = {};\r\n            }\r\n\r\n            this.internalToJSON(result, effectiveContext);\r\n\r\n            return result;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    hasDefaultValue(prop: PropertyDefinition): boolean {\r\n        return this.getValue(prop) === prop.defaultValue;\r\n    }\r\n\r\n    hasAllDefaultValues(): boolean {\r\n        const s = this.getSchema();\r\n\r\n        for (let i = 0; i < s.getCount(); i++) {\r\n            const prop = s.getItemAt(i);\r\n\r\n            if (!this.hasDefaultValue(prop)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resetDefaultValues() {\r\n        const s = this.getSchema();\r\n\r\n        for (let i = 0; i < s.getCount(); i++) {\r\n            const prop = s.getItemAt(i);\r\n\r\n            this.setValue(prop, prop.defaultValue);\r\n        }\r\n    }\r\n\r\n    setCustomProperty(name: string, value: any) {\r\n        const shouldDeleteProperty =\r\n            (typeof value === \"string\" && !value) || value === undefined || value === null;\r\n\r\n        if (shouldDeleteProperty) {\r\n            delete this._rawProperties[name];\r\n        } else {\r\n            this._rawProperties[name] = value;\r\n        }\r\n    }\r\n\r\n    getCustomProperty(name: string): any {\r\n        return this._rawProperties[name];\r\n    }\r\n\r\n    getSchema(): SerializableObjectSchema {\r\n        let schema: SerializableObjectSchema = SerializableObject._schemaCache[this.getSchemaKey()];\r\n\r\n        if (!schema) {\r\n            schema = new SerializableObjectSchema();\r\n\r\n            this.populateSchema(schema);\r\n\r\n            SerializableObject._schemaCache[this.getSchemaKey()] = schema;\r\n        }\r\n\r\n        return schema;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\n\r\nexport type Refresh = {\r\n    mode: Enums.RefreshMode;\r\n    timeBetweenAutomaticRefreshes: number;\r\n    maximumConsecutiveAutomaticRefreshes: number;\r\n    allowManualRefreshesAfterAutomaticRefreshes: boolean;\r\n};\r\n\r\nexport type AppletsSettings = {\r\n    logEnabled: boolean;\r\n    logLevel: Enums.LogLevel;\r\n    maximumRetryAttempts: number;\r\n    defaultTimeBetweenRetryAttempts: number;\r\n    authPromptWidth: number;\r\n    authPromptHeight: number;\r\n    readonly refresh: Refresh;\r\n    onLogEvent?: (level: Enums.LogLevel, message?: any, ...optionalParams: any[]) => void;\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\r\nexport class GlobalSettings {\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n    static useAdvancedCardBottomTruncation: boolean = false;\r\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\r\n    static allowMarkForTextHighlighting: boolean = false;\r\n    static alwaysBleedSeparators: boolean = false;\r\n    static enableFullJsonRoundTrip: boolean = false;\r\n    static displayInputValidationErrors: boolean = true;\r\n    static allowPreProcessingPropertyValues: boolean = false;\r\n    static setTabIndexAtCardRoot: boolean = true;\r\n    static enableFallback: boolean = true;\r\n    static useWebkitLineClamp: boolean = true;\r\n    static allowMoreThanMaxActionsInOverflowMenu: boolean = false;\r\n    static removePaddingFromContainersWithBackgroundImage: boolean = false;\r\n    static resetInputsDirtyStateAfterActionExecution: boolean = true;\r\n\r\n    static readonly applets: AppletsSettings = {\r\n        logEnabled: true,\r\n        logLevel: Enums.LogLevel.Error,\r\n        maximumRetryAttempts: 3,\r\n        defaultTimeBetweenRetryAttempts: 3000, // 3 seconds\r\n        authPromptWidth: 400,\r\n        authPromptHeight: 600,\r\n        refresh: {\r\n            mode: Enums.RefreshMode.Manual,\r\n            timeBetweenAutomaticRefreshes: 3000, // 3 seconds\r\n            maximumConsecutiveAutomaticRefreshes: 3,\r\n            allowManualRefreshesAfterAutomaticRefreshes: true\r\n        }\r\n    };\r\n}\r\n\r\nexport const ContentTypes = {\r\n    applicationJson: \"application/json\",\r\n    applicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n};\r\n\r\nexport interface ISeparationDefinition {\r\n    spacing: number;\r\n    lineThickness?: number;\r\n    lineColor?: string;\r\n}\r\n\r\nexport interface IInput {\r\n    id?: string;\r\n    value?: string;\r\n    validateValue(): boolean;\r\n}\r\n\r\nexport type Dictionary<T> = { [key: string]: T };\r\n\r\nexport class StringWithSubstitutions {\r\n    private _isProcessed: boolean = false;\r\n    private _original?: string;\r\n    private _processed?: string;\r\n\r\n    getReferencedInputs(inputs: IInput[], referencedInputs: Dictionary<IInput>) {\r\n        if (!referencedInputs) {\r\n            throw new Error(\"The referencedInputs parameter cannot be null.\");\r\n        }\r\n\r\n        if (this._original) {\r\n            for (const input of inputs) {\r\n                const matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(\r\n                    this._original\r\n                );\r\n\r\n                if (matches != null && input.id) {\r\n                    referencedInputs[input.id] = input;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    substituteInputValues(inputs: Dictionary<IInput>, contentType: string) {\r\n        this._processed = this._original;\r\n\r\n        if (this._original) {\r\n            const regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n            let matches;\r\n\r\n            while ((matches = regEx.exec(this._original)) !== null && this._processed) {\r\n                for (const key of Object.keys(inputs)) {\r\n                    if (key.toLowerCase() === matches[1].toLowerCase()) {\r\n                        const matchedInput = inputs[key];\r\n\r\n                        let valueForReplace = \"\";\r\n\r\n                        if (matchedInput.value) {\r\n                            valueForReplace = matchedInput.value;\r\n                        }\r\n\r\n                        if (contentType === ContentTypes.applicationJson) {\r\n                            valueForReplace = JSON.stringify(valueForReplace);\r\n                            valueForReplace = valueForReplace.slice(1, -1);\r\n                        } else if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n                            valueForReplace = encodeURIComponent(valueForReplace);\r\n                        }\r\n\r\n                        this._processed = this._processed.replace(matches[0], valueForReplace);\r\n\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._isProcessed = true;\r\n    }\r\n\r\n    getOriginal(): string | undefined {\r\n        return this._original;\r\n    }\r\n\r\n    get(): string | undefined {\r\n        if (!this._isProcessed) {\r\n            return this._original;\r\n        } else {\r\n            return this._processed;\r\n        }\r\n    }\r\n\r\n    set(value: string | undefined) {\r\n        this._original = value;\r\n        this._isProcessed = false;\r\n    }\r\n}\r\n\r\nexport class SpacingDefinition {\r\n    left: number = 0;\r\n    top: number = 0;\r\n    right: number = 0;\r\n    bottom: number = 0;\r\n\r\n    constructor(top: number = 0, right: number = 0, bottom: number = 0, left: number = 0) {\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n}\r\n\r\nexport class PaddingDefinition {\r\n    top: Enums.Spacing = Enums.Spacing.None;\r\n    right: Enums.Spacing = Enums.Spacing.None;\r\n    bottom: Enums.Spacing = Enums.Spacing.None;\r\n    left: Enums.Spacing = Enums.Spacing.None;\r\n\r\n    constructor(\r\n        top: Enums.Spacing = Enums.Spacing.None,\r\n        right: Enums.Spacing = Enums.Spacing.None,\r\n        bottom: Enums.Spacing = Enums.Spacing.None,\r\n        left: Enums.Spacing = Enums.Spacing.None\r\n    ) {\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n}\r\n\r\nexport class SizeAndUnit {\r\n    physicalSize: number;\r\n    unit: Enums.SizeUnit;\r\n\r\n    static parse(input: string, requireUnitSpecifier: boolean = false): SizeAndUnit {\r\n        const result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n        if (typeof input === \"number\") {\r\n            result.physicalSize = input;\r\n\r\n            return result;\r\n        } else if (typeof input === \"string\") {\r\n            const regExp = /^([0-9]+)(px|\\*)?$/g;\r\n            const matches = regExp.exec(input);\r\n            const expectedMatchCount = requireUnitSpecifier ? 3 : 2;\r\n\r\n            if (matches && matches.length >= expectedMatchCount) {\r\n                result.physicalSize = parseInt(matches[1]);\r\n\r\n                if (matches.length === 3) {\r\n                    if (matches[2] === \"px\") {\r\n                        result.unit = Enums.SizeUnit.Pixel;\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n        }\r\n\r\n        throw new Error(\"Invalid size: \" + input);\r\n    }\r\n\r\n    constructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n        this.physicalSize = physicalSize;\r\n        this.unit = unit;\r\n    }\r\n}\r\n\r\nexport interface IResourceInformation {\r\n    url: string;\r\n    mimeType: string;\r\n}\r\n\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\n/* eslint-disable @typescript-eslint/no-extraneous-class, @typescript-eslint/naming-convention, no-bitwise */\r\nexport class UUID {\r\n    private static lut: string[] = [];\r\n\r\n    static generate(): string {\r\n        const d0 = (Math.random() * 0xffffffff) | 0;\r\n        const d1 = (Math.random() * 0xffffffff) | 0;\r\n        const d2 = (Math.random() * 0xffffffff) | 0;\r\n        const d3 = (Math.random() * 0xffffffff) | 0;\r\n\r\n        return (\r\n            UUID.lut[d0 & 0xff] +\r\n            UUID.lut[(d0 >> 8) & 0xff] +\r\n            UUID.lut[(d0 >> 16) & 0xff] +\r\n            UUID.lut[(d0 >> 24) & 0xff] +\r\n            \"-\" +\r\n            UUID.lut[d1 & 0xff] +\r\n            UUID.lut[(d1 >> 8) & 0xff] +\r\n            \"-\" +\r\n            UUID.lut[((d1 >> 16) & 0x0f) | 0x40] +\r\n            UUID.lut[(d1 >> 24) & 0xff] +\r\n            \"-\" +\r\n            UUID.lut[(d2 & 0x3f) | 0x80] +\r\n            UUID.lut[(d2 >> 8) & 0xff] +\r\n            \"-\" +\r\n            UUID.lut[(d2 >> 16) & 0xff] +\r\n            UUID.lut[(d2 >> 24) & 0xff] +\r\n            UUID.lut[d3 & 0xff] +\r\n            UUID.lut[(d3 >> 8) & 0xff] +\r\n            UUID.lut[(d3 >> 16) & 0xff] +\r\n            UUID.lut[(d3 >> 24) & 0xff]\r\n        );\r\n    }\r\n\r\n    static initialize() {\r\n        for (let i = 0; i < 256; i++) {\r\n            UUID.lut[i] = (i < 16 ? \"0\" : \"\") + i.toString(16);\r\n        }\r\n    }\r\n}\r\n\r\nUUID.initialize();\r\n/* eslint-enable @typescript-eslint/no-extraneous-class, @typescript-eslint/naming-convention, no-bitwise */\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\r\nexport class Strings {\r\n    static readonly errors = {\r\n        unknownElementType: (typeName: string) =>\r\n            `Unknown element type \"${typeName}\". Fallback will be used if present.`,\r\n        unknownActionType: (typeName: string) =>\r\n            `Unknown action type \"${typeName}\". Fallback will be used if present.`,\r\n        elementTypeNotAllowed: (typeName: string) =>\r\n            `Element type \"${typeName}\" is not allowed in this context.`,\r\n        actionTypeNotAllowed: (typeName: string) =>\r\n            `Action type \"${typeName}\" is not allowed in this context.`,\r\n        invalidPropertyValue: (value: any, propertyName: string) =>\r\n            `Invalid value \"${value}\" for property \"${propertyName}\".`,\r\n        showCardMustHaveCard: () =>\r\n            `\"An Action.ShowCard must have its \"card\" property set to a valid AdaptiveCard object.`,\r\n        invalidColumnWidth: (invalidWidth: string) =>\r\n            `Invalid column width \"${invalidWidth}\" - defaulting to \"auto\".`,\r\n        invalidCardVersion: (defaultingToVersion: string) =>\r\n            `Invalid card version. Defaulting to \"${defaultingToVersion}\".`,\r\n        invalidVersionString: (versionString: string) =>\r\n            `Invalid version string \"${versionString}\".`,\r\n        propertyValueNotSupported: (\r\n            value: any,\r\n            propertyName: string,\r\n            supportedInVersion: string,\r\n            versionUsed: string\r\n        ) =>\r\n            `Value \"${value}\" for property \"${propertyName}\" is supported in version ${supportedInVersion}, but you are using version ${versionUsed}.`,\r\n        propertyNotSupported: (\r\n            propertyName: string,\r\n            supportedInVersion: string,\r\n            versionUsed: string\r\n        ) =>\r\n            `Property \"${propertyName}\" is supported in version ${supportedInVersion}, but you are using version ${versionUsed}.`,\r\n        indexOutOfRange: (index: number) => `Index out of range (${index}).`,\r\n        elementCannotBeUsedAsInline: () =>\r\n            \"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\",\r\n        inlineAlreadyParented: () =>\r\n            \"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\",\r\n        interactivityNotAllowed: () => \"Interactivity is not allowed.\",\r\n        inputsMustHaveUniqueId: () => \"All inputs must have a unique Id.\",\r\n        choiceSetMustHaveAtLeastOneChoice: () =>\r\n            \"An Input.ChoiceSet must have at least one choice defined.\",\r\n        choiceSetChoicesMustHaveTitleAndValue: () =>\r\n            \"All choices in an Input.ChoiceSet must have their title and value properties set.\",\r\n        propertyMustBeSet: (propertyName: string) => `Property \"${propertyName}\" must be set.`,\r\n        actionHttpHeadersMustHaveNameAndValue: () =>\r\n            \"All headers of an Action.Http must have their name and value properties set.\",\r\n        tooManyActions: (maximumActions: number) =>\r\n            `Maximum number of actions exceeded (${maximumActions}).`,\r\n        tooLittleTimeDelay: (minAutoplayDelay: number) =>\r\n            `Autoplay Delay is too short (${minAutoplayDelay}).`,\r\n        columnAlreadyBelongsToAnotherSet: () => \"This column already belongs to another ColumnSet.\",\r\n        invalidCardType: () =>\r\n            `Invalid or missing card type. Make sure the card's type property is set to \"AdaptiveCard\".`,\r\n        unsupportedCardVersion: (version: string, maxSupportedVersion: string) =>\r\n            `The specified card version (${version}) is not supported or still in preview. The latest released card version is ${maxSupportedVersion}.`,\r\n        duplicateId: (id: string) => `Duplicate Id \"${id}\".`,\r\n        markdownProcessingNotEnabled: () =>\r\n            \"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\",\r\n        processMarkdownEventRemoved: () =>\r\n            \"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\",\r\n        elementAlreadyParented: () => \"The element already belongs to another container.\",\r\n        actionAlreadyParented: () => \"The action already belongs to another element.\",\r\n        elementTypeNotStandalone: (typeName: string) =>\r\n            `Elements of type ${typeName} cannot be used as standalone elements.`\r\n    };\r\n    static readonly magicCodeInputCard = {\r\n        tryAgain: () => \"That didn't work... let's try again.\",\r\n        pleaseLogin: () =>\r\n            'Please login in the popup. You will obtain a magic code. Paste that code below and select \"Submit\"',\r\n        enterMagicCode: () => \"Enter magic code\",\r\n        pleaseEnterMagicCodeYouReceived: () => \"Please enter the magic code you received.\",\r\n        submit: () => \"Submit\",\r\n        cancel: () => \"Cancel\",\r\n        somethingWentWrong: () => \"Something went wrong. This action can't be handled.\",\r\n        authenticationFailed: () => \"Authentication failed.\"\r\n    };\r\n    static readonly runtime = {\r\n        automaticRefreshPaused: () => \"Automatic refresh paused.\",\r\n        clckToRestartAutomaticRefresh: () => \"Click to restart.\",\r\n        refreshThisCard: () => \"Refresh this card\"\r\n    };\r\n    static readonly hints = {\r\n        dontUseWeightedAndStrecthedColumnsInSameSet: () =>\r\n            \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n    };\r\n    static readonly defaults = {\r\n        inlineActionTitle: () => \"Inline Action\",\r\n        overflowButtonText: () => \"...\",\r\n        mediaPlayerAriaLabel: () => \"Media content\",\r\n        mediaPlayerPlayMedia: () => \"Play media\",\r\n        youTubeVideoPlayer: () => \"YouTube video player\",\r\n        vimeoVideoPlayer: () => \"Vimeo video player\",\r\n        dailymotionVideoPlayer: () => \"Dailymotion video player\"\r\n    };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport {\r\n    CardElement,\r\n    StylableCardElementContainer,\r\n    SerializationContext,\r\n    Container,\r\n    ContainerStyleProperty\r\n} from \"./card-elements\";\r\nimport {\r\n    HorizontalAlignment,\r\n    VerticalAlignment,\r\n    SizeUnit,\r\n    ValidationEvent,\r\n    TypeErrorType,\r\n    Spacing\r\n} from \"./enums\";\r\nimport { TextStyleDefinition } from \"./host-config\";\r\nimport { GlobalRegistry } from \"./registry\";\r\nimport {\r\n    BaseSerializationContext,\r\n    BoolProperty,\r\n    CustomProperty,\r\n    EnumProperty,\r\n    property,\r\n    PropertyBag,\r\n    PropertyDefinition,\r\n    SerializableObject,\r\n    SerializableObjectCollectionProperty,\r\n    Versions\r\n} from \"./serialization\";\r\nimport { SizeAndUnit, PaddingDefinition } from \"./shared\";\r\nimport { Strings } from \"./strings\";\r\nimport { stringToCssColor } from \"./utils\";\r\n\r\nexport class TableColumnDefinition extends SerializableObject {\r\n    //#region Schema\r\n\r\n    static readonly horizontalCellContentAlignmentProperty = new EnumProperty(\r\n        Versions.v1_5,\r\n        \"horizontalCellContentAlignment\",\r\n        HorizontalAlignment\r\n    );\r\n    static readonly verticalCellContentAlignmentProperty = new EnumProperty(\r\n        Versions.v1_5,\r\n        \"verticalCellContentAlignment\",\r\n        VerticalAlignment\r\n    );\r\n\r\n    static readonly widthProperty = new CustomProperty<SizeAndUnit>(\r\n        Versions.v1_5,\r\n        \"width\",\r\n        (\r\n            sender: SerializableObject,\r\n            prop: PropertyDefinition,\r\n            source: PropertyBag,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            let result: SizeAndUnit = prop.defaultValue;\r\n            const value = source[prop.name];\r\n            let invalidWidth = false;\r\n\r\n            if (typeof value === \"number\" && !isNaN(value)) {\r\n                result = new SizeAndUnit(value, SizeUnit.Weight);\r\n            } else if (typeof value === \"string\") {\r\n                try {\r\n                    result = SizeAndUnit.parse(value);\r\n                } catch (e) {\r\n                    invalidWidth = true;\r\n                }\r\n            } else {\r\n                invalidWidth = true;\r\n            }\r\n\r\n            if (invalidWidth) {\r\n                context.logParseEvent(\r\n                    sender,\r\n                    ValidationEvent.InvalidPropertyValue,\r\n                    Strings.errors.invalidColumnWidth(value)\r\n                );\r\n            }\r\n\r\n            return result;\r\n        },\r\n        (\r\n            sender: SerializableObject,\r\n            property: PropertyDefinition,\r\n            target: PropertyBag,\r\n            value: SizeAndUnit,\r\n            context: BaseSerializationContext\r\n        ) => {\r\n            if (value.unit === SizeUnit.Pixel) {\r\n                context.serializeValue(target, \"width\", value.physicalSize + \"px\");\r\n            } else {\r\n                context.serializeNumber(target, \"width\", value.physicalSize);\r\n            }\r\n        },\r\n        new SizeAndUnit(1, SizeUnit.Weight)\r\n    );\r\n\r\n    @property(TableColumnDefinition.horizontalCellContentAlignmentProperty)\r\n    horizontalCellContentAlignment?: HorizontalAlignment;\r\n\r\n    @property(TableColumnDefinition.verticalCellContentAlignmentProperty)\r\n    verticalCellContentAlignment?: VerticalAlignment;\r\n\r\n    @property(TableColumnDefinition.widthProperty)\r\n    width: SizeAndUnit = new SizeAndUnit(1, SizeUnit.Weight);\r\n\r\n    getSchemaKey(): string {\r\n        return \"ColumnDefinition\";\r\n    }\r\n\r\n    //#endregion\r\n\r\n    computedWidth: SizeAndUnit;\r\n}\r\n\r\nexport abstract class StylableContainer<\r\n    T extends CardElement\r\n> extends StylableCardElementContainer {\r\n    private _items: T[] = [];\r\n\r\n    private parseItem(source: any, context: SerializationContext): T | undefined {\r\n        return context.parseCardObject<T>(\r\n            this,\r\n            source,\r\n            [], // Forbidden types not supported for elements for now\r\n            !this.isDesignMode(),\r\n            (typeName: string) => {\r\n                return this.createItemInstance(typeName);\r\n            },\r\n            (typeName: string, _errorType: TypeErrorType) => {\r\n                context.logParseEvent(\r\n                    undefined,\r\n                    ValidationEvent.ElementTypeNotAllowed,\r\n                    Strings.errors.elementTypeNotAllowed(typeName)\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    protected abstract getCollectionPropertyName(): string;\r\n    protected abstract createItemInstance(typeName: string): T | undefined;\r\n\r\n    protected internalAddItem(item: T) {\r\n        if (!item.parent) {\r\n            this._items.push(item);\r\n\r\n            item.setParent(this);\r\n        } else {\r\n            throw new Error(Strings.errors.elementAlreadyParented());\r\n        }\r\n    }\r\n\r\n    protected internalRemoveItem(item: T): boolean {\r\n        const itemIndex = this._items.indexOf(item);\r\n\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n\r\n            item.setParent(undefined);\r\n\r\n            this.updateLayout();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected internalIndexOf(item: T): number {\r\n        return this._items.indexOf(item);\r\n    }\r\n\r\n    protected internalParse(source: any, context: SerializationContext) {\r\n        super.internalParse(source, context);\r\n\r\n        this._items = [];\r\n\r\n        const items = source[this.getCollectionPropertyName()];\r\n\r\n        if (Array.isArray(items)) {\r\n            for (const item of items) {\r\n                const instance = this.parseItem(item, context);\r\n\r\n                if (instance) {\r\n                    this._items.push(instance);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\r\n        super.internalToJSON(target, context);\r\n\r\n        context.serializeArray(target, this.getCollectionPropertyName(), this._items);\r\n    }\r\n\r\n    removeItem(item: T): boolean {\r\n        return this.internalRemoveItem(item);\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): T {\r\n        return this._items[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): T | undefined {\r\n        return this.getItemCount() > 0 ? this.getItemAt(0) : undefined;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): T | undefined {\r\n        return this.getItemCount() > 0 ? this.getItemAt(this.getItemCount() - 1) : undefined;\r\n    }\r\n}\r\n\r\nexport type CellType = \"data\" | \"header\";\r\n\r\nexport class TableCell extends Container {\r\n    private _columnIndex: number = -1;\r\n    private _cellType: CellType = \"data\";\r\n\r\n    protected getHasBorder(): boolean {\r\n        return this.parentRow.parentTable.showGridLines;\r\n    }\r\n\r\n    protected applyBorder() {\r\n        if (this.renderedElement && this.getHasBorder()) {\r\n            const styleDefinition = this.hostConfig.containerStyles.getStyleByName(\r\n                this.parentRow.parentTable.gridStyle\r\n            );\r\n\r\n            if (styleDefinition.borderColor) {\r\n                const borderColor = stringToCssColor(styleDefinition.borderColor);\r\n\r\n                if (borderColor) {\r\n                    this.renderedElement.style.borderRight = \"1px solid \" + borderColor;\r\n                    this.renderedElement.style.borderBottom = \"1px solid \" + borderColor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getDefaultPadding(): PaddingDefinition {\r\n        return this.getHasBackground() || this.getHasBorder()\r\n            ? new PaddingDefinition(Spacing.Small, Spacing.Small, Spacing.Small, Spacing.Small)\r\n            : super.getDefaultPadding();\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        const cellElement = super.internalRender();\r\n\r\n        if (cellElement) {\r\n            cellElement.setAttribute(\"role\", this.cellType === \"data\" ? \"cell\" : \"columnheader\");\r\n            cellElement.style.minWidth = \"0\";\r\n\r\n            if (this.cellType === \"header\") {\r\n                cellElement.setAttribute(\"scope\", \"col\");\r\n            }\r\n        }\r\n\r\n        return cellElement;\r\n    }\r\n\r\n    protected shouldSerialize(_context: SerializationContext): boolean {\r\n        return true;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TableCell\";\r\n    }\r\n\r\n    getEffectiveTextStyleDefinition(): TextStyleDefinition {\r\n        if (this.cellType === \"header\") {\r\n            return this.hostConfig.textStyles.columnHeader;\r\n        }\r\n\r\n        return super.getEffectiveTextStyleDefinition();\r\n    }\r\n\r\n    getEffectiveHorizontalAlignment(): HorizontalAlignment {\r\n        if (this.horizontalAlignment !== undefined) {\r\n            return this.horizontalAlignment;\r\n        }\r\n\r\n        if (this.parentRow.horizontalCellContentAlignment !== undefined) {\r\n            return this.parentRow.horizontalCellContentAlignment;\r\n        }\r\n\r\n        if (this.columnIndex >= 0) {\r\n            const horizontalAlignment = this.parentRow.parentTable.getColumnAt(\r\n                this.columnIndex\r\n            ).horizontalCellContentAlignment;\r\n\r\n            if (horizontalAlignment !== undefined) {\r\n                return horizontalAlignment;\r\n            }\r\n        }\r\n\r\n        if (this.parentRow.parentTable.horizontalCellContentAlignment !== undefined) {\r\n            return this.parentRow.parentTable.horizontalCellContentAlignment;\r\n        }\r\n\r\n        return super.getEffectiveHorizontalAlignment();\r\n    }\r\n\r\n    getEffectiveVerticalContentAlignment(): VerticalAlignment {\r\n        if (this.verticalContentAlignment !== undefined) {\r\n            return this.verticalContentAlignment;\r\n        }\r\n\r\n        if (this.parentRow.verticalCellContentAlignment !== undefined) {\r\n            return this.parentRow.verticalCellContentAlignment;\r\n        }\r\n\r\n        if (this.columnIndex >= 0) {\r\n            const verticalAlignment = this.parentRow.parentTable.getColumnAt(\r\n                this.columnIndex\r\n            ).verticalCellContentAlignment;\r\n\r\n            if (verticalAlignment !== undefined) {\r\n                return verticalAlignment;\r\n            }\r\n        }\r\n\r\n        if (this.parentRow.parentTable.verticalCellContentAlignment !== undefined) {\r\n            return this.parentRow.parentTable.verticalCellContentAlignment;\r\n        }\r\n\r\n        return super.getEffectiveVerticalContentAlignment();\r\n    }\r\n\r\n    get columnIndex(): number {\r\n        return this._columnIndex;\r\n    }\r\n\r\n    get cellType(): CellType {\r\n        return this._cellType;\r\n    }\r\n\r\n    get parentRow(): TableRow {\r\n        return this.parent as TableRow;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class TableRow extends StylableContainer<TableCell> {\r\n    //#region Schema\r\n\r\n    static readonly styleProperty = new ContainerStyleProperty(Versions.v1_5, \"style\");\r\n    static readonly horizontalCellContentAlignmentProperty = new EnumProperty(\r\n        Versions.v1_5,\r\n        \"horizontalCellContentAlignment\",\r\n        HorizontalAlignment\r\n    );\r\n    static readonly verticalCellContentAlignmentProperty = new EnumProperty(\r\n        Versions.v1_5,\r\n        \"verticalCellContentAlignment\",\r\n        VerticalAlignment\r\n    );\r\n\r\n    @property(TableRow.horizontalCellContentAlignmentProperty)\r\n    horizontalCellContentAlignment?: HorizontalAlignment;\r\n\r\n    @property(TableRow.verticalCellContentAlignmentProperty)\r\n    verticalCellContentAlignment?: VerticalAlignment;\r\n\r\n    //#endregion\r\n\r\n    protected getDefaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition(Spacing.None, Spacing.None, Spacing.None, Spacing.None);\r\n    }\r\n\r\n    protected applyBackground() {\r\n        if (this.renderedElement) {\r\n            const styleDefinition = this.hostConfig.containerStyles.getStyleByName(\r\n                this.style,\r\n                this.hostConfig.containerStyles.getStyleByName(this.defaultStyle)\r\n            );\r\n\r\n            if (styleDefinition.backgroundColor) {\r\n                const bgColor = stringToCssColor(styleDefinition.backgroundColor);\r\n\r\n                if (bgColor) {\r\n                    this.renderedElement.style.backgroundColor = bgColor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getCollectionPropertyName(): string {\r\n        return \"cells\";\r\n    }\r\n\r\n    protected createItemInstance(typeName: string): TableCell | undefined {\r\n        return !typeName || typeName === \"TableCell\" ? new TableCell() : undefined;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        const isFirstRow = this.getIsFirstRow();\r\n        const cellSpacing = this.hostConfig.table.cellSpacing;\r\n\r\n        const rowElement = document.createElement(\"div\");\r\n        rowElement.setAttribute(\"role\", \"row\");\r\n        rowElement.style.display = \"flex\";\r\n        rowElement.style.flexDirection = \"row\";\r\n\r\n        for (let i = 0; i < Math.min(this.getItemCount(), this.parentTable.getColumnCount()); i++) {\r\n            const cell = this.getItemAt(i);\r\n\r\n            // Cheating a bit in order to keep cellType read-only\r\n            cell[\"_columnIndex\"] = i;\r\n            cell[\"_cellType\"] =\r\n                this.parentTable.firstRowAsHeaders && isFirstRow ? \"header\" : \"data\";\r\n\r\n            const renderedCell = cell.render();\r\n\r\n            if (renderedCell) {\r\n                const column = this.parentTable.getColumnAt(i);\r\n\r\n                if (column.computedWidth.unit === SizeUnit.Pixel) {\r\n                    renderedCell.style.flex = \"0 0 \" + column.computedWidth.physicalSize + \"px\";\r\n                } else {\r\n                    renderedCell.style.flex = \"1 1 \" + column.computedWidth.physicalSize + \"%\";\r\n                }\r\n\r\n                if (i > 0 && !this.parentTable.showGridLines && cellSpacing > 0) {\r\n                    renderedCell.style.marginLeft = cellSpacing + \"px\";\r\n                }\r\n\r\n                rowElement.appendChild(renderedCell);\r\n            }\r\n        }\r\n\r\n        return rowElement.children.length > 0 ? rowElement : undefined;\r\n    }\r\n\r\n    protected shouldSerialize(_context: SerializationContext): boolean {\r\n        return true;\r\n    }\r\n\r\n    addCell(cell: TableCell) {\r\n        this.internalAddItem(cell);\r\n    }\r\n\r\n    removeCellAt(columnIndex: number): boolean {\r\n        if (columnIndex >= 0 && columnIndex < this.getItemCount()) {\r\n            return this.removeItem(this.getItemAt(columnIndex));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof TableCell ? this.internalIndexOf(cardElement) : -1;\r\n    }\r\n\r\n    ensureHasEnoughCells(cellCount: number) {\r\n        while (this.getItemCount() < cellCount) {\r\n            this.addCell(new TableCell());\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TableRow\";\r\n    }\r\n\r\n    getIsFirstRow(): boolean {\r\n        return this.parentTable.getItemAt(0) === this;\r\n    }\r\n\r\n    get parentTable(): Table {\r\n        return this.parent as Table;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class Table extends StylableContainer<TableRow> {\r\n    //#region Schema\r\n\r\n    private static readonly _columnsProperty = new SerializableObjectCollectionProperty(\r\n        Versions.v1_5,\r\n        \"columns\",\r\n        TableColumnDefinition\r\n    );\r\n\r\n    static readonly firstRowAsHeadersProperty = new BoolProperty(\r\n        Versions.v1_5,\r\n        \"firstRowAsHeaders\",\r\n        true\r\n    );\r\n    static readonly showGridLinesProperty = new BoolProperty(Versions.v1_5, \"showGridLines\", true);\r\n    static readonly gridStyleProperty = new ContainerStyleProperty(Versions.v1_5, \"gridStyle\");\r\n    static readonly horizontalCellContentAlignmentProperty = new EnumProperty(\r\n        Versions.v1_5,\r\n        \"horizontalCellContentAlignment\",\r\n        HorizontalAlignment\r\n    );\r\n    static readonly verticalCellContentAlignmentProperty = new EnumProperty(\r\n        Versions.v1_5,\r\n        \"verticalCellContentAlignment\",\r\n        VerticalAlignment\r\n    );\r\n\r\n    @property(Table._columnsProperty)\r\n    private _columns: TableColumnDefinition[] = [];\r\n\r\n    @property(Table.firstRowAsHeadersProperty)\r\n    firstRowAsHeaders: boolean = true;\r\n\r\n    @property(Table.showGridLinesProperty)\r\n    showGridLines: boolean = true;\r\n\r\n    @property(Table.gridStyleProperty)\r\n    get gridStyle(): string | undefined {\r\n        const style = this.getValue(Table.gridStyleProperty);\r\n\r\n        if (style && this.hostConfig.containerStyles.getStyleByName(style)) {\r\n            return style;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    set gridStyle(value: string | undefined) {\r\n        this.setValue(Table.gridStyleProperty, value);\r\n    }\r\n\r\n    @property(Table.horizontalCellContentAlignmentProperty)\r\n    horizontalCellContentAlignment?: HorizontalAlignment;\r\n\r\n    @property(Table.verticalCellContentAlignmentProperty)\r\n    verticalCellContentAlignment?: VerticalAlignment;\r\n\r\n    //#endregion\r\n\r\n    private ensureRowsHaveEnoughCells() {\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            this.getItemAt(i).ensureHasEnoughCells(this.getColumnCount());\r\n        }\r\n    }\r\n\r\n    private removeCellsFromColumn(columnIndex: number) {\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            this.getItemAt(i).removeCellAt(columnIndex);\r\n        }\r\n    }\r\n\r\n    protected getCollectionPropertyName(): string {\r\n        return \"rows\";\r\n    }\r\n\r\n    protected createItemInstance(typeName: string): TableRow | undefined {\r\n        return !typeName || typeName === \"TableRow\" ? new TableRow() : undefined;\r\n    }\r\n\r\n    protected internalParse(source: PropertyBag, context: SerializationContext) {\r\n        super.internalParse(source, context);\r\n\r\n        this.ensureRowsHaveEnoughCells();\r\n    }\r\n\r\n    protected internalRender(): HTMLElement | undefined {\r\n        if (this.getItemCount() > 0) {\r\n            let totalWeights: number = 0;\r\n\r\n            for (const column of this._columns) {\r\n                if (column.width.unit === SizeUnit.Weight) {\r\n                    totalWeights += column.width.physicalSize;\r\n                }\r\n            }\r\n\r\n            for (const column of this._columns) {\r\n                if (column.width.unit === SizeUnit.Pixel) {\r\n                    column.computedWidth = new SizeAndUnit(\r\n                        column.width.physicalSize,\r\n                        SizeUnit.Pixel\r\n                    );\r\n                } else {\r\n                    column.computedWidth = new SizeAndUnit(\r\n                        (100 / totalWeights) * column.width.physicalSize,\r\n                        SizeUnit.Weight\r\n                    );\r\n                }\r\n            }\r\n\r\n            const tableElement = document.createElement(\"div\");\r\n            tableElement.setAttribute(\"role\", \"table\");\r\n            tableElement.style.display = \"flex\";\r\n            tableElement.style.flexDirection = \"column\";\r\n\r\n            if (this.showGridLines) {\r\n                const styleDefinition = this.hostConfig.containerStyles.getStyleByName(\r\n                    this.gridStyle\r\n                );\r\n\r\n                if (styleDefinition.borderColor) {\r\n                    const borderColor = stringToCssColor(styleDefinition.borderColor);\r\n\r\n                    if (borderColor) {\r\n                        tableElement.style.borderTop = \"1px solid \" + borderColor;\r\n                        tableElement.style.borderLeft = \"1px solid \" + borderColor;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const cellSpacing = this.hostConfig.table.cellSpacing;\r\n\r\n            for (let i = 0; i < this.getItemCount(); i++) {\r\n                const renderedRow = this.getItemAt(i).render();\r\n\r\n                if (renderedRow) {\r\n                    if (i > 0 && !this.showGridLines && cellSpacing > 0) {\r\n                        const separatorRow = document.createElement(\"div\");\r\n                        separatorRow.setAttribute(\"aria-hidden\", \"true\");\r\n                        separatorRow.style.height = cellSpacing + \"px\";\r\n\r\n                        tableElement.appendChild(separatorRow);\r\n                    }\r\n\r\n                    tableElement.appendChild(renderedRow);\r\n                }\r\n            }\r\n\r\n            return tableElement;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    addColumn(column: TableColumnDefinition) {\r\n        this._columns.push(column);\r\n\r\n        this.ensureRowsHaveEnoughCells();\r\n    }\r\n\r\n    removeColumn(column: TableColumnDefinition) {\r\n        const index = this._columns.indexOf(column);\r\n\r\n        if (index >= 0) {\r\n            this.removeCellsFromColumn(index);\r\n\r\n            this._columns.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    getColumnCount(): number {\r\n        return this._columns.length;\r\n    }\r\n\r\n    getColumnAt(index: number): TableColumnDefinition {\r\n        return this._columns[index];\r\n    }\r\n\r\n    addRow(row: TableRow) {\r\n        this.internalAddItem(row);\r\n\r\n        row.ensureHasEnoughCells(this.getColumnCount());\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof TableRow ? this.internalIndexOf(cardElement) : -1;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Table\";\r\n    }\r\n}\r\n\r\nGlobalRegistry.defaultElements.register(\"Table\", Table, Versions.v1_5);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nabstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(lang: string | undefined, matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(lang: string | undefined, input: string | undefined): string | undefined {\r\n        let matches;\r\n\r\n        if (input) {\r\n            let result = input;\r\n\r\n            while ((matches = this._regularExpression.exec(input)) != null) {\r\n                result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n            }\r\n\r\n            return result;\r\n        } else {\r\n            return input;\r\n        }\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string | undefined, matches: RegExpExecArray): string {\r\n        const date = new Date(Date.parse(matches[1]));\r\n        const format = matches[2] !== undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format !== \"compact\") {\r\n            return date.toLocaleDateString(lang, {\r\n                day: \"numeric\",\r\n                weekday: format,\r\n                month: format,\r\n                year: \"numeric\"\r\n            } as Intl.DateTimeFormatOptions);\r\n        } else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string | undefined, matches: RegExpExecArray): string {\r\n        const date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(lang, { hour: \"numeric\", minute: \"2-digit\" });\r\n    }\r\n}\r\n\r\nexport function formatText(lang: string | undefined, text: string | undefined): string | undefined {\r\n    const formatters: AbstractTextFormatter[] = [\r\n        new DateFormatter(\r\n            /\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g\r\n        ),\r\n        new TimeFormatter(\r\n            /\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g\r\n        )\r\n    ];\r\n\r\n    let result = text;\r\n\r\n    for (const formatter of formatters) {\r\n        result = formatter.format(lang, result);\r\n    }\r\n\r\n    return result;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\n\r\n// To work around TypeScript complaining about documentMode not being declared\r\n// on type Document\r\ndeclare global {\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    interface Document {\r\n        documentMode?: any;\r\n    }\r\n}\r\n\r\nexport function isInternetExplorer(): boolean {\r\n    // The documentMode property only exists in IE\r\n    return window.document.documentMode !== undefined;\r\n}\r\n\r\nexport function isMobileOS(): boolean {\r\n    const userAgent = window.navigator.userAgent;\r\n\r\n    return (\r\n        !!userAgent.match(/Android/i) || !!userAgent.match(/iPad/i) || !!userAgent.match(/iPhone/i)\r\n    );\r\n}\r\n\r\n/**\r\n * Generate a UUID prepended with \"__ac-\"\r\n */\r\nexport function generateUniqueId(): string {\r\n    return \"__ac-\" + Shared.UUID.generate();\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node | undefined) {\r\n    if (child) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function parseString(obj: any, defaultValue?: string): string | undefined {\r\n    return typeof obj === \"string\" ? obj : defaultValue;\r\n}\r\n\r\nexport function parseNumber(obj: any, defaultValue?: number): number | undefined {\r\n    return typeof obj === \"number\" ? obj : defaultValue;\r\n}\r\n\r\nexport function parseBool(value: any, defaultValue?: boolean): boolean | undefined {\r\n    if (typeof value === \"boolean\") {\r\n        return value;\r\n    } else if (typeof value === \"string\") {\r\n        switch (value.toLowerCase()) {\r\n            case \"true\":\r\n                return true;\r\n            case \"false\":\r\n                return false;\r\n            default:\r\n                return defaultValue;\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function getEnumValueByName(\r\n    enumType: { [s: number]: string },\r\n    name: string\r\n): number | undefined {\r\n    // eslint-disable-next-line guard-for-in\r\n    for (const key in enumType) {\r\n        const keyAsNumber = parseInt(key, 10);\r\n\r\n        if (keyAsNumber >= 0) {\r\n            const value = enumType[key];\r\n\r\n            if (value && typeof value === \"string\" && value.toLowerCase() === name.toLowerCase()) {\r\n                return keyAsNumber;\r\n            }\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function parseEnum(\r\n    enumType: { [s: number]: string },\r\n    name: string,\r\n    defaultValue?: number\r\n): number | undefined {\r\n    if (!name) {\r\n        return defaultValue;\r\n    }\r\n\r\n    const enumValue = getEnumValueByName(enumType, name);\r\n\r\n    return enumValue !== undefined ? enumValue : defaultValue;\r\n}\r\n\r\nexport function stringToCssColor(color: string | undefined): string | undefined {\r\n    if (color) {\r\n        const regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n        const matches = regEx.exec(color);\r\n\r\n        if (matches && matches[4]) {\r\n            const a = parseInt(matches[1], 16) / 255;\r\n            const r = parseInt(matches[2], 16);\r\n            const g = parseInt(matches[3], 16);\r\n            const b = parseInt(matches[4], 16);\r\n\r\n            return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n        }\r\n    }\r\n\r\n    return color;\r\n}\r\n\r\nfunction truncateWorker(\r\n    element: HTMLElement,\r\n    maxHeight: number,\r\n    fullText: string,\r\n    truncateAt: (text: string, idx: number) => void,\r\n    lineHeight?: number\r\n) {\r\n    const fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) {\r\n        return;\r\n    }\r\n\r\n    const breakableIndices = findBreakableIndices(fullText);\r\n    let lo = 0;\r\n    let hi = breakableIndices.length;\r\n    let bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        const mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(fullText, breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        } else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(fullText, bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(fullText, idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(fullText, bestBreakIdx);\r\n    }\r\n}\r\n\r\nexport function truncateText(element: HTMLElement, maxHeight: number, lineHeight?: number) {\r\n    truncateWorker(\r\n        element,\r\n        maxHeight,\r\n        element.innerText,\r\n        (text: string, idx: number) => {\r\n            element.innerText = text.substring(0, idx) + \"...\";\r\n        },\r\n        lineHeight\r\n    );\r\n}\r\n\r\n/**\r\n * {@link truncate} has been deprecated and is no longer in use internally. This policy passes\r\n * content through as it always has, which is _supposed_ to be dealing with text only (see {@link\r\n * TextBlock.truncateIfSupported}), but had a bug where it might actually pass through an element\r\n * for which innerHTML yielded actual HTML (since fixed).\r\n */\r\nconst ttDeprecatedPolicy = (typeof window === 'undefined') ? undefined : window.trustedTypes?.createPolicy(\"adaptivecards#deprecatedExportedFunctionPolicy\", {\r\n    createHTML: (value) => value\r\n});\r\n\r\n/** @deprecated Use {@link truncateText} instead. */\r\nexport function truncate(element: HTMLElement, maxHeight: number, lineHeight?: number) {\r\n    truncateWorker(\r\n        element,\r\n        maxHeight,\r\n        element.innerHTML,\r\n        (text: string, idx: number) => {\r\n            const truncatedString = text.substring(0, idx) + \"...\";\r\n            const truncatedHTML =\r\n                ttDeprecatedPolicy?.createHTML(truncatedString) ?? truncatedString;\r\n            element.innerHTML = truncatedHTML as string;\r\n        },\r\n        lineHeight\r\n    );\r\n}\r\n\r\nfunction findBreakableIndices(html: string): number[] {\r\n    const results: number[] = [];\r\n    let idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] === \" \") {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] === \"<\") {\r\n        while (currIdx < html.length && html[currIdx++] !== \">\") {\r\n            continue;\r\n        }\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    const start = element.offsetTop;\r\n    const end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    } else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    } else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n\r\nexport function getScrollX(): number {\r\n    return window.pageXOffset;\r\n}\r\n\r\nexport function getScrollY(): number {\r\n    return window.pageYOffset;\r\n}\r\n\r\nexport function clearElementChildren(element: HTMLElement) {\r\n    while (element.firstChild) {\r\n        element.removeChild(element.firstChild);\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(402);\n"],"names":["root","factory","exports","module","define","amd","this","ActivityRequestTrigger","ActivityRequestError","code","message","request","ActivityResponse","rawContent","SuccessResponse","error","ErrorResponse","auth","_auth","buttons","button","type","undefined","value","URL","signinButton","e","tokenExchangeResource","LoginRequestResponse","logEvent","level","GlobalSettings","applets","logEnabled","onLogEvent","optionalParams","Enums","LogLevel","Warning","console","warn","Error","log","action","trigger","consecutiveRefreshes","attemptNumber","retryAsync","onSend","_allowAutomaticCardUpdate","renderedElement","document","createElement","className","style","position","display","flexDirection","_cardHostElement","_refreshButtonHostElement","appendChild","displayCard","card","Utils","clearElementChildren","showManualRefreshButton","refreshAction","onShowManualRefreshButton","renderedRefreshButton","onRenderManualRefreshButton","Strings","runtime","refreshThisCard","refresh","mode","RefreshMode","Automatic","autoRefreshPausedMessage","automaticRefreshPaused","length","clckToRestartAutomaticRefresh","cardPayload","version","body","horizontalAlignment","inlines","text","selectAction","id","AdaptiveCard","parse","SerializationContext","Versions","v1_2","onExecuteAction","internalExecuteAction","render","removeProperty","createActivityRequest","ActivityRequest","sender","internalSendActivityRequestAsync","onPrepareActivityRequest","createMagicCodeInputCard","payload","color","wrap","placeholder","actions","AdaptiveApplet","_submitMagicCodeActionId","title","_cancelMagicCodeAuthActionId","cancelAutomaticRefresh","createSerializationContext","onCreateSerializationContext","internalSetCard","_cardPayload","hostConfig","serializationContext","onCardChanging","_card","authentication","onPrefetchSSOToken","Manual","onInputValueChanged","_input","onCardChanged","maximumConsecutiveAutomaticRefreshes","timeBetweenAutomaticRefreshes","Info","window","setTimeout","Disabled","allowManualRefreshesAfterAutomaticRefreshes","ExecuteAction","channelAdapter","onAction","createProgressOverlay","_progressOverlay","onCreateProgressOverlay","spinner","width","height","removeProgressOverlay","onRemoveProgressOverlay","removeChild","activityRequestSucceeded","response","parsedContent","onActivityRequestSucceeded","activityRequestFailed","onActivityRequestFailed","defaultTimeBetweenRetryAttempts","showAuthCodeInputDialog","onShowAuthCodeInputDialog","authCodeInputCard","submitMagicCodeAction","SubmitAction","authCode","data","alert","magicCodeInputCard","somethingWentWrong","overlay","done","sendRequestAsync","JSON","maximumRetryAttempts","Promise","resolve","_reject","attemptOAuth","onSSOTokenNeeded","onShowSigninPrompt","left","screenX","outerWidth","authPromptWidth","screenY","outerHeight","authPromptHeight","open","authenticationFailed","stringify","refreshCard","setCard","clearElement","element","trustedHtml","trustedTypes","emptyHTML","innerHTML","renderSeparation","separationDefinition","orientation","spacing","lineThickness","separator","makeCssClassName","Orientation","Horizontal","setAttribute","lineColor","stringToCssColor","paddingTop","marginBottom","borderBottom","paddingLeft","marginRight","borderRight","overflow","flex","_truncatedDueToOverflow","getValue","CardElement","langProperty","parent","lang","setValue","isVisibleProperty","useAdvancedCardBottomTruncation","undoOverflowTruncation","isVisible","updateRenderedElementVisibility","_renderedElement","raiseElementVisibilityChangedEvent","toString","internalRenderSeparator","renderedSeparator","getEffectiveSpacing","separatorOrientation","alwaysBleedSeparators","parentContainer","getParentContainer","getEffectivePadding","parentPhysicalPadding","paddingDefinitionToSpacingDefinition","marginLeft","right","displayMode","isDesignMode","_defaultRenderedElementDisplayMode","_separatorElement","isFirstElement","hideElementDueToOverflow","visibility","showElementHiddenDueToOverflow","handleOverflow","maxHeight","isHiddenDueToOverflow","handled","truncateOverflow","resetOverflow","sizeChanged","getDefaultSerializationContext","createPlaceholderElement","styleDefinition","getEffectiveStyleDefinition","foregroundCssColor","foregroundColors","default","subtle","border","padding","minHeight","fontSize","innerText","getJsonTypeName","adjustRenderedElementSize","isDisplayed","offsetHeight","overrideInternalRender","internalRender","applyPadding","separatorElement","isBleeding","PaddingDefinition","getImmediateSurroundingPadding","physicalPadding","_maxHeight","getDefaultPadding","getHasBackground","ignoreBackgroundImages","getHasBorder","getPadding","_padding","setPadding","shouldSerialize","context","elementRegistry","findByName","ContainerStyle","Default","source","asString","getEffectiveStyle","defaultStyle","containerStyles","getStyleByName","getEffectiveTextStyleDefinition","textStyles","getForbiddenActionTypes","result","processTop","processRight","processBottom","processLeft","doProcessTop","isTopElement","doProcessRight","isRightMostElement","doProcessBottom","isBottomElement","doProcessLeft","isLeftMostElement","effectivePadding","top","Spacing","None","bottom","getActionCount","getActionAt","index","errors","indexOutOfRange","indexOfAction","i","remove","CardElementContainer","removeItem","customCssSelector","classList","add","boxSizing","updateLayout","getRootElement","updateActionsEnabledState","_processChildren","getAllActions","updateEnabledState","indexOf","_cardElement","rootElement","designMode","_element","isLastElement","isAtTheVeryLeft","isAtTheVeryRight","isAtTheVeryTop","isAtTheVeryBottom","isBleedingAtTop","isBleedingAtBottom","getRootObject","currentElement","Container","getAllInputs","processActions","push","getResourceInformation","getElementById","getActionById","_id","getEffectiveHorizontalAlignment","HorizontalAlignment","Left","_hostConfig","defaultHostConfig","_parent","getElementSingletonBehavior","ElementSingletonBehavior","NotAllowed","StringProperty","v1_1","BoolProperty","separatorProperty","v1_0","heightProperty","ValueSetProperty","horizontalAlignmentProperty","EnumProperty","spacingProperty","property","CardObject","targetVersion","name","forbiddenActionTypes","parseAction","toJSON","target","serializeValue","PropertyDefinition","ActionProperty","ariaHidden","populateSchema","schema","BaseTextBlock","selectActionProperty","textProperty","setText","getFontSize","fontType","effectiveSize","TextSize","Small","fontSizes","small","Medium","medium","Large","large","ExtraLarge","extraLarge","getColorDefinition","colorSet","TextColor","Accent","accent","Dark","dark","Light","light","Good","good","warning","Attention","attention","init","textDefinition","size","weight","isSubtle","applyStylesTo","targetElement","getFontTypeDefinition","effectiveFontType","fontFamily","fontWeight","colorDefinition","effectiveColor","targetColor","effectiveIsSubtle","effectiveWeight","TextWeight","Lighter","fontWeights","lighter","Bolder","bolder","sizeProperty","weightProperty","colorProperty","isSubtleProperty","fontTypeProperty","FontType","_treatAsPlainText","useMarkdown","restoreOriginalContent","maxLines","_computedLineHeight","originalHtml","TextBlock","_ttRoundtripPolicy","createHTML","_originalInnerHtml","truncateIfSupported","children","isTextOnly","tagName","toLowerCase","truncateText","_processedText","preProcessedText","preProcessPropertyValue","forElementId","labelElement","htmlFor","headingLevel","textBlock","supportsInteractivity","onclick","isEffectivelyEnabled","preventDefault","cancelBubble","execute","setupElementForAccessibility","formattedText","TextFormatters","formatText","allowMarkForTextHighlighting","replace","markdownProcessingResult","applyMarkdown","didProcess","outputHtml","markStyle","effectiveStyle","highlightBackgroundColor","highlightForegroundColor","processedHtml","_ttMarkdownPolicy","firstElementChild","HTMLElement","marginTop","textOverflow","lastElementChild","anchors","getElementsByTagName","anchor","raiseAnchorClickedEvent","oncontextmenu","Array","from","wordWrap","isInternetExplorer","useWebkitLineClamp","webkitBoxOrient","webkitLineClamp","whiteSpace","useAdvancedTextBlockTruncation","Center","textAlign","Right","lineHeights","lineHeight","processChildren","wrapProperty","maxLinesProperty","NumProperty","styleProperty","v1_5","createPolicy","italic","strikethrough","highlight","underline","href","getHref","fontStyle","textDecoration","backgroundColor","highlightColors","italicProperty","strikethroughProperty","highlightProperty","underlineProperty","v1_3","TextRun","_inlines","internalAddInline","inline","forceAdd","isInline","elementCannotBeUsedAsInline","inlineAlreadyParented","setParent","internalParse","isArray","jsonInline","textRun","parseElement","internalToJSON","jsonInlines","renderedInlines","renderedInline","getInlineCount","getInlineAt","addInline","removeInline","splice","RichTextBlock","getSchemaKey","titleProperty","valueProperty","Fact","SerializableObject","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","trElement","factSet","tdElement","maxWidth","verticalAlign","factsProperty","SerializableObjectCollectionProperty","FactSet","internalName","fallbackProperty","getInternalName","sourceValue","defaultValue","isValid","SizeAndUnit","unit","SizeUnit","Pixel","physicalSize","isValidValue","logParseEvent","ValidationEvent","InvalidPropertyValue","invalidPropertyValue","isNaN","Size","Auto","ImageStyle","applySize","pixelWidth","pixelHeight","imageSizes","Stretch","url","alignItems","justifyContent","imageElement","onload","_e","raiseImageLoadedEvent","onerror","errorElement","minWidth","onkeypress","Person","borderRadius","backgroundPosition","backgroundRepeat","src","Image","urlProperty","altTextProperty","alt","mimeType","backgroundColorProperty","pixelWidthProperty","ImageDimensionProperty","pixelHeightProperty","allowVerticalOverflow","isSelectable","isElementAllowed","isInteractive","SpacingDefinition","paddingRight","paddingBottom","forbiddenChildElements","releaseDOMResources","getItemCount","getItemAt","internalValidateProperties","item","addFailure","InteractivityNotAllowed","interactivityNotAllowed","elementTypeNotAllowed","_selectAction","overflowX","overflowY","findDOMNodeOwner","node","_images","imageSize","ImageSize","flexWrap","image","imageSet","maxImageHeight","renderedImage","margin","getFirstVisibleRenderedItem","getLastVisibleRenderedItem","itemIndex","addImage","cardElement","imagesProperty","imageSizeProperty","ImageSet","mimeTypeProperty","ContentSource","label","kind","labelProperty","v1_6","CaptionSource","MediaSource","play","_posterUrl","MediaPlayer","owner","_selectedSources","_captionSources","processSources","_selectedMediaType","sources","mimeComponents","split","HTML5MediaPlayer","supportedMediaTypes","captionSources","canPlay","fetchVideoDetails","_mediaElement","altText","defaults","mediaPlayerAriaLabel","autoplay","controls","isMobileOS","muted","preload","renderedSource","captionSource","renderedCaptionSource","matches","CustomMediaPlayer","iFrameTitle","_videoId","container","iFrame","getEmbedVideoUrl","frameBorder","allow","allowFullscreen","IFrameMediaMediaPlayer","oEmbedUrl","fetch","ok","json","posterUrl","videoId","VimeoPlayer","apiUrl","DailymotionPlayer","_startTimeIndex","parseInt","YouTubePlayer","createMediaPlayer","Media","customMediaPlayers","provider","urlPatterns","exec","handlePlayButtonInvoke","event","media","allowInlinePlayback","mediaPlayerElement","_mediaPlayer","focus","onPlay","displayPoster","poster","defaultPoster","parentNode","playButtonOuterElement","tabIndex","mediaPlayerPlayMedia","playButtonInnerElement","playButtonArrowWidth","playButtonArrowHeight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopColor","borderRightColor","borderBottomColor","transform","playButtonContainer","then","mediaSource","selectedMediaType","youTubeVideoPlayer","vimeoVideoPlayer","dailymotionVideoPlayer","sourcesProperty","captionSourcesProperty","posterProperty","getAllLabelIds","labelIds","labelledBy","_renderedLabelElement","_renderedErrorMessageElement","updateInputControlAriaLabelledBy","_renderedInputControlElement","join","removeAttribute","_inputControlContainerElement","_outerContainerElement","renderedInputControlId","generateUniqueId","labelRichTextBlock","labelInline","isRequired","inputs","requiredInputs","isRequiredCueInline","suffix","suffixColor","optionalInputs","inputSpacing","isNullable","resetDirtyState","valueChanged","input","onInputValueChangedHandler","resetValidationFailureCue","onValueChanged","renderedInputControlElement","showValidationErrorMessage","errorMessage","displayInputValidationErrors","errorMessageTextBlock","isDirty","_oldValue","PropertyCantBeNull","inputsMustHaveUniqueId","RequiredInputsShouldHaveLabel","RequiredInputsShouldHaveErrorMessage","validateValue","isSet","isRequiredProperty","errorMessageProperty","Input","isMultiline","InputTextStyle","Text","setupInput","maxLength","oninput","ctrlKey","inlineAction","Password","renderedInputControl","iconUrl","textContent","inlineActionTitle","inputControlContainerElement","regex","RegExp","test","maxLengthProperty","isMultilineProperty","placeholderProperty","Tel","Url","Email","inlineActionProperty","regexProperty","TextInput","valueOn","valueOff","_checkboxInputElement","joinedLabelIds","_checkboxInputLabelElement","checked","_oldCheckboxValue","onchange","useMarkdownInRadioButtonAndCheckbox","spacerElement","valueOnProperty","valueOffProperty","ToggleInput","Choice","isMultiSelect","choices","getUniqueCategoryName","uniqueCategoryName","ChoiceSetInput","_uniqueCategoryCounter","internalApplyAriaCurrent","_selectElement","options","option","selected","renderCompoundInput","cssClassName","defaultValues","_toggleInputs","_labels","choice","_uniqueCategoryName","compoundInput","choiceSetInputValueSeparator","inputContainer","_textInput","dataList","append","placeholderOption","disabled","hidden","CollectionCantBeEmpty","choiceSetMustHaveAtLeastOneChoice","choiceSetChoicesMustHaveTitleAndValue","toggleInput","selectedIndex","choicesProperty","isMultiSelectProperty","_numberInputElement","min","max","valueAsNumber","minProperty","maxProperty","NumberInput","_dateInputElement","valueAsDate","Date","minDate","maxDate","DateInput","prop","CustomProperty","TimeProperty","convertTimeStringToDate","timeString","_timeInputElement","TimeInput","ActionStyle","ActionMode","Primary","_state","_isFocusable","renderButtonContent","titleElement","iconPlacement","ActionIconPlacement","AboveTitle","allowTitleToWrap","iconElement","iconSize","updateCssClasses","parentContainerStyle","isFocusable","Positive","makeCssClassNames","internalGetReferencedInputs","internalPrepareForExecution","_inputs","internalValidateInputs","referencedInputs","Object","keys","actionRegistry","raiseExecuteActionEvent","onExecuteActionHandler","onExecute","prepareForExecution","internalAfterExecute","rootObject","getAriaRole","promoteTooltipToLabel","HTMLButtonElement","tooltip","targetAriaAttribute","buttonElement","_actionCollection","actionExecuted","getReferencedInputs","invalidInputs","removeAction","validateInputs","isEnabled","iconUrlProperty","Destructive","modeProperty","Secondary","tooltipProperty","isEnabledProperty","Action","disabledUnlessAssociatedInputsChange","_isPrepared","_areReferencedInputsDirty","associatedInputs","current","_originalData","_processedData","resetInputsDirtyStateAfterActionExecution","resetReferencedInputsDirtyState","dataProperty","associatedInputsProperty","disabledUnlessAssociatedInputsChangeProperty","SubmitActionBase","JsonTypeName","verbProperty","v1_4","OpenUrlAction","propertyMustBeSet","targetElements","updateAriaControlsAttribute","elementIds","ToggleVisibilityAction","elementId","addTargetElement","removeTargetElement","targetElementsProperty","parseBool","serializeArray","StringWithSubstitutions","set","parseString","getOriginal","_value","substituteInputValues","ContentTypes","applicationXWwwFormUrlencoded","get","newValue","nameProperty","StringWithSubstitutionProperty","HttpHeader","_ignoreInputValidation","allInputs","_url","headers","_body","contentType","applicationJson","header","HttpAction","actionHttpHeadersMustHaveNameAndValue","bodyProperty","methodProperty","headersProperty","ignoreInputValidationProperty","InlineAdaptiveCard","effectiveHostConfig","state","jsonCard","showCardMustHaveCard","showCard","actionMode","ShowCardActionMode","Popup","ShowCardAction","_actions","overflowButtonText","getActions","onDisplayOverflowActionMenuHandler","onDisplayOverflowActionMenu","PopupMenu","menuItem","MenuItem","onClick","actionToExecute","closePopup","items","popup","_items","_renderedActions","_owner","isActionAllowed","forbiddenTypes","forbiddenType","constructor","refreshContainer","_actionCardContainer","_actionCard","renderedActionCount","inlineTopMargin","layoutChanged","showActionCard","suppressStyle","raiseEvent","renderedCard","_expandedAction","raiseInlineCardExpandedEvent","collapseExpandedAction","previouslyExpandedAction","expandShowCardAction","afterSelectedAction","renderedAction","actionsOrientation","onblur","Inline","clear","jsonAction","forbiddenActions","ContainerWithActions","getForbiddenActionNames","addAction","propertyName","validateProperties","maxActions","TooManyActions","tooManyActions","ActionTypeNotAllowed","actionTypeNotAllowed","Math","preExpandSingleShowCardAction","buttonStrip","actionAlignment","ActionAlignment","allowedActions","filter","bind","forEach","overflowPrimaryActions","allowMoreThanMaxActionsInOverflowMenu","shouldRenderOverflowActionButton","_overflowAction","OverflowAction","isRootAction","isAtRootLevelActions","onRenderOverflowActionsHandler","onRenderOverflowActions","raiseRenderOverflowActionsEvent","buttonSpacing","spacer","buttonStripContainer","actionAlreadyParented","expandedAction","actionIndex","ActionCollection","orientationProperty","ActionSet","onGetInitialValue","Emphasis","ContainerStyleProperty","allowCustomStyle","StylableCardElementContainer","applyBorder","applyBackground","bgColor","surroundingPadding","currentElementHasBackgroundImage","backgroundImage","hasExplicitStyle","Padding","explicitStyle","_bleed","minPixelHeight","getHasExpandedAction","getBleed","setBleed","alwaysAllowBleed","bleedProperty","minHeightProperty","PixelSizeProperty","ContainerBase","resetDefaultValues","apply","BackgroundImage","fillMode","FillMode","Repeat","RepeatHorizontally","RepeatVertically","Cover","backgroundSize","backgroundPositionX","verticalAlignment","VerticalAlignment","Top","backgroundPositionY","Bottom","fillModeProperty","verticalAlignmentProperty","_renderedItems","backgroundImageProperty","insertItemAt","forceInsert","elementAlreadyParented","isStandalone","elementTypeNotStandalone","getItemsCollectionPropertyName","applyRTL","rtl","dir","getEffectiveVerticalContentAlignment","renderedItem","placeholderElement","offsetTop","elt","getFitStatus","ContainerFitStatus","FullyInContainer","Overflowing","containerMaxHeight","FullyOutOfContainer","canHostSingletons","setShouldFallback","jsonItems","typeName","registration","singletonBehavior","collectionPropertyName","Only","removePaddingFromContainersWithBackgroundImage","verticalContentAlignment","isRtl","firstRenderedItem","lastRenderedItem","addItem","insertItemBefore","insertBefore","insertItemAfter","insertAfter","SerializableObjectProperty","verticalContentAlignmentProperty","rtlProperty","_computedWeight","_context","Vertical","ColumnSet","widthProperty","invalidWidth","compareTo","Weight","invalidColumnWidth","serializeNumber","Column","_columns","createColumnInstance","parseCardObject","_errorType","ElementTypeNotAllowed","_renderedColumns","totalWeight","column","computedWeight","renderedColumn","jsonColumns","getColumnAt","weightedColumns","stretchedColumns","Hint","hints","dontUseWeightedAndStrecthedColumnsInSameSet","addColumn","columnAlreadyBelongsToAnotherSet","onImageLoadedHandler","onImageLoaded","ev","onAnchorClickedHandler","onAnchorClicked","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","shouldUpdateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","parseActions","renderedActions","renderIfEmpty","RefreshActionProperty","RefreshDefinition","actionProperty","userIdsProperty","StringArrayProperty","typeProperty","imageProperty","AuthCardButton","idProperty","uriProperty","providerIdProperty","TokenExchangeResource","connectionNameProperty","buttonsProperty","tokenExchangeResourceProperty","Authentication","refreshProperty","processMarkdownEventRemoved","onProcessMarkdown","markdownit","markdownIt","_haveWarnedAboutNoMarkdownProcessing","markdownProcessingNotEnabled","isVersionSupported","bypassVersionCheck","maxVersion","major","minor","_fallbackCard","fallbackElement","versionProperty","adaptiveCard","typeNameProperty","MissingCardType","invalidCardType","UnsupportedCardVersion","unsupportedCardVersion","shouldFallback","setTabIndexAtCardRoot","speak","schemaUrl","$schemaProperty","Version","latest","invalidCardVersion","fallbackTextProperty","speakProperty","authenticationProperty","_forbiddenTypes","Set","internalParseCardObject","allowFallback","createInstanceCallback","parsingSingletonObject","ignoreForbiddenType","has","TypeErrorType","ForbiddenType","tryToFallback","enableFallback","UnknownType","fallback","cardObjectParsed","o","onParseAction","onParseElement","forbiddenTypeNames","_parsingSingletonObject","createInstance","errorType","UnknownElementType","unknownElementType","UnknownActionType","unknownActionType","_elementRegistry","GlobalRegistry","elements","setElementRegistry","_actionRegistry","setActionRegistry","BaseSerializationContext","defaultElements","register","defaultActions","allIds","validationEvents","cardObject","phase","ValidationPhase","Validation","ValidationResults","_shouldFallback","requiresProperty","contains","propertyValue","allowPreProcessingPropertyValues","currentObject","onPreProcessPropertyValue","requires","areAllMet","hostCapabilities","hasOwnProperty","DuplicateId","duplicateId","HostCapabilities","ChannelAdapter","onItemAdded","onItemRemoved","Collection","tab","enter","escape","space","up","down","delete","Constants","key","_isEnabled","click","onmouseup","onkeydown","_isOpen","keyDown","_rootElementBounds","renderContent","_popupElement","_overlayElement","documentElement","scrollWidth","scrollHeight","onfocus","rootElementBounds","getBoundingClientRect","addEventListener","rootElementLabel","getAttribute","popupElementBounds","availableSpaceBelow","innerHeight","availableSpaceAbove","availableSpaceRight","innerWidth","availableSpaceLeft","getScrollX","actualPopupHeight","getScrollY","actualPopupWidth","wasCancelled","onClose","PopupControl","_selectedIndex","selectedItemIndex","_capabilities","jsonVersion","addCapability","removeCapability","hasCapability","capabilityName","parseHostConfigEnum","targetEnum","parsedValue","parseEnum","defaultColor","subtleColor","obj","ColorDefinition","TextColorDefinition","AdaptiveCardConfig","parseNumber","ImageSetConfig","MediaConfig","cellSpacing","TableConfig","getDefaultWeight","BaseTextDefinition","TextStyleDefinition","heading","columnHeader","TextStyleSet","TextBlockConfig","RequiredInputLabelTextDefinition","InputLabelConfig","InputConfig","FactTextDefinition","FactTitleDefinition","FactSetConfig","ShowCardActionConfig","LeftOfTitle","sizeAndUnit","Shared","ActionsConfig","parseSingleColor","ColorSetDefinition","borderColor","ContainerStyleDefinition","_allStyles","BuiltInContainerStyleDefinition","customStyleArray","customStyle","styleName","isBuiltIn","emphasis","customStyles","ContainerStyleSet","monospace","FontTypeDefinition","getStyleDefinition","Monospace","FontTypeSet","table","String","_legacyFontType","fontTypes","paddingDefinition","classNames","cssClassNamePrefix","HostConfig","copyTo","typeRegistration","objectType","schemaVersion","registrationInfo","unregister","map","CardObjectRegistry","populateWithDefaultElements","registry","populateWithDefaultActions","_elements","reset","_isValid","_major","_minor","_label","versionString","_versionString","invalidVersionString","otherVersion","getAllDeclaredVersions","ctor","properties","match","sort","v1","v2","_validationEvents","forceDeleteIfNullOrDefault","enableFullJsonRoundTrip","serializeString","serializeBool","serializeEnum","enumType","serializedItem","clearEvents","Parse","getEventAt","isSerializationEnabled","sequentialNumber","_sequentialNumber","treatEmptyAsUndefined","regEx","values","versionedValue","propertyValueNotSupported","invalidValue","ToJSON","_values","keyAsNumber","enumValue","getEnumValueByName","nullable","serializedValue","hasAllDefaultValues","sourceCollection","sourceItem","onParse","onToJSON","_properties","getCount","SerializableObjectSchema","propertyKey","descriptor","getOwnPropertyDescriptor","defineProperty","_propertyBag","_rawProperties","defaultMaxVersion","s","getSchema","SimpleSerializationContext","sortedProperties","p1","p2","onRegisterCustomProperties","UnsupportedProperty","propertyNotSupported","serializedProperties","effectiveContext","toJSONOriginalParam","hasDefaultValue","setCustomProperty","getCustomProperty","_schemaCache","logLevel","_isProcessed","_original","_processed","matchedInput","valueForReplace","slice","encodeURIComponent","requireUnitSpecifier","expectedMatchCount","generate","d0","random","d1","d2","d3","UUID","lut","initialize","defaultingToVersion","supportedInVersion","versionUsed","maximumActions","tooLittleTimeDelay","minAutoplayDelay","maxSupportedVersion","tryAgain","pleaseLogin","enterMagicCode","pleaseEnterMagicCodeYouReceived","submit","cancel","horizontalCellContentAlignmentProperty","verticalCellContentAlignmentProperty","TableColumnDefinition","parseItem","createItemInstance","internalAddItem","internalRemoveItem","internalIndexOf","getCollectionPropertyName","instance","StylableContainer","_columnIndex","_cellType","parentRow","parentTable","showGridLines","gridStyle","cellElement","cellType","horizontalCellContentAlignment","columnIndex","verticalCellContentAlignment","TableCell","isFirstRow","getIsFirstRow","rowElement","getColumnCount","cell","firstRowAsHeaders","renderedCell","computedWidth","addCell","removeCellAt","ensureHasEnoughCells","cellCount","TableRow","Table","gridStyleProperty","ensureRowsHaveEnoughCells","removeCellsFromColumn","totalWeights","tableElement","borderTop","borderLeft","renderedRow","separatorRow","removeColumn","addRow","row","_columnsProperty","firstRowAsHeadersProperty","showGridLinesProperty","regularExpression","_regularExpression","format","internalFormat","date","toLocaleDateString","day","weekday","month","year","AbstractTextFormatter","toLocaleTimeString","hour","minute","DateFormatter","TimeFormatter","truncateWorker","fullText","truncateAt","fits","breakableIndices","html","results","idx","findNextCharacter","findBreakableIndices","lo","hi","bestBreakIdx","mid","floor","documentMode","userAgent","navigator","child","a","substring","ttDeprecatedPolicy","currIdx","truncatedString","truncatedHTML","containerEnd","start","clientHeight","pageXOffset","pageYOffset","firstChild","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}