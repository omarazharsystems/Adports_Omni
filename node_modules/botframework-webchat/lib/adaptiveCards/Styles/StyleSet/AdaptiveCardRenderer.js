"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_ref) {
  var cardPushButtonBackgroundColor = _ref.cardPushButtonBackgroundColor,
      cardPushButtonTextColor = _ref.cardPushButtonTextColor,
      accent = _ref.accent,
      paddingRegular = _ref.paddingRegular,
      primaryFont = _ref.primaryFont;
  return {
    '&.webchat__adaptive-card-renderer': {
      // Related to #4075.
      // Adaptive Cards assume its host is in "forced border-box" mode.
      // In CSS, the default is "content-box" mode.
      // https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing#values
      '& *': {
        boxSizing: 'border-box'
      },
      '& .ac-input, & .ac-inlineActionButton, & .ac-quickActionButton': {
        fontFamily: primaryFont
      },
      '& .ac-multichoiceInput': {
        padding: paddingRegular
      },
      '& .ac-pushButton': {
        appearance: 'none',
        backgroundColor: 'White',
        borderStyle: 'solid',
        borderWidth: 1,
        color: accent,
        fontWeight: 600,
        padding: paddingRegular
      },
      '& .ac-pushButton.style-destructive': {
        backgroundColor: '#E50000',
        color: 'white'
      },
      '& .ac-pushButton.style-destructive:hover, & .ac-pushButton.style-destructive:active': {
        backgroundColor: '#BF0000'
      },
      '& .ac-pushButton.style-positive': {
        backgroundColor: '#0078D7',
        color: 'white'
      },
      '& .ac-pushButton.style-positive:hover, & .ac-pushButton.style-positive:active': {
        backgroundColor: '#006ABC'
      },
      // The following styles are copied from :disabled via Chromium.
      '& .ac-pushButton, & input, & select, & textarea': {
        '&[aria-disabled="true"]': {
          backgroundColor: 'rgba(239, 239, 239, 0.3)',
          borderColor: 'rgba(118, 118, 118, 0.3)',
          borderStyle: 'solid',
          borderWidth: 1,
          color: '#545454'
        }
      },
      '& .ac-pushButton[aria-disabled="true"]': {
        backgroundColor: '#EEE',
        color: '#4F4F4F'
      },
      '& .ac-pushButton[aria-pressed="true"]': {
        backgroundColor: cardPushButtonBackgroundColor,
        borderColor: cardPushButtonBackgroundColor,
        color: cardPushButtonTextColor
      },
      '& input[aria-disabled="true"]': {
        padding: '2px 1px'
      }
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYXJkUHVzaEJ1dHRvbkJhY2tncm91bmRDb2xvciIsImNhcmRQdXNoQnV0dG9uVGV4dENvbG9yIiwiYWNjZW50IiwicGFkZGluZ1JlZ3VsYXIiLCJwcmltYXJ5Rm9udCIsImJveFNpemluZyIsImZvbnRGYW1pbHkiLCJwYWRkaW5nIiwiYXBwZWFyYW5jZSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJjb2xvciIsImZvbnRXZWlnaHQiLCJib3JkZXJDb2xvciJdLCJzb3VyY2VSb290IjoiYnVuZGxlOi8vLyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2FkYXB0aXZlQ2FyZHMvU3R5bGVzL1N0eWxlU2V0L0FkYXB0aXZlQ2FyZFJlbmRlcmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGdWxsQnVuZGxlU3R5bGVPcHRpb25zIGZyb20gJy4uLy4uLy4uL3R5cGVzL0Z1bGxCdW5kbGVTdHlsZU9wdGlvbnMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoe1xuICBjYXJkUHVzaEJ1dHRvbkJhY2tncm91bmRDb2xvcixcbiAgY2FyZFB1c2hCdXR0b25UZXh0Q29sb3IsXG4gIGFjY2VudCxcbiAgcGFkZGluZ1JlZ3VsYXIsXG4gIHByaW1hcnlGb250XG59OiBGdWxsQnVuZGxlU3R5bGVPcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgJyYud2ViY2hhdF9fYWRhcHRpdmUtY2FyZC1yZW5kZXJlcic6IHtcbiAgICAgIC8vIFJlbGF0ZWQgdG8gIzQwNzUuXG4gICAgICAvLyBBZGFwdGl2ZSBDYXJkcyBhc3N1bWUgaXRzIGhvc3QgaXMgaW4gXCJmb3JjZWQgYm9yZGVyLWJveFwiIG1vZGUuXG4gICAgICAvLyBJbiBDU1MsIHRoZSBkZWZhdWx0IGlzIFwiY29udGVudC1ib3hcIiBtb2RlLlxuICAgICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2JveC1zaXppbmcjdmFsdWVzXG4gICAgICAnJiAqJzoge1xuICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94J1xuICAgICAgfSxcblxuICAgICAgJyYgLmFjLWlucHV0LCAmIC5hYy1pbmxpbmVBY3Rpb25CdXR0b24sICYgLmFjLXF1aWNrQWN0aW9uQnV0dG9uJzoge1xuICAgICAgICBmb250RmFtaWx5OiBwcmltYXJ5Rm9udFxuICAgICAgfSxcblxuICAgICAgJyYgLmFjLW11bHRpY2hvaWNlSW5wdXQnOiB7XG4gICAgICAgIHBhZGRpbmc6IHBhZGRpbmdSZWd1bGFyXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvbic6IHtcbiAgICAgICAgYXBwZWFyYW5jZTogJ25vbmUnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdXaGl0ZScsXG4gICAgICAgIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICAgICAgICBib3JkZXJXaWR0aDogMSxcbiAgICAgICAgY29sb3I6IGFjY2VudCxcbiAgICAgICAgZm9udFdlaWdodDogNjAwLFxuICAgICAgICBwYWRkaW5nOiBwYWRkaW5nUmVndWxhclxuICAgICAgfSxcblxuICAgICAgJyYgLmFjLXB1c2hCdXR0b24uc3R5bGUtZGVzdHJ1Y3RpdmUnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNFNTAwMDAnLFxuICAgICAgICBjb2xvcjogJ3doaXRlJ1xuICAgICAgfSxcblxuICAgICAgJyYgLmFjLXB1c2hCdXR0b24uc3R5bGUtZGVzdHJ1Y3RpdmU6aG92ZXIsICYgLmFjLXB1c2hCdXR0b24uc3R5bGUtZGVzdHJ1Y3RpdmU6YWN0aXZlJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjQkYwMDAwJ1xuICAgICAgfSxcblxuICAgICAgJyYgLmFjLXB1c2hCdXR0b24uc3R5bGUtcG9zaXRpdmUnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMwMDc4RDcnLFxuICAgICAgICBjb2xvcjogJ3doaXRlJ1xuICAgICAgfSxcblxuICAgICAgJyYgLmFjLXB1c2hCdXR0b24uc3R5bGUtcG9zaXRpdmU6aG92ZXIsICYgLmFjLXB1c2hCdXR0b24uc3R5bGUtcG9zaXRpdmU6YWN0aXZlJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMDA2QUJDJ1xuICAgICAgfSxcblxuICAgICAgLy8gVGhlIGZvbGxvd2luZyBzdHlsZXMgYXJlIGNvcGllZCBmcm9tIDpkaXNhYmxlZCB2aWEgQ2hyb21pdW0uXG5cbiAgICAgICcmIC5hYy1wdXNoQnV0dG9uLCAmIGlucHV0LCAmIHNlbGVjdCwgJiB0ZXh0YXJlYSc6IHtcbiAgICAgICAgJyZbYXJpYS1kaXNhYmxlZD1cInRydWVcIl0nOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgyMzksIDIzOSwgMjM5LCAwLjMpJyxcbiAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMTE4LCAxMTgsIDExOCwgMC4zKScsXG4gICAgICAgICAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDEsXG4gICAgICAgICAgY29sb3I6ICcjNTQ1NDU0J1xuICAgICAgICB9XG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvblthcmlhLWRpc2FibGVkPVwidHJ1ZVwiXSc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0VFRScsXG4gICAgICAgIGNvbG9yOiAnIzRGNEY0RidcbiAgICAgIH0sXG5cbiAgICAgICcmIC5hYy1wdXNoQnV0dG9uW2FyaWEtcHJlc3NlZD1cInRydWVcIl0nOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogY2FyZFB1c2hCdXR0b25CYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgIGJvcmRlckNvbG9yOiBjYXJkUHVzaEJ1dHRvbkJhY2tncm91bmRDb2xvcixcbiAgICAgICAgY29sb3I6IGNhcmRQdXNoQnV0dG9uVGV4dENvbG9yXG4gICAgICB9LFxuXG4gICAgICAnJiBpbnB1dFthcmlhLWRpc2FibGVkPVwidHJ1ZVwiXSc6IHtcbiAgICAgICAgcGFkZGluZzogJzJweCAxcHgnXG4gICAgICB9XG4gICAgfVxuICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRWUsd0JBTVk7RUFBQSxJQUx6QkEsNkJBS3lCLFFBTHpCQSw2QkFLeUI7RUFBQSxJQUp6QkMsdUJBSXlCLFFBSnpCQSx1QkFJeUI7RUFBQSxJQUh6QkMsTUFHeUIsUUFIekJBLE1BR3lCO0VBQUEsSUFGekJDLGNBRXlCLFFBRnpCQSxjQUV5QjtFQUFBLElBRHpCQyxXQUN5QixRQUR6QkEsV0FDeUI7RUFDekIsT0FBTztJQUNMLHFDQUFxQztNQUNuQztNQUNBO01BQ0E7TUFDQTtNQUNBLE9BQU87UUFDTEMsU0FBUyxFQUFFO01BRE4sQ0FMNEI7TUFTbkMsa0VBQWtFO1FBQ2hFQyxVQUFVLEVBQUVGO01BRG9ELENBVC9CO01BYW5DLDBCQUEwQjtRQUN4QkcsT0FBTyxFQUFFSjtNQURlLENBYlM7TUFpQm5DLG9CQUFvQjtRQUNsQkssVUFBVSxFQUFFLE1BRE07UUFFbEJDLGVBQWUsRUFBRSxPQUZDO1FBR2xCQyxXQUFXLEVBQUUsT0FISztRQUlsQkMsV0FBVyxFQUFFLENBSks7UUFLbEJDLEtBQUssRUFBRVYsTUFMVztRQU1sQlcsVUFBVSxFQUFFLEdBTk07UUFPbEJOLE9BQU8sRUFBRUo7TUFQUyxDQWpCZTtNQTJCbkMsc0NBQXNDO1FBQ3BDTSxlQUFlLEVBQUUsU0FEbUI7UUFFcENHLEtBQUssRUFBRTtNQUY2QixDQTNCSDtNQWdDbkMsdUZBQXVGO1FBQ3JGSCxlQUFlLEVBQUU7TUFEb0UsQ0FoQ3BEO01Bb0NuQyxtQ0FBbUM7UUFDakNBLGVBQWUsRUFBRSxTQURnQjtRQUVqQ0csS0FBSyxFQUFFO01BRjBCLENBcENBO01BeUNuQyxpRkFBaUY7UUFDL0VILGVBQWUsRUFBRTtNQUQ4RCxDQXpDOUM7TUE2Q25DO01BRUEsbURBQW1EO1FBQ2pELDJCQUEyQjtVQUN6QkEsZUFBZSxFQUFFLDBCQURRO1VBRXpCSyxXQUFXLEVBQUUsMEJBRlk7VUFHekJKLFdBQVcsRUFBRSxPQUhZO1VBSXpCQyxXQUFXLEVBQUUsQ0FKWTtVQUt6QkMsS0FBSyxFQUFFO1FBTGtCO01BRHNCLENBL0NoQjtNQXlEbkMsMENBQTBDO1FBQ3hDSCxlQUFlLEVBQUUsTUFEdUI7UUFFeENHLEtBQUssRUFBRTtNQUZpQyxDQXpEUDtNQThEbkMseUNBQXlDO1FBQ3ZDSCxlQUFlLEVBQUVULDZCQURzQjtRQUV2Q2MsV0FBVyxFQUFFZCw2QkFGMEI7UUFHdkNZLEtBQUssRUFBRVg7TUFIZ0MsQ0E5RE47TUFvRW5DLGlDQUFpQztRQUMvQk0sT0FBTyxFQUFFO01BRHNCO0lBcEVFO0VBRGhDLENBQVA7QUEwRUQifQ==