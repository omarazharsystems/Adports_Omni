export * from './index-minimal';
import { Components as MinimalComponents } from './index-minimal';
import createAdaptiveCardsAttachmentMiddleware from './adaptiveCards/createAdaptiveCardsAttachmentMiddleware';
import createAdaptiveCardsAttachmentForScreenReaderMiddleware from './adaptiveCards/createAdaptiveCardsAttachmentForScreenReaderMiddleware';
import createCognitiveServicesSpeechServicesPonyfillFactory from './createCognitiveServicesSpeechServicesPonyfillFactory';
import createDirectLineSpeechAdapters from './createDirectLineSpeechAdapters';
import createStyleSet from './createFullStyleSet';
import defaultCreateDirectLine from './createDirectLine';
import defaultCreateDirectLineAppServiceExtension from './createDirectLineAppServiceExtension';
import FullBundleStyleOptions, { StrictFullBundleStyleOptions } from './types/FullBundleStyleOptions';
import ReactWebChat from './FullReactWebChat';
import renderMarkdown from './renderMarkdown';
import useAdaptiveCardsHostConfig from './adaptiveCards/hooks/useAdaptiveCardsHostConfig';
import useAdaptiveCardsPackage from './adaptiveCards/hooks/useAdaptiveCardsPackage';
import useStyleOptions from './hooks/useStyleOptions';
declare const renderWebChat: any;
export declare const createDirectLine: (options: Omit<Parameters<typeof defaultCreateDirectLine>[0], 'botAgent'>) => import("botframework-directlinejs").DirectLine;
export declare const createDirectLineAppServiceExtension: (options: Omit<Parameters<typeof defaultCreateDirectLineAppServiceExtension>[0], 'botAgent'>) => Promise<any>;
declare const patchedHooks: {
    useAdaptiveCardsHostConfig: typeof useAdaptiveCardsHostConfig;
    useAdaptiveCardsPackage: typeof useAdaptiveCardsPackage;
    useStyleOptions: typeof useStyleOptions;
    useDictateAbortable: typeof import("botframework-webchat-component/lib/hooks").useDictateAbortable;
    useFocus: typeof import("botframework-webchat-component/lib/hooks").useFocus;
    useFocusSendBox: typeof import("botframework-webchat-component/lib/hooks").useFocusSendBox;
    useMicrophoneButtonClick: typeof import("botframework-webchat-component/lib/SendBox/MicrophoneButton").useMicrophoneButtonClick;
    useMicrophoneButtonDisabled: typeof import("botframework-webchat-component/lib/SendBox/MicrophoneButton").useMicrophoneButtonDisabled;
    useObserveScrollPosition: typeof import("botframework-webchat-component/lib/hooks").useObserveScrollPosition;
    useObserveTranscriptFocus: typeof import("botframework-webchat-component/lib/hooks").useObserveTranscriptFocus;
    useRenderMarkdownAsHTML: typeof import("botframework-webchat-component/lib/hooks").useRenderMarkdownAsHTML;
    useScrollDown: typeof import("botframework-webchat-component/lib/hooks").useScrollDown;
    useScrollTo: typeof import("botframework-webchat-component/lib/hooks").useScrollTo;
    useScrollToEnd: typeof import("botframework-webchat-component/lib/hooks").useScrollToEnd;
    useScrollUp: typeof import("botframework-webchat-component/lib/hooks").useScrollUp;
    useSendBoxSpeechInterimsVisible: typeof import("botframework-webchat-component/lib/BasicSendBox").useSendBoxSpeechInterimsVisible;
    useSendFiles: typeof import("botframework-webchat-component/lib/hooks").useSendFiles;
    useStyleSet: typeof import("botframework-webchat-component/lib/hooks").useStyleSet;
    useTextBoxSubmit: typeof import("botframework-webchat-component/lib/SendBox/TextBox").useTextBoxSubmit;
    useTextBoxValue: typeof import("botframework-webchat-component/lib/SendBox/TextBox").useTextBoxValue;
    useTypingIndicatorVisible: typeof import("botframework-webchat-component/lib/BasicTypingIndicator").useTypingIndicatorVisible;
    useWebSpeechPonyfill: typeof import("botframework-webchat-component/lib/hooks").useWebSpeechPonyfill;
    useActiveTyping: typeof import("botframework-webchat-api/lib/hooks/useActiveTyping").default;
    useActivities: typeof import("botframework-webchat-api/lib/hooks").useActivities;
    useActivityKeys: typeof import("botframework-webchat-api/lib/hooks").useActivityKeys;
    useActivityKeysByRead: typeof import("botframework-webchat-api/lib/hooks").useActivityKeysByRead;
    useAvatarForBot: typeof import("botframework-webchat-api/lib/hooks").useAvatarForBot;
    useAvatarForUser: typeof import("botframework-webchat-api/lib/hooks").useAvatarForUser;
    useByteFormatter: typeof import("botframework-webchat-api/lib/hooks").useByteFormatter;
    useConnectivityStatus: typeof import("botframework-webchat-api/lib/hooks").useConnectivityStatus;
    useCreateActivityRenderer: typeof import("botframework-webchat-api/lib/hooks").useCreateActivityRenderer;
    useCreateActivityStatusRenderer: typeof import("botframework-webchat-api/lib/hooks").useCreateActivityStatusRenderer;
    useCreateAttachmentForScreenReaderRenderer: any;
    useCreateAvatarRenderer: typeof import("botframework-webchat-api/lib/hooks").useCreateAvatarRenderer;
    useCreateScrollToEndButtonRenderer: typeof import("botframework-webchat-api/lib/hooks").useCreateScrollToEndButtonRenderer;
    useDateFormatter: typeof import("botframework-webchat-api/lib/hooks").useDateFormatter;
    useDebouncedNotifications: typeof import("botframework-webchat-api/lib/hooks/useDebouncedNotifications").default;
    useDictateInterims: typeof import("botframework-webchat-api/lib/hooks").useDictateInterims;
    useDictateState: typeof import("botframework-webchat-api/lib/hooks").useDictateState;
    useDirection: typeof import("botframework-webchat-api/lib/hooks").useDirection;
    useDisabled: typeof import("botframework-webchat-api/lib/hooks").useDisabled;
    useDismissNotification: typeof import("botframework-webchat-api/lib/hooks").useDismissNotification;
    useEmitTypingIndicator: typeof import("botframework-webchat-api/lib/hooks").useEmitTypingIndicator;
    useGetActivityByKey: typeof import("botframework-webchat-api/lib/hooks").useGetActivityByKey;
    useGetHasAcknowledgedByActivityKey: typeof import("botframework-webchat-api/lib/hooks").useGetHasAcknowledgedByActivityKey;
    useGetKeyByActivity: typeof import("botframework-webchat-api/lib/hooks").useGetKeyByActivity;
    useGetKeyByActivityId: typeof import("botframework-webchat-api/lib/hooks").useGetKeyByActivityId;
    useGetSendTimeoutForActivity: typeof import("botframework-webchat-api/lib/hooks").useGetSendTimeoutForActivity;
    useGrammars: typeof import("botframework-webchat-api/lib/hooks").useGrammars;
    useGroupActivities: typeof import("botframework-webchat-api/lib/hooks").useGroupActivities;
    useGroupTimestamp: typeof import("botframework-webchat-api/lib/hooks").useGroupTimestamp;
    useLanguage: typeof import("botframework-webchat-api/lib/hooks").useLanguage;
    useLastAcknowledgedActivityKey: typeof import("botframework-webchat-api/lib/hooks").useLastAcknowledgedActivityKey;
    useLastReadActivityKey: typeof import("botframework-webchat-api/lib/hooks").useLastReadActivityKey;
    useLocalizer: typeof import("botframework-webchat-api/lib/hooks").useLocalizer;
    useMarkActivityAsSpoken: typeof import("botframework-webchat-api/lib/hooks").useMarkActivityAsSpoken;
    useMarkActivityKeyAsRead: typeof import("botframework-webchat-api/lib/hooks").useMarkActivityKeyAsRead;
    useMarkAllAsAcknowledged: typeof import("botframework-webchat-api/lib/hooks").useMarkAllAsAcknowledged;
    usePerformCardAction: typeof import("botframework-webchat-api/lib/hooks").usePerformCardAction;
    usePonyfill: typeof import("botframework-webchat-api/lib/hooks").usePonyfill;
    usePostActivity: typeof import("botframework-webchat-api/lib/hooks").usePostActivity;
    useReferenceGrammarID: typeof import("botframework-webchat-api/lib/hooks").useReferenceGrammarID;
    useRelativeTimeFormatter: typeof import("botframework-webchat-api/lib/hooks").useRelativeTimeFormatter;
    useRenderActivity: any;
    useRenderActivityStatus: any;
    useRenderAttachment: any;
    useRenderAvatar: any;
    useRenderToast: typeof import("botframework-webchat-api/lib/hooks").useRenderToast;
    useRenderTypingIndicator: typeof import("botframework-webchat-api/lib/hooks").useRenderTypingIndicator;
    useSendBoxValue: typeof import("botframework-webchat-api/lib/hooks").useSendBoxValue;
    useSendEvent: typeof import("botframework-webchat-api/lib/hooks").useSendEvent;
    useSendMessage: typeof import("botframework-webchat-api/lib/hooks").useSendMessage;
    useSendMessageBack: typeof import("botframework-webchat-api/lib/hooks").useSendMessageBack;
    useSendPostBack: typeof import("botframework-webchat-api/lib/hooks").useSendPostBack;
    useSendStatusByActivityKey: typeof import("botframework-webchat-api/lib/hooks").useSendStatusByActivityKey;
    useSendTimeoutForActivity: typeof import("botframework-webchat-api/lib/hooks").useSendTimeoutForActivity;
    useSendTypingIndicator: typeof import("botframework-webchat-api/lib/hooks").useSendTypingIndicator;
    useSetNotification: typeof import("botframework-webchat-api/lib/hooks").useSetNotification;
    useShouldSpeakIncomingActivity: typeof import("botframework-webchat-api/lib/hooks").useShouldSpeakIncomingActivity;
    useStartDictate: typeof import("botframework-webchat-api/lib/hooks").useStartDictate;
    useStopDictate: typeof import("botframework-webchat-api/lib/hooks").useStopDictate;
    useSubmitSendBox: typeof import("botframework-webchat-api/lib/hooks").useSubmitSendBox;
    useSuggestedActions: typeof import("botframework-webchat-api/lib/hooks").useSuggestedActions;
    useTimeoutForSend: typeof import("botframework-webchat-api/lib/hooks").useTimeoutForSend;
    useTrackDimension: typeof import("botframework-webchat-api/lib/hooks").useTrackDimension;
    useTrackEvent: typeof import("botframework-webchat-api/lib/hooks").useTrackEvent;
    useTrackException: typeof import("botframework-webchat-api/lib/hooks").useTrackException;
    useTrackTiming: typeof import("botframework-webchat-api/lib/hooks").useTrackTiming;
    useUserID: typeof import("botframework-webchat-api/lib/hooks").useUserID;
    useUsername: typeof import("botframework-webchat-api/lib/hooks").useUsername;
    useVoiceSelector: typeof import("botframework-webchat-api/lib/hooks").useVoiceSelector;
};
declare const AdditionalComponents: {
    AdaptiveCardContent: import("react").FC<{
        actionPerformedClassName?: string;
        content: any;
        disabled?: boolean;
    }>;
    AnimationCardContent: import("react").FC<{
        actionPerformedClassName?: string;
        content: import("botframework-webchat-core/lib/types/external/DirectLineAnimationCard").DirectLineAnimationCard;
        disabled?: boolean;
    }>;
    AudioCardContent: import("react").FC<{
        actionPerformedClassName?: string;
        content: import("botframework-webchat-core/lib/types/external/DirectLineAudioCard").DirectLineAudioCard;
        disabled?: boolean;
    }>;
    Composer: import("react").FC<import("./FullComposer").FullComposerProps>;
    HeroCardContent: import("react").FC<{
        actionPerformedClassName?: string;
        content: import("botframework-webchat-core/lib/types/external/DirectLineHeroCard").DirectLineHeroCard;
        disabled?: boolean;
    }>;
    OAuthCardContent: import("react").FC<{
        actionPerformedClassName?: string;
        content: import("botframework-webchat-core/lib/types/external/DirectLineOAuthCard").DirectLineOAuthCard;
        disabled?: boolean;
    }>;
    ReceiptCardContent: import("react").FC<{
        actionPerformedClassName?: string;
        content: import("botframework-webchat-core/lib/types/external/DirectLineReceiptCard").DirectLineReceiptCard;
        disabled?: boolean;
    }>;
    SignInCardContent: import("react").FC<{
        actionPerformedClassName?: string;
        content: import("botframework-webchat-core/lib/types/external/DirectLineSignInCard").DirectLineSignInCard;
        disabled?: boolean;
    }>;
    ThumbnailCardContent: import("react").FC<{
        actionPerformedClassName?: string;
        content: import("botframework-webchat-core/lib/types/external/DirectLineThumbnailCard").DirectLineThumbnailCard;
        disabled?: boolean;
    }>;
    VideoCardContent: import("react").FC<{
        actionPerformedClassName?: string;
        content: import("botframework-webchat-core/lib/types/external/DirectLineMediaCardEssence").DirectLineMediaCardEssence & {
            contentType: "application/vnd.microsoft.card.video";
        } & {
            autoloop?: boolean;
            autostart?: boolean;
            image?: {
                url?: string;
            };
            media?: {
                profile?: string;
                url?: string;
            }[];
        };
        disabled?: boolean;
    }>;
};
declare const Components: typeof MinimalComponents & typeof AdditionalComponents;
type StyleOptions = FullBundleStyleOptions;
type StrictStyleOptions = StrictFullBundleStyleOptions;
export default ReactWebChat;
export { Components, createAdaptiveCardsAttachmentMiddleware, createAdaptiveCardsAttachmentForScreenReaderMiddleware, createCognitiveServicesSpeechServicesPonyfillFactory, createDirectLineSpeechAdapters, createStyleSet, patchedHooks as hooks, renderMarkdown, renderWebChat };
export type { StyleOptions, StrictStyleOptions };
//# sourceMappingURL=index.d.ts.map