"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createCognitiveServicesSpeechServicesPonyfillFactory;

var _SpeechServices = _interopRequireDefault(require("web-speech-cognitive-services/lib/SpeechServices"));

var _createMicrophoneAudioConfigAndAudioContext = _interopRequireDefault(require("./speech/createMicrophoneAudioConfigAndAudioContext"));

function createCognitiveServicesSpeechServicesPonyfillFactory(_ref) {
  var audioConfig = _ref.audioConfig,
      audioContext = _ref.audioContext,
      audioInputDeviceId = _ref.audioInputDeviceId,
      credentials = _ref.credentials,
      enableTelemetry = _ref.enableTelemetry,
      speechRecognitionEndpointId = _ref.speechRecognitionEndpointId,
      speechSynthesisDeploymentId = _ref.speechSynthesisDeploymentId,
      speechSynthesisOutputFormat = _ref.speechSynthesisOutputFormat,
      textNormalization = _ref.textNormalization;

  if (!window.navigator.mediaDevices && !audioConfig) {
    console.warn('botframework-webchat: Your browser does not support Web Audio or the page is not loaded via HTTPS or localhost. Cognitive Services Speech Services is disabled. However, you may pass a custom AudioConfig to enable speech in this environment.');
    return function () {
      return {};
    };
  }

  if (audioConfig) {
    audioInputDeviceId && console.warn('botframework-webchat: "audioConfig" and "audioInputDeviceId" cannot be set at the same time; ignoring "audioInputDeviceId".');
    audioContext && console.warn('botframework-webchat: "audioConfig" and "audioContext" cannot be set at the same time; ignoring "audioContext" for speech recognition.');
  } else {
    var _createMicrophoneAudi = (0, _createMicrophoneAudioConfigAndAudioContext.default)({
      audioContext: audioContext,
      audioInputDeviceId: audioInputDeviceId,
      enableTelemetry: enableTelemetry
    });

    audioConfig = _createMicrophoneAudi.audioConfig;
    audioContext = _createMicrophoneAudi.audioContext;
  }

  return function () {
    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        referenceGrammarID = _ref2.referenceGrammarID;

    var _createPonyfill = (0, _SpeechServices.default)({
      audioConfig: audioConfig,
      audioContext: audioContext,
      credentials: credentials,
      enableTelemetry: enableTelemetry,
      referenceGrammars: referenceGrammarID ? ["luis/".concat(referenceGrammarID, "-PRODUCTION")] : [],
      speechRecognitionEndpointId: speechRecognitionEndpointId,
      speechSynthesisDeploymentId: speechSynthesisDeploymentId,
      speechSynthesisOutputFormat: speechSynthesisOutputFormat,
      textNormalization: textNormalization
    }),
        SpeechGrammarList = _createPonyfill.SpeechGrammarList,
        SpeechRecognition = _createPonyfill.SpeechRecognition,
        speechSynthesis = _createPonyfill.speechSynthesis,
        SpeechSynthesisUtterance = _createPonyfill.SpeechSynthesisUtterance;

    return {
      resumeAudioContext: function resumeAudioContext() {
        return audioContext && audioContext.state === 'suspended' && audioContext.resume();
      },
      SpeechGrammarList: SpeechGrammarList,
      SpeechRecognition: SpeechRecognition,
      speechSynthesis: speechSynthesis,
      SpeechSynthesisUtterance: SpeechSynthesisUtterance
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVDb2duaXRpdmVTZXJ2aWNlc1NwZWVjaFNlcnZpY2VzUG9ueWZpbGxGYWN0b3J5IiwiYXVkaW9Db25maWciLCJhdWRpb0NvbnRleHQiLCJhdWRpb0lucHV0RGV2aWNlSWQiLCJjcmVkZW50aWFscyIsImVuYWJsZVRlbGVtZXRyeSIsInNwZWVjaFJlY29nbml0aW9uRW5kcG9pbnRJZCIsInNwZWVjaFN5bnRoZXNpc0RlcGxveW1lbnRJZCIsInNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdCIsInRleHROb3JtYWxpemF0aW9uIiwid2luZG93IiwibmF2aWdhdG9yIiwibWVkaWFEZXZpY2VzIiwiY29uc29sZSIsIndhcm4iLCJjcmVhdGVNaWNyb3Bob25lQXVkaW9Db25maWdBbmRBdWRpb0NvbnRleHQiLCJyZWZlcmVuY2VHcmFtbWFySUQiLCJjcmVhdGVQb255ZmlsbCIsInJlZmVyZW5jZUdyYW1tYXJzIiwiU3BlZWNoR3JhbW1hckxpc3QiLCJTcGVlY2hSZWNvZ25pdGlvbiIsInNwZWVjaFN5bnRoZXNpcyIsIlNwZWVjaFN5bnRoZXNpc1V0dGVyYW5jZSIsInJlc3VtZUF1ZGlvQ29udGV4dCIsInN0YXRlIiwicmVzdW1lIl0sInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlcyI6WyIuLi9zcmMvY3JlYXRlQ29nbml0aXZlU2VydmljZXNTcGVlY2hTZXJ2aWNlc1BvbnlmaWxsRmFjdG9yeS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdWRpb0NvbmZpZyB9IGZyb20gJ21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrJztcbmltcG9ydCB7IFdlYlNwZWVjaFBvbnlmaWxsRmFjdG9yeSB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgY3JlYXRlUG9ueWZpbGwgZnJvbSAnd2ViLXNwZWVjaC1jb2duaXRpdmUtc2VydmljZXMvbGliL1NwZWVjaFNlcnZpY2VzJztcblxuaW1wb3J0IENvZ25pdGl2ZVNlcnZpY2VzQXVkaW9PdXRwdXRGb3JtYXQgZnJvbSAnLi90eXBlcy9Db2duaXRpdmVTZXJ2aWNlc0F1ZGlvT3V0cHV0Rm9ybWF0JztcbmltcG9ydCBDb2duaXRpdmVTZXJ2aWNlc0NyZWRlbnRpYWxzIGZyb20gJy4vdHlwZXMvQ29nbml0aXZlU2VydmljZXNDcmVkZW50aWFscyc7XG5pbXBvcnQgQ29nbml0aXZlU2VydmljZXNUZXh0Tm9ybWFsaXphdGlvbiBmcm9tICcuL3R5cGVzL0NvZ25pdGl2ZVNlcnZpY2VzVGV4dE5vcm1hbGl6YXRpb24nO1xuaW1wb3J0IGNyZWF0ZU1pY3JvcGhvbmVBdWRpb0NvbmZpZ0FuZEF1ZGlvQ29udGV4dCBmcm9tICcuL3NwZWVjaC9jcmVhdGVNaWNyb3Bob25lQXVkaW9Db25maWdBbmRBdWRpb0NvbnRleHQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVDb2duaXRpdmVTZXJ2aWNlc1NwZWVjaFNlcnZpY2VzUG9ueWZpbGxGYWN0b3J5KHtcbiAgYXVkaW9Db25maWcsXG4gIGF1ZGlvQ29udGV4dCxcbiAgYXVkaW9JbnB1dERldmljZUlkLFxuICBjcmVkZW50aWFscyxcbiAgZW5hYmxlVGVsZW1ldHJ5LFxuICBzcGVlY2hSZWNvZ25pdGlvbkVuZHBvaW50SWQsXG4gIHNwZWVjaFN5bnRoZXNpc0RlcGxveW1lbnRJZCxcbiAgc3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LFxuICB0ZXh0Tm9ybWFsaXphdGlvblxufToge1xuICBhdWRpb0NvbmZpZz86IEF1ZGlvQ29uZmlnO1xuICBhdWRpb0NvbnRleHQ/OiBBdWRpb0NvbnRleHQ7XG4gIGF1ZGlvSW5wdXREZXZpY2VJZD86IHN0cmluZztcbiAgY3JlZGVudGlhbHM6IENvZ25pdGl2ZVNlcnZpY2VzQ3JlZGVudGlhbHM7XG4gIGVuYWJsZVRlbGVtZXRyeT86IHRydWU7XG4gIHNwZWVjaFJlY29nbml0aW9uRW5kcG9pbnRJZD86IHN0cmluZztcbiAgc3BlZWNoU3ludGhlc2lzRGVwbG95bWVudElkPzogc3RyaW5nO1xuICBzcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQ/OiBDb2duaXRpdmVTZXJ2aWNlc0F1ZGlvT3V0cHV0Rm9ybWF0O1xuICB0ZXh0Tm9ybWFsaXphdGlvbj86IENvZ25pdGl2ZVNlcnZpY2VzVGV4dE5vcm1hbGl6YXRpb247XG59KTogV2ViU3BlZWNoUG9ueWZpbGxGYWN0b3J5IHtcbiAgaWYgKCF3aW5kb3cubmF2aWdhdG9yLm1lZGlhRGV2aWNlcyAmJiAhYXVkaW9Db25maWcpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICAnYm90ZnJhbWV3b3JrLXdlYmNoYXQ6IFlvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IFdlYiBBdWRpbyBvciB0aGUgcGFnZSBpcyBub3QgbG9hZGVkIHZpYSBIVFRQUyBvciBsb2NhbGhvc3QuIENvZ25pdGl2ZSBTZXJ2aWNlcyBTcGVlY2ggU2VydmljZXMgaXMgZGlzYWJsZWQuIEhvd2V2ZXIsIHlvdSBtYXkgcGFzcyBhIGN1c3RvbSBBdWRpb0NvbmZpZyB0byBlbmFibGUgc3BlZWNoIGluIHRoaXMgZW52aXJvbm1lbnQuJ1xuICAgICk7XG5cbiAgICByZXR1cm4gKCkgPT4gKHt9KTtcbiAgfVxuXG4gIGlmIChhdWRpb0NvbmZpZykge1xuICAgIGF1ZGlvSW5wdXREZXZpY2VJZCAmJlxuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAnYm90ZnJhbWV3b3JrLXdlYmNoYXQ6IFwiYXVkaW9Db25maWdcIiBhbmQgXCJhdWRpb0lucHV0RGV2aWNlSWRcIiBjYW5ub3QgYmUgc2V0IGF0IHRoZSBzYW1lIHRpbWU7IGlnbm9yaW5nIFwiYXVkaW9JbnB1dERldmljZUlkXCIuJ1xuICAgICAgKTtcblxuICAgIGF1ZGlvQ29udGV4dCAmJlxuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAnYm90ZnJhbWV3b3JrLXdlYmNoYXQ6IFwiYXVkaW9Db25maWdcIiBhbmQgXCJhdWRpb0NvbnRleHRcIiBjYW5ub3QgYmUgc2V0IGF0IHRoZSBzYW1lIHRpbWU7IGlnbm9yaW5nIFwiYXVkaW9Db250ZXh0XCIgZm9yIHNwZWVjaCByZWNvZ25pdGlvbi4nXG4gICAgICApO1xuICB9IGVsc2Uge1xuICAgICh7IGF1ZGlvQ29uZmlnLCBhdWRpb0NvbnRleHQgfSA9IGNyZWF0ZU1pY3JvcGhvbmVBdWRpb0NvbmZpZ0FuZEF1ZGlvQ29udGV4dCh7XG4gICAgICBhdWRpb0NvbnRleHQsXG4gICAgICBhdWRpb0lucHV0RGV2aWNlSWQsXG4gICAgICBlbmFibGVUZWxlbWV0cnlcbiAgICB9KSk7XG4gIH1cblxuICByZXR1cm4gKHsgcmVmZXJlbmNlR3JhbW1hcklEIH0gPSB7fSkgPT4ge1xuICAgIGNvbnN0IHsgU3BlZWNoR3JhbW1hckxpc3QsIFNwZWVjaFJlY29nbml0aW9uLCBzcGVlY2hTeW50aGVzaXMsIFNwZWVjaFN5bnRoZXNpc1V0dGVyYW5jZSB9ID0gY3JlYXRlUG9ueWZpbGwoe1xuICAgICAgYXVkaW9Db25maWcsXG4gICAgICBhdWRpb0NvbnRleHQsXG4gICAgICBjcmVkZW50aWFscyxcbiAgICAgIGVuYWJsZVRlbGVtZXRyeSxcbiAgICAgIHJlZmVyZW5jZUdyYW1tYXJzOiByZWZlcmVuY2VHcmFtbWFySUQgPyBbYGx1aXMvJHtyZWZlcmVuY2VHcmFtbWFySUR9LVBST0RVQ1RJT05gXSA6IFtdLFxuICAgICAgc3BlZWNoUmVjb2duaXRpb25FbmRwb2ludElkLFxuICAgICAgc3BlZWNoU3ludGhlc2lzRGVwbG95bWVudElkLFxuICAgICAgc3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LFxuICAgICAgdGV4dE5vcm1hbGl6YXRpb25cbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICByZXN1bWVBdWRpb0NvbnRleHQ6ICgpID0+IGF1ZGlvQ29udGV4dCAmJiBhdWRpb0NvbnRleHQuc3RhdGUgPT09ICdzdXNwZW5kZWQnICYmIGF1ZGlvQ29udGV4dC5yZXN1bWUoKSxcbiAgICAgIFNwZWVjaEdyYW1tYXJMaXN0LFxuICAgICAgU3BlZWNoUmVjb2duaXRpb24sXG4gICAgICBzcGVlY2hTeW50aGVzaXMsXG4gICAgICBTcGVlY2hTeW50aGVzaXNVdHRlcmFuY2VcbiAgICB9O1xuICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFQTs7QUFLQTs7QUFFZSxTQUFTQSxvREFBVCxPQW9CYztFQUFBLElBbkIzQkMsV0FtQjJCLFFBbkIzQkEsV0FtQjJCO0VBQUEsSUFsQjNCQyxZQWtCMkIsUUFsQjNCQSxZQWtCMkI7RUFBQSxJQWpCM0JDLGtCQWlCMkIsUUFqQjNCQSxrQkFpQjJCO0VBQUEsSUFoQjNCQyxXQWdCMkIsUUFoQjNCQSxXQWdCMkI7RUFBQSxJQWYzQkMsZUFlMkIsUUFmM0JBLGVBZTJCO0VBQUEsSUFkM0JDLDJCQWMyQixRQWQzQkEsMkJBYzJCO0VBQUEsSUFiM0JDLDJCQWEyQixRQWIzQkEsMkJBYTJCO0VBQUEsSUFaM0JDLDJCQVkyQixRQVozQkEsMkJBWTJCO0VBQUEsSUFYM0JDLGlCQVcyQixRQVgzQkEsaUJBVzJCOztFQUMzQixJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsWUFBbEIsSUFBa0MsQ0FBQ1gsV0FBdkMsRUFBb0Q7SUFDbERZLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLGtQQURGO0lBSUEsT0FBTztNQUFBLE9BQU8sRUFBUDtJQUFBLENBQVA7RUFDRDs7RUFFRCxJQUFJYixXQUFKLEVBQWlCO0lBQ2ZFLGtCQUFrQixJQUNoQlUsT0FBTyxDQUFDQyxJQUFSLENBQ0UsNkhBREYsQ0FERjtJQUtBWixZQUFZLElBQ1ZXLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLHdJQURGLENBREY7RUFJRCxDQVZELE1BVU87SUFBQSw0QkFDNEIsSUFBQUMsbURBQUEsRUFBMkM7TUFDMUViLFlBQVksRUFBWkEsWUFEMEU7TUFFMUVDLGtCQUFrQixFQUFsQkEsa0JBRjBFO01BRzFFRSxlQUFlLEVBQWZBO0lBSDBFLENBQTNDLENBRDVCOztJQUNGSixXQURFLHlCQUNGQSxXQURFO0lBQ1dDLFlBRFgseUJBQ1dBLFlBRFg7RUFNTjs7RUFFRCxPQUFPLFlBQWlDO0lBQUEsZ0ZBQVAsRUFBTztJQUFBLElBQTlCYyxrQkFBOEIsU0FBOUJBLGtCQUE4Qjs7SUFDdEMsc0JBQTRGLElBQUFDLHVCQUFBLEVBQWU7TUFDekdoQixXQUFXLEVBQVhBLFdBRHlHO01BRXpHQyxZQUFZLEVBQVpBLFlBRnlHO01BR3pHRSxXQUFXLEVBQVhBLFdBSHlHO01BSXpHQyxlQUFlLEVBQWZBLGVBSnlHO01BS3pHYSxpQkFBaUIsRUFBRUYsa0JBQWtCLEdBQUcsZ0JBQVNBLGtCQUFULGlCQUFILEdBQStDLEVBTHFCO01BTXpHViwyQkFBMkIsRUFBM0JBLDJCQU55RztNQU96R0MsMkJBQTJCLEVBQTNCQSwyQkFQeUc7TUFRekdDLDJCQUEyQixFQUEzQkEsMkJBUnlHO01BU3pHQyxpQkFBaUIsRUFBakJBO0lBVHlHLENBQWYsQ0FBNUY7SUFBQSxJQUFRVSxpQkFBUixtQkFBUUEsaUJBQVI7SUFBQSxJQUEyQkMsaUJBQTNCLG1CQUEyQkEsaUJBQTNCO0lBQUEsSUFBOENDLGVBQTlDLG1CQUE4Q0EsZUFBOUM7SUFBQSxJQUErREMsd0JBQS9ELG1CQUErREEsd0JBQS9EOztJQVlBLE9BQU87TUFDTEMsa0JBQWtCLEVBQUU7UUFBQSxPQUFNckIsWUFBWSxJQUFJQSxZQUFZLENBQUNzQixLQUFiLEtBQXVCLFdBQXZDLElBQXNEdEIsWUFBWSxDQUFDdUIsTUFBYixFQUE1RDtNQUFBLENBRGY7TUFFTE4saUJBQWlCLEVBQWpCQSxpQkFGSztNQUdMQyxpQkFBaUIsRUFBakJBLGlCQUhLO01BSUxDLGVBQWUsRUFBZkEsZUFKSztNQUtMQyx3QkFBd0IsRUFBeEJBO0lBTEssQ0FBUDtFQU9ELENBcEJEO0FBcUJEIn0=