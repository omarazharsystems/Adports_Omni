import { AttachmentForScreenReaderMiddleware, AttachmentMiddleware, StyleOptions } from 'botframework-webchat-api';
import { OneOrMany } from 'botframework-webchat-core';
import { FC, ReactNode } from 'react';
import { StrictFullBundleStyleOptions } from './types/FullBundleStyleOptions';
import AdaptiveCardsPackage from './types/AdaptiveCardsPackage';
import AdaptiveCardsStyleOptions from './adaptiveCards/AdaptiveCardsStyleOptions';
type AddFullBundleProps = {
    adaptiveCardsHostConfig?: any;
    adaptiveCardsPackage?: AdaptiveCardsPackage;
    attachmentForScreenReaderMiddleware?: OneOrMany<AttachmentForScreenReaderMiddleware>;
    attachmentMiddleware?: OneOrMany<AttachmentMiddleware>;
    children: ({ extraStyleSet }: {
        extraStyleSet: any;
    }) => ReactNode;
    renderMarkdown?: (markdown: string, newLineOptions: {
        markdownRespectCRLF: boolean;
    }, linkOptions: {
        externalLinkAlt: string;
    }) => string;
    styleOptions?: StyleOptions & AdaptiveCardsStyleOptions;
    styleSet?: any & {
        options: StrictFullBundleStyleOptions;
    };
    /** @deprecated Rename to "adaptiveCardsHostConfig" */
    adaptiveCardHostConfig?: any;
};
declare const AddFullBundle: FC<AddFullBundleProps>;
export default AddFullBundle;
export type { AddFullBundleProps };
//# sourceMappingURL=AddFullBundle.d.ts.map